import{e as F,a as K}from"./Accessor-815cb0cf.js";import{i as E}from"./cimAnalyzer-e9209d50.js";import"./Error-781981d1.js";import"./string-75082bc6.js";import{y as I,t as v,r as S,h as P,g as L}from"./typedArrayUtil-74bbfd45.js";import{j as R,f as b}from"./promiseUtils-28f2a985.js";import"./ensureType-125d327f.js";import{m as A,a as x}from"./diffUtils-0b07ec68.js";import{f as O}from"./Extent-8fae2379.js";import{p as U}from"./visualVariablesUtils-c19b01f0.js";import{S as z}from"./enums-b1d611e3.js";import{x as B,o as k,n as j,E as H,b as J}from"./Matcher-207a08b0.js";import{p as N}from"./BaseProcessor-489bff05.js";import"./watch-c7facfb0.js";import"./ArrayPool-ae2ef0ab.js";import"./nextTick-3ee5a785.js";import"./Color-5e799d63.js";import"./colorUtils-639f4d25.js";import"./mathUtils-15f63a45.js";import"./fontUtils-dae2860f.js";import"./screenUtils-7afeb41c.js";import"./fieldUtils-39eb4f5d.js";import"./preload-helper-101896b7.js";import"./geometry-0d19f94b.js";import"./Polyline-40b9e769.js";import"./typeUtils-3bf84b36.js";import"./cast-f7d2a22f.js";import"./BidiEngine-836b7ef6.js";import"./aaBoundingRect-3cd21eb0.js";import"./jsonUtils-15ca15d7.js";import"./GeometryUtils-53652037.js";import"./enums-4b2a86a0.js";import"./utils-709f2b59.js";import"./alignmentUtils-ae955d28.js";import"./definitions-19bfb61c.js";import"./mat2d-68947564.js";import"./vec2-4c517306.js";import"./vec2f32-eaf29605.js";import"./number-b10bd8f5.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-158f275c.js";import"./floatRGBA-047cef41.js";import"./Collection-912f4315.js";import"./Evented-3dfb26f2.js";import"./SimpleObservable-729c9019.js";import"./JSONSupport-2b897629.js";import"./color-e7189c96.js";import"./enums-64ab819c.js";import"./VertexElementDescriptor-2925c6af.js";import"./visualVariablesUtils-87145551.js";import"./TileStrategy-56172cce.js";import"./TileStore-53c9ad86.js";import"./Queue-687500af.js";import"./TileKey-e007f54a.js";import"./rbush-f2a85c98.js";import"./quickselect-56c5966e.js";import"./Query-4c66990d.js";import"./TimeExtent-202e4138.js";import"./enumeration-94b1319d.js";import"./DataLayerSource-3a7a94c9.js";import"./Field-7770b57d.js";import"./fieldType-e429d020.js";import"./FullTextSearch-da95615f.js";import"./Clonable-6d5134c7.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-860a168c.js";import"./assets-fff829c9.js";import"./request-b4e08038.js";import"./MaterialKey-34911e37.js";import"./featureConversionUtils-55a32b06.js";import"./aaBoundingBox-5e14079b.js";import"./OptimizedFeature-6cca5f48.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./defaultsJSON-b087dd4d.js";import"./GeometryUtils-dd03fc25.js";import"./earcut-61f7b102.js";import"./LRUCache-425021b3.js";import"./MemCache-9d81d118.js";import"./ExpandedCIM-71cc43f8.js";import"./devEnvironmentUtils-5002a058.js";import"./Portal-0799d17c.js";import"./Loadable-6776e4d9.js";import"./Promise-092442f7.js";import"./locale-30120714.js";import"./PortalGroup-d3a43002.js";import"./PortalUser-092553f2.js";import"./persistableUrlUtils-5532b98d.js";import"./styleUtils-2aef9fa3.js";import"./HandleOwner-124247b4.js";import"./reactiveUtils-31da19f9.js";class V{constructor(e){this._remoteClient=e,this._resourceMap=new Map,this._inFlightResourceMap=new Map,this.geometryEngine=null,this.geometryEnginePromise=null}destroy(){}async fetchResource(e,i){const r=this._resourceMap,s=r.get(e);if(s)return s;let o=this._inFlightResourceMap.get(e);if(o)return o;try{o=this._remoteClient.invoke("tileRenderer.fetchResource",{url:e},{...i}),this._inFlightResourceMap.set(e,o),o.then(a=>(this._inFlightResourceMap.delete(e),r.set(e,a),a))}catch(a){return R(a)?null:{width:0,height:0}}return o}getResource(e){return this._resourceMap.get(e)??null}}function D(t,e){return(!t.minScale||t.minScale>=e)&&(!t.maxScale||t.maxScale<=e)}function C(t){const e=t.message,i={message:{data:{},tileKey:e.tileKey,tileKeyOrigin:e.tileKeyOrigin,version:e.version},transferList:new Array};for(const r in e.data){const s=e.data[r];if(i.message.data[r]=null,S(s)){const o=s.stride,a=s.indices.slice(0),n=s.vertices.slice(0),m=s.records.slice(0),p={stride:o,indices:a,vertices:n,records:m,metrics:I(s.metrics,c=>c.slice(0))};i.transferList.push(a,n,m),i.message.data[r]=p}}return i}let w=class extends N{constructor(){super(...arguments),this.type="symbol",this._matchers={feature:null,aggregate:null},this._bufferData=new Map,this._bufferIds=new Map}initialize(){this.handles.add([this.tileStore.on("update",this.onTileUpdate.bind(this))]),this._resourceManagerProxy=new V(this.remoteClient)}destroy(){this._resourceManagerProxy.destroy()}get supportsTileUpdates(){return!0}forEachBufferId(t){this._bufferIds.forEach(e=>{e.forEach(t)})}async update(t,e){var s;const i=e.schema.processors[0];if(i.type!=="symbol")return;const r=A(this._schema,i);(x(r,"mesh")||x(r,"target"))&&(t.mesh=!0,(s=t.why)==null||s.mesh.push("Symbology changed"),this._schema=i,this._factory=this._createFactory(i),this._factory.update(i,this.tileStore.tileScheme.tileInfo))}onTileMessage(t,e,i,r){return b(r),this._onTileData(t,e,i,r)}onTileClear(t){const e={clear:!0};return this._bufferData.delete(t.key.id),this._bufferIds.delete(t.key.id),this.remoteClient.invoke("tileRenderer.onTileData",{tileKey:t.id,data:e})}onTileError(t,e,i){const r=i.signal,s={tileKey:t.id,error:e};return this.remoteClient.invoke("tileRenderer.onTileError",s,{signal:r})}onTileUpdate(t){for(const e of t.removed)this._bufferData.has(e.key.id)&&this._bufferData.delete(e.key.id),this._bufferIds.has(e.key.id)&&this._bufferIds.delete(e.key.id);for(const e of t.added)this._bufferData.forEach(i=>{for(const r of i)r.message.tileKey===e.id&&this._updateTileMesh("append",e,C(r),[],!1,!1,null)})}_addBufferData(t,e){var i;this._bufferData.has(t)||this._bufferData.set(t,[]),(i=this._bufferData.get(t))==null||i.push(C(e))}_createFactory(t){const{geometryType:e,objectIdField:i,fields:r}=this.service,s=(p,c)=>this.remoteClient.invoke("tileRenderer.getMaterialItems",p,c),o={geometryType:e,fields:r,spatialReference:O.fromJSON(this.spatialReference)},a=new B(s,this.tileStore.tileScheme.tileInfo),{matcher:n,aggregateMatcher:m}=t.mesh;return this._store=a,this._matchers.feature=k(n,a,o,this._resourceManagerProxy),this._matchers.aggregate=I(m,p=>k(p,a,o,this._resourceManagerProxy)),new j(e,i,a)}async _onTileData(t,e,i,r){var u;b(r);const{type:s,addOrUpdate:o,remove:a,clear:n,end:m}=e,p=!!this._schema.mesh.sortKey;if(!o){const h={type:s,addOrUpdate:null,remove:a,clear:n,end:m,sort:p};return this.remoteClient.invoke("tileRenderer.onTileData",{tileKey:t.id,data:h},r)}const c=this._processFeatures(t,o,i,r,(u=e.status)==null?void 0:u.version);try{const h=await c;if(v(h)){const l={type:s,addOrUpdate:null,remove:a,clear:n,end:m,sort:p};return this.remoteClient.invoke("tileRenderer.onTileData",{tileKey:t.id,data:l},r)}const d=[];for(const l of h){let f=!1;const g=l.message.bufferIds,y=t.key.id,M=l.message.tileKey;if(y!==M&&S(g)){if(!this.tileStore.get(M)){this._addBufferData(y,l),d.push(l);continue}let _=this._bufferIds.get(M);_||(_=new Set,this._bufferIds.set(M,_));const $=Array.from(g);for(const T of $){if(_.has(T)){f=!0;break}_.add(T)}}f||(this._addBufferData(y,l),d.push(l))}await Promise.all(d.map(l=>{const f=t.key.id===l.message.tileKey,g=f?e.remove:[],y=f&&e.end;return this._updateTileMesh(s,t,l,g,y,!!e.clear,r.signal)}))}catch(h){this._handleError(t,h,r)}}async _updateTileMesh(t,e,i,r,s,o,a){const n=t,m=i.message.tileKey,p=!!this._schema.mesh.sortKey;m!==e.key.id&&(s=!1);const c=I(i,l=>l.message),u=I(i,l=>l.transferList)||[],h={type:n,addOrUpdate:c,remove:r,clear:o,end:s,sort:p},d={transferList:L(u)||[],signal:a};return b(d),this.remoteClient.invoke("tileRenderer.onTileData",{tileKey:m,data:h},d)}async _processFeatures(t,e,i,r,s){if(v(e)||!e.hasFeatures)return null;const o={transform:t.transform,hasZ:!1,hasM:!1},a=this._factory,n={viewingMode:"",scale:t.scale},m=await this._matchers.feature,p=await this._matchers.aggregate;b(r);const c=this._getLabelInfos(t,e);return await a.analyze(e.getCursor(),this._resourceManagerProxy,m,p,o,n),b(r),this._writeFeatureSet(t,e,o,c,a,i,s)}_writeFeatureSet(t,e,i,r,s,o,a){const n=e.getSize(),m=this._schema.mesh.matcher.symbologyType,p=new H(t.key.id,{features:n,records:n,metrics:0},m,o,m!==z.HEATMAP,a),c={viewingMode:"",scale:t.scale},u=e.getCursor();for(;u.next();)try{const d=u.getDisplayId(),l=S(r)?r.get(d):null;s.writeCursor(p,u,i,c,t.level,l,this._resourceManagerProxy)}catch{}const h=t.tileInfoView.tileInfo.isWrappable;return p.serialize(h)}_handleError(t,e,i){if(!R(e)){const r={tileKey:t.id,error:e.message};return this.remoteClient.invoke("tileRenderer.onTileError",r,{signal:i.signal})}return Promise.resolve()}_getLabelingSchemaForScale(t){const e=this._schema.mesh.labels;if(v(e))return null;if(e.type==="subtype"){const r={type:"subtype",classes:{}};let s=!1;for(const o in e.classes){const a=e.classes[o].filter(n=>D(n,t.scale));s=s||!!a.length,r.classes[o]=a}return s?r:null}const i=e.classes.filter(r=>D(r,t.scale));return i.length?{type:"simple",classes:i}:null}_getLabels(t,e){if(e.type==="subtype"){const i=this.service.subtypeField,r=P(i,"Expected to find subtype Field"),s=t.readAttribute(r);return s==null?[]:e.classes[s]??[]}return e.classes}_getLabelInfos(t,e){const i=this._getLabelingSchemaForScale(t);if(v(i))return null;const r=new Map,s=e.getCursor();for(;s.next();){const o=s.getDisplayId(),a=[],n=U(o),m=n&&s.readAttribute("cluster_count")!==1?"aggregate":"feature",p=this._getLabels(s,i);for(const c of p){if(c.target!==m)continue;const u=s.getStorage(),h=n&&m==="feature"?u.getComputedStringAtIndex(s.readAttribute("referenceId"),c.fieldIndex):u.getComputedStringAtIndex(o,c.fieldIndex);if(!h)continue;const d=E(h.toString()),l=d[0],f=d[1];this._store.getMosaicItem(c.symbol,J(l)).then(g=>{a[c.index]={glyphs:g.glyphMosaicItems??[],rtl:f,index:c.index}})}r.set(o,a)}return r}};w=F([K("esri.views.2d.layers.features.processors.SymbolProcessor")],w);const Ct=w;export{Ct as default};
