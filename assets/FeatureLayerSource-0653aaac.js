import{e as T,y as j,a as C}from"./Accessor-815cb0cf.js";import"./geometry-0d19f94b.js";import{g as G}from"./Graphic-f65f3c78.js";import{U as h,V as J,o as D}from"./request-b4e08038.js";import{T as P}from"./TimeExtent-202e4138.js";import{a as I}from"./Error-781981d1.js";import{a as U,o as L}from"./string-75082bc6.js";import{a as M}from"./cast-f7d2a22f.js";import{m as z}from"./Loadable-6776e4d9.js";import{r as y,t as A,g as V}from"./typedArrayUtil-74bbfd45.js";import{x as $}from"./promiseUtils-28f2a985.js";import"./ensureType-125d327f.js";import{w as B,f as X}from"./Extent-8fae2379.js";import{v as Y}from"./jsonUtils-15ca15d7.js";import{E as Z}from"./assetEditingSupport-2cebf928.js";import{o as H}from"./clientSideDefaults-ad9d2f09.js";import{x as K}from"./QueryTask-fb05d7f5.js";import{g as W}from"./arcgisLayerUrl-90607db0.js";import{i as ee}from"./editsZScale-884a3138.js";import"./watch-c7facfb0.js";import"./ArrayPool-ae2ef0ab.js";import"./nextTick-3ee5a785.js";import"./Polyline-40b9e769.js";import"./typeUtils-3bf84b36.js";import"./PopupTemplate-a7832b3e.js";import"./Clonable-6d5134c7.js";import"./Collection-912f4315.js";import"./Evented-3dfb26f2.js";import"./SimpleObservable-729c9019.js";import"./JSONSupport-2b897629.js";import"./fieldUtils-39eb4f5d.js";import"./preload-helper-101896b7.js";import"./enumeration-94b1319d.js";import"./number-5e819186.js";import"./locale-30120714.js";import"./ActionToggle-dc9b6fc6.js";import"./Identifiable-f5397426.js";import"./symbols-d9f90967.js";import"./CIMSymbol-2f4be01b.js";import"./Color-5e799d63.js";import"./colorUtils-639f4d25.js";import"./mathUtils-15f63a45.js";import"./screenUtils-7afeb41c.js";import"./opacityUtils-107b33de.js";import"./symbolLayerUtils3D-15190f75.js";import"./aaBoundingBox-5e14079b.js";import"./persistableUrlUtils-5532b98d.js";import"./collectionUtils-5a99c1c0.js";import"./Portal-0799d17c.js";import"./PortalGroup-d3a43002.js";import"./PortalUser-092553f2.js";import"./Promise-092442f7.js";import"./QueryEngineCapabilities-42e44ded.js";import"./defaultsJSON-b087dd4d.js";import"./DataLayerSource-3a7a94c9.js";import"./Field-7770b57d.js";import"./fieldType-e429d020.js";import"./utils-14667ccd.js";import"./executeForIds-0df88006.js";import"./query-562d04e7.js";import"./normalizeUtils-53d1a4f1.js";import"./normalizeUtilsCommon-04cad10b.js";import"./utils-067ee6bc.js";import"./urlUtils-6a004888.js";import"./pbfQueryUtils-9730bd74.js";import"./pbf-c0fe6550.js";import"./OptimizedFeature-6cca5f48.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./queryZScale-e2b48f65.js";import"./zscale-a617710a.js";import"./Query-4c66990d.js";import"./FullTextSearch-da95615f.js";import"./executeQueryJSON-b8916532.js";import"./FeatureSet-a2f9f6a7.js";import"./featureConversionUtils-55a32b06.js";import"./aaBoundingRect-3cd21eb0.js";const te=new M({originalAndCurrentFeatures:"original-and-current-features",none:"none"});async function k(t){return typeof t=="string"?D(t)||{data:t}:new Promise((e,a)=>{const r=new FileReader;r.readAsDataURL(t),r.onload=()=>e(D(r.result)),r.onerror=s=>a(s)})}const se=new Set(["Feature Layer","Table"]),ae=new M({Started:"published",Publishing:"publishing",Stopped:"unavailable"});let q=class extends z{constructor(){super(...arguments),this.type="feature-layer",this.refresh=$(async()=>{var a,r;await this.load();const t=(a=this.sourceJSON.editingInfo)==null?void 0:a.lastEditDate;if(t==null)return{dataChanged:!0,updates:{}};try{await this._fetchService(null)}catch{return{dataChanged:!0,updates:{}}}const e=t!==((r=this.sourceJSON.editingInfo)==null?void 0:r.lastEditDate);return{dataChanged:e,updates:e?{editingInfo:this.sourceJSON.editingInfo,extent:this.sourceJSON.extent}:null}})}load(t){const e=y(t)?t.signal:null,a=this.layer.sourceJSON;return this.addResolvingPromise(this._fetchService(a,e)),Promise.resolve(this)}get queryTask(){var n;const{capabilities:t,parsedUrl:e,dynamicDataSource:a,infoFor3D:r,gdbVersion:s,spatialReference:i,fieldsIndex:o}=this.layer,u=U("featurelayer-pbf")&&(t==null?void 0:t.query.supportsFormatPBF)&&A(r),d=((n=t==null?void 0:t.operations)==null?void 0:n.supportsQueryAttachments)??!1;return new K({url:e.path,pbfSupported:u,fieldsIndex:o,infoFor3D:r,dynamicDataSource:a,gdbVersion:s,sourceSpatialReference:i,queryAttachmentsSupported:d})}async addAttachment(t,e){await this.load();const a=t.attributes[this.layer.objectIdField],r=this.layer.parsedUrl.path+"/"+a+"/addAttachment",s=this._getLayerRequestOptions(),i=this._getFormDataForAttachment(e,s.query);try{const o=await h(r,{body:i});return this._createFeatureEditResult(o.data.addAttachmentResult)}catch(o){throw this._createAttachmentErrorResult(a,o)}}async updateAttachment(t,e,a){await this.load();const r=t.attributes[this.layer.objectIdField],s=this.layer.parsedUrl.path+"/"+r+"/updateAttachment",i=this._getLayerRequestOptions({query:{attachmentId:e}}),o=this._getFormDataForAttachment(a,i.query);try{const u=await h(s,{body:o});return this._createFeatureEditResult(u.data.updateAttachmentResult)}catch(u){throw this._createAttachmentErrorResult(r,u)}}async applyEdits(t,e){var N,v;await this.load();const a=this.layer.infoFor3D,r=y(a),s=r||((e==null?void 0:e.globalIdUsed)??!1),i=((N=t.addFeatures)==null?void 0:N.map(c=>this._serializeFeature(c,a)).filter(y))??[],o=((v=t.updateFeatures)==null?void 0:v.map(c=>this._serializeFeature(c,a)).filter(y))??[],u=this._getFeatureIds(t.deleteFeatures,s);ee(i,o,this.layer.spatialReference);const d=[],n=[],l=[...t.deleteAttachments??[]];for(const c of t.addAttachments??[])d.push(await this._serializeAttachment(c));for(const c of t.updateAttachments??[])n.push(await this._serializeAttachment(c));const f=d.length||n.length||l.length?{adds:d,updates:n,deletes:l}:null;let m,R=null;if(r){R=new Map;const c=[];for(const _ of t.addAssets??[])c.push(this._serializeAssetMapEditAndUploadAssets(_,R));const O=await Promise.all(c);m=O.length?{adds:O,updates:[],deletes:[]}:void 0}const p={gdbVersion:(e==null?void 0:e.gdbVersion)||this.layer.gdbVersion,rollbackOnFailure:e==null?void 0:e.rollbackOnFailureEnabled,useGlobalIds:s,returnEditMoment:e==null?void 0:e.returnEditMoment,usePreviousEditMoment:e==null?void 0:e.usePreviousEditMoment,sessionId:e==null?void 0:e.sessionId};e!=null&&e.returnServiceEditsOption?(p.edits=JSON.stringify([{id:this.layer.layerId,adds:i,updates:o,deletes:u,attachments:f,assetMaps:V(m)}]),p.returnServiceEditsOption=te.toJSON(e==null?void 0:e.returnServiceEditsOption),p.returnServiceEditsInSourceSR=e==null?void 0:e.returnServiceEditsInSourceSR):(p.adds=i.length?JSON.stringify(i):null,p.updates=o.length?JSON.stringify(o):null,p.deletes=u.length?s?JSON.stringify(u):u.join(","):null,p.attachments=f&&JSON.stringify(f),p.assetMaps=y(m)?JSON.stringify(m):void 0);const F=this._getLayerRequestOptions({method:"post",query:p}),g=e!=null&&e.returnServiceEditsOption?this.layer.url:this.layer.parsedUrl.path,w=await h(g+"/applyEdits",F);if(r&&w.data!=null&&w.data.assetMaps!=null){const c=w.data,O=this.layer.objectIdField,_=[];for(const b of c.addResults)b.success&&_.push(b.objectId);for(const b of c.updateResults)b.success&&_.push(b.objectId);const Q=this._createRequestQueryOptions(),E=await h(g+"/query",{...Q,query:{f:"json",formatOf3DObjects:"3D_glb",where:`OBJECTID IN (${_.join(",")})`,outFields:`${O}`}});if(E&&E.data&&E.data.assetMaps&&y(R)){const b=E.data.assetMaps;for(const x of b){const S=R.get(x.parentGlobalId).geometry;y(S)&&S.type==="mesh"&&S.updateExternalSource({source:[{name:x.assetName,source:x.assetName}],extent:S.extent})}}}return this._createEditsResult(w)}async deleteAttachments(t,e){await this.load();const a=t.attributes[this.layer.objectIdField],r=this.layer.parsedUrl.path+"/"+a+"/deleteAttachments";try{return(await h(r,this._getLayerRequestOptions({query:{attachmentIds:e.join(",")},method:"post"}))).data.deleteAttachmentResults.map(this._createFeatureEditResult)}catch(s){throw this._createAttachmentErrorResult(a,s)}}fetchRecomputedExtents(t={}){const e=t.signal;return this.load({signal:e}).then(async()=>{const a=this._getLayerRequestOptions({...t,query:{returnUpdates:!0}}),{layerId:r,url:s}=this.layer,{data:i}=await h(`${s}/${r}`,a),{id:o,extent:u,fullExtent:d,timeExtent:n}=i,l=u||d;return{id:o,fullExtent:l&&B.fromJSON(l),timeExtent:n&&P.fromJSON({start:n[0],end:n[1]})}})}async queryAttachments(t,e={}){await this.load();const a=this._getLayerRequestOptions(e);return this.queryTask.executeAttachmentQuery(t,a)}async queryFeatures(t,e){return await this.load(),this.queryTask.execute(t,{...e,query:this._createRequestQueryOptions(e)})}async queryFeaturesJSON(t,e){return await this.load(),this.queryTask.executeJSON(t,{...e,query:this._createRequestQueryOptions(e)})}async queryObjectIds(t,e){return await this.load(),this.queryTask.executeForIds(t,{...e,query:this._createRequestQueryOptions(e)})}async queryFeatureCount(t,e){return await this.load(),this.queryTask.executeForCount(t,{...e,query:this._createRequestQueryOptions(e)})}async queryExtent(t,e){return await this.load(),this.queryTask.executeForExtent(t,{...e,query:this._createRequestQueryOptions(e)})}async queryRelatedFeatures(t,e){return await this.load(),this.queryTask.executeRelationshipQuery(t,{...e,query:this._createRequestQueryOptions(e)})}async queryRelatedFeaturesCount(t,e){return await this.load(),this.queryTask.executeRelationshipQueryForCount(t,{...e,query:this._createRequestQueryOptions(e)})}async queryTopFeatures(t,e){return await this.load(),this.queryTask.executeTopFeaturesQuery(t,{...e,query:this._createRequestQueryOptions(e)})}async queryTopObjectIds(t,e){return await this.load(),this.queryTask.executeForTopIds(t,{...e,query:this._createRequestQueryOptions(e)})}async queryTopExtents(t,e){return await this.load(),this.queryTask.executeForTopExtents(t,{...e,query:this._createRequestQueryOptions(e)})}async queryTopCount(t,e){return await this.load(),this.queryTask.executeForTopCount(t,{...e,query:this._createRequestQueryOptions(e)})}async fetchPublishingStatus(){if(!W(this.layer.url))return"unavailable";const t=J(this.layer.url,"status"),e=await h(t,{query:{f:"json"}});return ae.fromJSON(e.data.status)}_createRequestQueryOptions(t){const e={...this.layer.customParameters,token:this.layer.apiKey,...t==null?void 0:t.query};return this.layer.datesInUnknownTimezone&&(e.timeReferenceUnknownClient=!0),e}async _fetchService(t,e){if(!t){const{data:r}=await h(this.layer.parsedUrl.path,this._getLayerRequestOptions({query:U("featurelayer-advanced-symbols")?{returnAdvancedSymbols:!0}:{},signal:e}));t=r}this.sourceJSON=this._patchServiceJSON(t);const a=t.type;if(!se.has(a))throw new I("feature-layer-source:unsupported-type",`Source type "${a}" is not supported`)}_patchServiceJSON(t){var e;if(t.type!=="Table"&&t.geometryType&&!((e=t==null?void 0:t.drawingInfo)!=null&&e.renderer)&&!t.defaultSymbol){const a=H(t.geometryType).renderer;L("drawingInfo.renderer",a,t)}return t.geometryType==="esriGeometryMultiPatch"&&t.infoFor3D&&(t.geometryType="mesh"),t}_serializeFeature(t,e){const{geometry:a,attributes:r}=t;if(y(e)&&y(t.geometry)&&t.geometry.type==="mesh"){const s={...r},i=t.geometry,o=i.origin,u=i.transform;if(s[e.transformFieldRoles.originX]=o.x,s[e.transformFieldRoles.originY]=o.y,s[e.transformFieldRoles.originZ]=o.z,y(u)){const d=u.translation,n=u.scale,l=u.rotation;s[e.transformFieldRoles.translationX]=d[0],s[e.transformFieldRoles.translationY]=-d[2],s[e.transformFieldRoles.translationZ]=d[1],s[e.transformFieldRoles.scaleX]=n[0],s[e.transformFieldRoles.scaleY]=n[1],s[e.transformFieldRoles.scaleZ]=n[2],s[e.transformFieldRoles.rotationX]=l[0],s[e.transformFieldRoles.rotationY]=l[2],s[e.transformFieldRoles.rotationZ]=l[1],s[e.transformFieldRoles.rotationDeg]=l[3]}return{geometry:null,attributes:s}}return A(a)?{attributes:r}:a.type==="mesh"||a.type==="extent"?null:{geometry:a.toJSON(),attributes:r}}async _serializeAttachment(t){const{feature:e,attachment:a}=t,{globalId:r,name:s,contentType:i,data:o,uploadId:u}=a,d={globalId:r,parentGlobalId:null,contentType:null,name:null,uploadId:null,data:null};if(e&&(d.parentGlobalId="attributes"in e?e.attributes&&e.attributes[this.layer.globalIdField]:e.globalId),u)d.uploadId=u;else if(o){const n=await k(o);n&&(d.contentType=n.mediaType,d.data=n.data),o instanceof File&&(d.name=o.name)}return s&&(d.name=s),i&&(d.contentType=i),d}async _serializeAssetMapEditAndUploadAssets(t,e){const a=this.layer.url;let r=null;try{const n=new Blob([t.data],{type:t.mimeType}),l=new FormData;l.append("f","json"),l.append("file",n,`${t.assetName}`);const f={body:l,method:"post",responseType:"json"},{data:m}=await h(`${a}/uploads/upload`,f);if(!m.success)throw new I("feature-layer-source:upload-failure","Expected upload to be successfull.");r={assetType:t.assetType,assetUploadId:m.item.itemID}}catch{r=null}if(A(r)){const n=await k(new Blob([t.data]));if(!n.isBase64)throw new I("feature-layer-source:uploadAssets-failure","Expected gltf data in base64 format after conversion.");r={assetType:t.assetType,assetData:n.data}}if(A(r))throw new I("feature-layer-source:uploadAssets-failure","Unable to prepare uploadAsset request options.");const s={method:"post",query:{f:"json",assets:JSON.stringify([r])},responseType:"json"},i=await h(J(this.layer.parsedUrl.path,"uploadAssets"),s);if(i.data.uploadResults.length!==1||!i.data.uploadResults[0].success)throw new I("feature-layer-source:uploadAssets-failure","Bad response.");const o=i.data.uploadResults[0].assetHash,u=[];t.flags&Z.PROJECT_VERTICES&&u.push("PROJECT_VERTICES");const d={globalId:t.assetMapGlobalId,parentGlobalId:t.featureGlobalId,assetName:t.assetName,assetHash:o,flags:u};return e.set(t.featureGlobalId,t.feature),d}_getFeatureIds(t,e){const a=t==null?void 0:t[0];return a?this._canUseGlobalIds(e,t)?this._getGlobalIdsFromFeatureIdentifier(t):"objectId"in a?this._getObjectIdsFromFeatureIdentifier(t):this._getIdsFromFeatures(t):[]}_getIdsFromFeatures(t){const e=this.layer.objectIdField;return t.map(a=>a.attributes&&a.attributes[e])}_canUseGlobalIds(t,e){return t&&"globalId"in e[0]}_getObjectIdsFromFeatureIdentifier(t){return t.map(e=>e.objectId)}_getGlobalIdsFromFeatureIdentifier(t){return t.map(e=>e.globalId)}_createEditsResult(t){var u,d,n;const e=t.data,{layerId:a}=this.layer,r=[];let s=null;if(Array.isArray(e))for(const l of e)r.push({id:l.id,editedFeatures:l.editedFeatures}),l.id===a&&(s={addResults:l.addResults??[],updateResults:l.updateResults??[],deleteResults:l.deleteResults??[],attachments:l.attachments,editMoment:l.editMoment});else s=e;const i=s==null?void 0:s.attachments,o={addFeatureResults:((u=s==null?void 0:s.addResults)==null?void 0:u.map(this._createFeatureEditResult,this))??[],updateFeatureResults:((d=s==null?void 0:s.updateResults)==null?void 0:d.map(this._createFeatureEditResult,this))??[],deleteFeatureResults:((n=s==null?void 0:s.deleteResults)==null?void 0:n.map(this._createFeatureEditResult,this))??[],addAttachmentResults:i&&i.addResults?i.addResults.map(this._createFeatureEditResult,this):[],updateAttachmentResults:i&&i.updateResults?i.updateResults.map(this._createFeatureEditResult,this):[],deleteAttachmentResults:i&&i.deleteResults?i.deleteResults.map(this._createFeatureEditResult,this):[]};if(s!=null&&s.editMoment&&(o.editMoment=s.editMoment),r.length>0){o.editedFeatureResults=[];for(const l of r){const{adds:f,updates:m,deletes:R,spatialReference:p}=l.editedFeatures,F=p?new X(p):null;o.editedFeatureResults.push({layerId:l.id,editedFeatures:{adds:(f==null?void 0:f.map(g=>this._createEditedFeature(g,F)))||[],updates:(m==null?void 0:m.map(g=>({original:this._createEditedFeature(g[0],F),current:this._createEditedFeature(g[1],F)})))||[],deletes:(R==null?void 0:R.map(g=>this._createEditedFeature(g,F)))||[],spatialReference:F}})}}return o}_createEditedFeature(t,e){return new G({attributes:t.attributes,geometry:Y({...t.geometry,spatialReference:e})})}_createFeatureEditResult(t){const e=t.success===!0?null:t.error||{code:void 0,description:void 0};return{objectId:t.objectId,globalId:t.globalId,error:e?new I("feature-layer-source:edit-failure",e.description,{code:e.code}):null}}_createAttachmentErrorResult(t,e){const a=e.details.messages&&e.details.messages[0]||e.message,r=e.details.httpStatus||e.details.messageCode;return{objectId:t,globalId:null,error:new I("feature-layer-source:attachment-failure",a,{code:r})}}_getFormDataForAttachment(t,e){const a=t instanceof FormData?t:t&&t.elements?new FormData(t):null;if(a)for(const r in e){const s=e[r];s!=null&&(a.set?a.set(r,s):a.append(r,s))}return a}_getLayerRequestOptions(t={}){const{parsedUrl:e,gdbVersion:a,dynamicDataSource:r}=this.layer;return{...t,query:{gdbVersion:a,layer:r?JSON.stringify({source:r}):void 0,...e.query,f:"json",...this._createRequestQueryOptions(t)},responseType:"json"}}};T([j()],q.prototype,"type",void 0),T([j({constructOnly:!0})],q.prototype,"layer",void 0),T([j({readOnly:!0})],q.prototype,"queryTask",null),q=T([C("esri.layers.graphics.sources.FeatureLayerSource")],q);const Et=q;export{Et as default};
