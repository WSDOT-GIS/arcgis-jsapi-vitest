import{e as u,y as d,a as R,v as pe}from"./JSONSupport-ed372989.js";import{g as D}from"./Graphic-f117754c.js";import"./ensureType-348c3d61.js";import{e as U,r as h,t as P,o as ye,a as W,p as fe}from"./typedArrayUtil-96f93e5b.js";import"./geometry-d89d4a34.js";import{j as me}from"./Collection-d9d92883.js";import{s as x,a as E}from"./Error-d97df89f.js";import{h as S,p as ge}from"./string-feb899cf.js";import{D as _e,g as b,b as ve,E as Z,x as we,j as C}from"./promiseUtils-ac1bd36f.js";import{l as N,w as ce,a as X,h as be,j as Re}from"./reactiveUtils-307e98f9.js";import{a as Y}from"./EffectView-7a98f2c6.js";import{w as Fe,y as de,f as xe,b as Se,m as qe,g as Ee,d as Ie}from"./FeatureReductionLayer-fd41123b.js";import{v as Q}from"./layerUtils-a0871894.js";import{o as Oe,f as Ce,a as Te}from"./Extent-fd3ac910.js";import{x as G}from"./FeatureSet-00b7d51e.js";import{x as L}from"./Query-bf719160.js";import{S as Ue}from"./definitions-19bfb61c.js";import{f as Ae,u as ke}from"./LayerView-fefba7b3.js";import{I as Ve}from"./schemaUtils-5efbd12a.js";import{_ as ee}from"./preload-helper-f8378b50.js";import{h as $e}from"./rendererUtils-8077781c.js";import{l as Pe,a as Ne}from"./TileStore-56391591.js";import{_ as Je}from"./Promise-34cff6d6.js";import{u as Le}from"./workers-4f8dfa2f.js";import{e as Qe}from"./util-7f828970.js";import{e as te}from"./TileKey-555f347f.js";import{b as He}from"./OperationalLayer-a420b681.js";import{T as re,v as ie,i as je,W as se,D as ze,j as oe,O as Me,z as Be,b as H,w as j,x as De}from"./fieldUtils-66be74eb.js";import{o as ae}from"./MapImageLayer-030c7912.js";import{s as z,d as Ge}from"./popupUtils-b04ee323.js";import{i as Ke}from"./RefreshableLayerView-33218a74.js";import{l as We}from"./capabilities-d3148205.js";import"./nextTick-3ee5a785.js";import"./PopupTemplate-63dce4d3.js";import"./Clonable-5318ec31.js";import"./cast-73cfc253.js";import"./enumeration-49e09bda.js";import"./number-205e28e0.js";import"./locale-30120714.js";import"./Identifiable-876da2a8.js";import"./symbols-946d4e11.js";import"./CIMSymbol-0fa077f5.js";import"./Color-9f46ece8.js";import"./colorUtils-639f4d25.js";import"./mathUtils-b3bee9e7.js";import"./screenUtils-7afeb41c.js";import"./opacityUtils-cc413a8c.js";import"./symbolLayerUtils3D-0c6ed99a.js";import"./aaBoundingBox-1eda6d1b.js";import"./request-7c0a9d4c.js";import"./persistableUrlUtils-26091271.js";import"./collectionUtils-e98ed3f0.js";import"./Portal-172924b2.js";import"./Loadable-c96deb83.js";import"./PortalGroup-751b527f.js";import"./PortalUser-7f979a04.js";import"./jsonUtils-dd0891e0.js";import"./Polyline-9d44200b.js";import"./typeUtils-2ccaf90d.js";import"./Evented-e2ee9722.js";import"./SimpleObservable-04055e8d.js";import"./parser-a11e786f.js";import"./mat4f32-60a2394b.js";import"./mat4-1ee69bd5.js";import"./BlendLayer-5cec7349.js";import"./TimeExtent-d2d7594c.js";import"./UniqueValueRenderer-b6a7d586.js";import"./LegendOptions-8200d5f5.js";import"./diffUtils-ac6d6369.js";import"./colorRamps-fff34da2.js";import"./sizeVariableUtils-d4870b0d.js";import"./visualVariableUtils-6f05f98d.js";import"./compilerUtils-8d4f8499.js";import"./lengthUtils-bc8879ed.js";import"./jsonUtils-7442f08f.js";import"./styleUtils-1d3bc535.js";import"./jsonUtils-37cc07d7.js";import"./DictionaryLoader-0dadb1e0.js";import"./LRUCache-9c365b2a.js";import"./MemCache-7d4aa654.js";import"./deprecate-424c57c7.js";import"./heatmapUtils-16ee21b5.js";import"./vec4f64-aa64c7e9.js";import"./labelingInfo-f7d1c159.js";import"./labelUtils-6965a8ca.js";import"./defaultsJSON-b087dd4d.js";import"./Field-b17a677d.js";import"./fieldType-b21f2e7f.js";import"./DataLayerSource-71059dc4.js";import"./Container-b72af0ce.js";import"./mat3f32-6c416b1c.js";import"./enums-64ab819c.js";import"./Texture-8f8edc49.js";import"./context-util-09fcc133.js";import"./index-738baf21.js";import"./Basemap-1b908f31.js";import"./loadAll-f0d5998c.js";import"./asyncUtils-f0fdc8c7.js";import"./PortalItem-a25335a3.js";import"./assets-2c955bed.js";import"./messages-226fbb40.js";import"./writeUtils-5c3c75bd.js";import"./CollectionFlattener-52a0c7e4.js";import"./TablesMixin-1e04401c.js";import"./Layer-07a07202.js";import"./Cyclical-0205ad3e.js";import"./projection-d7a5b449.js";import"./zscale-e06cee6f.js";import"./TileInfo-e107254e.js";import"./aaBoundingRect-a7e9efee.js";import"./widget-945f9e61.js";import"./intl-7c488bb0.js";import"./uuid-73213768.js";import"./HandleOwner-4c8d824c.js";import"./byteSizeEstimations-90c5a50d.js";import"./AttachmentInfo-9750c730.js";import"./AttachmentQuery-c89a8ac2.js";import"./utils-e0744d8b.js";import"./ItemCache-d06df2a7.js";import"./utils-1aab1134.js";import"./executeForIds-0c62bbcf.js";import"./utils-ada6b2ec.js";import"./query-eac603fe.js";import"./normalizeUtils-9dc1c489.js";import"./normalizeUtilsCommon-155f1aa2.js";import"./urlUtils-6a004888.js";import"./pbfQueryUtils-bad736cf.js";import"./pbf-3634de4f.js";import"./OptimizedFeature-7af17710.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./queryZScale-a0b71b11.js";import"./featureConversionUtils-00c47b2e.js";import"./RelationshipQuery-a13e27d1.js";import"./TopFeaturesQuery-5bb7c994.js";import"./FeatureLayer-42e1678e.js";import"./MultiOriginJSONSupport-97bf66dd.js";import"./serviceCapabilitiesUtils-02cebe9b.js";import"./arcgisLayerUrl-9d6ab56c.js";import"./FeatureLayerBase-de1a166f.js";import"./HeightModelInfo-bad6650e.js";import"./TimeReference-b6332926.js";import"./datetime-b6333958.js";import"./editsZScale-b954eebc.js";import"./APIKeyMixin-b93c2049.js";import"./ArcGISService-cca20289.js";import"./CustomParametersMixin-01a04769.js";import"./EditBusLayer-984da402.js";import"./OrderedLayer-9cb8835d.js";import"./PortalLayer-d54f6a39.js";import"./portalItemUtils-72345980.js";import"./RefreshableLayer-672ecb56.js";import"./ScaleRangeLayer-24099455.js";import"./TemporalLayer-c479c738.js";import"./FeatureTemplate-1fd8fac4.js";import"./FeatureType-b736019f.js";import"./fieldProperties-1fb52610.js";import"./FieldsIndex-7c963fe9.js";import"./versionUtils-aabb6832.js";import"./styleUtils-f45b991d.js";import"./popupUtils-3d5141e6.js";import"./Connection-5e453cc1.js";import"./Queue-c92bc561.js";import"./ElevationInfo-75e7bf35.js";import"./colorUtils-c0f43caf.js";import"./mat2d-94b8f776.js";import"./webStyleSymbolUtils-54e19231.js";import"./devEnvironmentUtils-5002a058.js";import"./Scheduler-72fecd6f.js";import"./GraphicsCollection-89010fd9.js";import"./ViewingMode-915d19cb.js";import"./unitBezier-881ac1eb.js";import"./vec2-9030ffc5.js";import"./vec2f64-22afc56f.js";import"./mat3-d3027213.js";import"./vec2f32-eaf29605.js";import"./TileStrategy-0607ccca.js";import"./Util-a12911ae.js";import"./pixelRangeUtils-03719dd8.js";import"./scaleUtils-2aca77b2.js";import"./commonProperties-da958896.js";import"./rbush-f2a85c98.js";import"./quickselect-56c5966e.js";import"./SublayersOwner-3d3675ca.js";import"./Version-bbcb090a.js";import"./QueryTask-809f5bb4.js";import"./imageBitmapUtils-ce029f55.js";import"./enums-b1d611e3.js";import"./color-3bbef98f.js";import"./enums-4b2a86a0.js";import"./VertexElementDescriptor-2925c6af.js";import"./number-b10bd8f5.js";import"./utils-f79d880b.js";import"./MaterialKey-6d0e47b2.js";import"./alignmentUtils-ae955d28.js";import"./visualVariablesUtils-9549b6c3.js";import"./createSymbolSchema-07e2efee.js";import"./cimAnalyzer-fade93fe.js";import"./fontUtils-95b845d3.js";import"./BidiEngine-836b7ef6.js";import"./GeometryUtils-53652037.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-fd85d1bd.js";import"./floatRGBA-bff1e6d8.js";import"./ExpandedCIM-04b9ce70.js";let J=class extends D{constructor(){super(...arguments),this.isAggregate=!0}getEffectivePopupTemplate(t=!1){if(this.popupTemplate)return this.popupTemplate;const r=this.sourceLayer&&this.sourceLayer.featureReduction;return r&&"popupTemplate"in r&&r.popupEnabled?r.popupTemplate:null}getObjectId(){return this.attributes.aggregateId}};u([d({type:Boolean})],J.prototype,"isAggregate",void 0),J=u([R("esri.AggregateGraphic")],J);const K=J;let _=class extends pe{constructor(e){super(e),this._filter=null,this.duration=S("mapview-transitions-duration"),this._excludedEffectView=new Y(e),this._includedEffectView=new Y(e)}get excludedEffects(){return this._excludedEffectView.effects}set featureEffect(e){this._get("featureEffect")!==e&&this._transitionTo(e)}get filter(){var e;return this._filter||((e=U(this.featureEffect))==null?void 0:e.filter)||null}get hasEffects(){return this._excludedEffectView.hasEffects||this._includedEffectView.hasEffects}get includedEffects(){return this._includedEffectView.effects}set scale(e){this._set("scale",e),this._excludedEffectView.scale=e,this._includedEffectView.scale=e}get transitioning(){return this._excludedEffectView.transitioning||this._includedEffectView.transitioning}transitionStep(e,t){this._set("scale",t),this.transitioning?(this._includedEffectView.transitionStep(e,t),this._excludedEffectView.transitionStep(e,t),this.transitioning||(this._filter=null)):(this._excludedEffectView.scale=t,this._includedEffectView.scale=t)}endTransitions(){this._includedEffectView.endTransitions(),this._excludedEffectView.endTransitions(),this._filter=null}_transitionTo(e){const t=this._get("featureEffect"),r=U(e),i=U(r==null?void 0:r.includedEffect),s=U(r==null?void 0:r.excludedEffect),a=this._includedEffectView.canTransitionTo(i)&&this._excludedEffectView.canTransitionTo(s);this._includedEffectView.effect=i,this._excludedEffectView.effect=s,this._set("featureEffect",r),this._filter=(r==null?void 0:r.filter)||(t==null?void 0:t.filter)||null,a||this.endTransitions()}};u([d()],_.prototype,"_filter",void 0),u([d()],_.prototype,"_excludedEffectView",void 0),u([d()],_.prototype,"_includedEffectView",void 0),u([d()],_.prototype,"duration",void 0),u([d()],_.prototype,"excludedEffects",null),u([d()],_.prototype,"featureEffect",null),u([d()],_.prototype,"filter",null),u([d()],_.prototype,"hasEffects",null),u([d()],_.prototype,"includedEffects",null),u([d({value:0})],_.prototype,"scale",null),u([d()],_.prototype,"transitioning",null),_=u([R("esri.layers.effects.FeatureEffectView")],_);const Ze=_;let A=class extends G{constructor(){super(...arguments),this.features=[]}readFeatures(e,t){var s;const r=Ce.fromJSON(t.spatialReference),i=[];for(let a=0;a<e.length;a++){const o=e[a],l=K.fromJSON(o),n=o.geometry&&o.geometry.spatialReference;h(l.geometry)&&!n&&(l.geometry.spatialReference=r);const c=o.aggregateGeometries,p=l.aggregateGeometries;if(c&&h(p))for(const f in p){const y=p[f],m=(s=c[f])==null?void 0:s.spatialReference;h(y)&&!m&&(y.spatialReference=r)}i.push(l)}return i}};u([d({type:[K],json:{write:!0}})],A.prototype,"features",void 0),u([Oe("features")],A.prototype,"readFeatures",null),A=u([R("esri.rest.support.AggregateFeatureSet")],A);const Xe=A;async function Ye(e,t){if(!e)return null;switch(e.type){case"symbol":return new(await ee(()=>import("./SymbolTileRenderer-6d5ab8f9.js"),["assets/SymbolTileRenderer-6d5ab8f9.js","assets/JSONSupport-ed372989.js","assets/typedArrayUtil-96f93e5b.js","assets/string-feb899cf.js","assets/Error-d97df89f.js","assets/ensureType-348c3d61.js","assets/nextTick-3ee5a785.js","assets/promiseUtils-ac1bd36f.js","assets/aaBoundingRect-a7e9efee.js","assets/mathUtils-b3bee9e7.js","assets/Extent-fd3ac910.js","assets/cast-73cfc253.js","assets/CircularArray-364d163c.js","assets/mat2d-94b8f776.js","assets/enums-b1d611e3.js","assets/color-3bbef98f.js","assets/enums-4b2a86a0.js","assets/enums-64ab819c.js","assets/VertexElementDescriptor-2925c6af.js","assets/number-b10bd8f5.js","assets/AttributeStoreView-ba467075.js","assets/mat3-d3027213.js","assets/mat3f32-6c416b1c.js","assets/definitions-19bfb61c.js","assets/TiledDisplayObject-fd49a9f6.js","assets/Container-b72af0ce.js","assets/EffectView-7a98f2c6.js","assets/parser-a11e786f.js","assets/colorUtils-639f4d25.js","assets/screenUtils-7afeb41c.js","assets/mat4f32-60a2394b.js","assets/mat4-1ee69bd5.js","assets/Evented-e2ee9722.js","assets/Texture-8f8edc49.js","assets/context-util-09fcc133.js","assets/TileKey-555f347f.js","assets/visualVariablesUtils-7effa371.js","assets/visualVariablesUtils-9549b6c3.js","assets/VertexArrayObject-d5986ce6.js","assets/BufferPool-0209c612.js","assets/rendererUtils-8077781c.js","assets/capabilities-d3148205.js","assets/BaseTileRenderer-326b97ee.js","assets/HandleOwner-4c8d824c.js","assets/reactiveUtils-307e98f9.js","assets/WGLContainer-cd626f28.js","assets/ProgramTemplate-802e89ed.js","assets/MaterialKey-6d0e47b2.js","assets/alignmentUtils-ae955d28.js","assets/utils-f79d880b.js","assets/heatmapUtils-16ee21b5.js","assets/vec4f64-aa64c7e9.js","assets/Color-9f46ece8.js","assets/StyleDefinition-7d58136b.js","assets/vec2f32-eaf29605.js","assets/config-1337d16e.js","assets/GeometryUtils-dd03fc25.js","assets/earcut-61f7b102.js","assets/vec2-9030ffc5.js","assets/vec2f64-22afc56f.js","assets/featureConversionUtils-00c47b2e.js","assets/aaBoundingBox-1eda6d1b.js","assets/jsonUtils-dd0891e0.js","assets/Polyline-9d44200b.js","assets/OptimizedFeature-7af17710.js","assets/OptimizedFeatureSet-1d1ac4b9.js","assets/FeatureContainer-b1d9c447.js","assets/Queue-c92bc561.js","assets/TileContainer-5d892b13.js","assets/lengthUtils-bc8879ed.js"])).default(t);case"heatmap":return new(await ee(()=>import("./HeatmapTileRenderer-06c81552.js"),["assets/HeatmapTileRenderer-06c81552.js","assets/JSONSupport-ed372989.js","assets/typedArrayUtil-96f93e5b.js","assets/string-feb899cf.js","assets/Error-d97df89f.js","assets/ensureType-348c3d61.js","assets/nextTick-3ee5a785.js","assets/promiseUtils-ac1bd36f.js","assets/heatmapUtils-16ee21b5.js","assets/mathUtils-b3bee9e7.js","assets/screenUtils-7afeb41c.js","assets/vec4f64-aa64c7e9.js","assets/BitmapTileContainer-fc67271b.js","assets/aaBoundingRect-a7e9efee.js","assets/Extent-fd3ac910.js","assets/cast-73cfc253.js","assets/mat3f32-6c416b1c.js","assets/Bitmap-e1bc1857.js","assets/mat3-d3027213.js","assets/vec2f32-eaf29605.js","assets/Container-b72af0ce.js","assets/EffectView-7a98f2c6.js","assets/parser-a11e786f.js","assets/colorUtils-639f4d25.js","assets/mat4f32-60a2394b.js","assets/mat4-1ee69bd5.js","assets/Evented-e2ee9722.js","assets/definitions-19bfb61c.js","assets/enums-64ab819c.js","assets/Texture-8f8edc49.js","assets/context-util-09fcc133.js","assets/TiledDisplayObject-fd49a9f6.js","assets/TileKey-555f347f.js","assets/WGLContainer-cd626f28.js","assets/VertexArrayObject-d5986ce6.js","assets/VertexElementDescriptor-2925c6af.js","assets/color-3bbef98f.js","assets/enums-4b2a86a0.js","assets/enums-b1d611e3.js","assets/number-b10bd8f5.js","assets/ProgramTemplate-802e89ed.js","assets/MaterialKey-6d0e47b2.js","assets/alignmentUtils-ae955d28.js","assets/utils-f79d880b.js","assets/Color-9f46ece8.js","assets/StyleDefinition-7d58136b.js","assets/config-1337d16e.js","assets/GeometryUtils-dd03fc25.js","assets/reactiveUtils-307e98f9.js","assets/earcut-61f7b102.js","assets/vec2-9030ffc5.js","assets/vec2f64-22afc56f.js","assets/featureConversionUtils-00c47b2e.js","assets/aaBoundingBox-1eda6d1b.js","assets/jsonUtils-dd0891e0.js","assets/Polyline-9d44200b.js","assets/OptimizedFeature-7af17710.js","assets/OptimizedFeatureSet-1d1ac4b9.js","assets/TileContainer-5d892b13.js","assets/BaseTileRenderer-326b97ee.js","assets/HandleOwner-4c8d824c.js"])).default(t)}}function M(e){return e.some(t=>t.globalId)}function T(e){return e.filter(t=>!t.error).map(t=>t.objectId??t.globalId).filter(t=>t!=null)}function ne(e,t){const r=new Set(e);for(const i of t.values())r.add(i);return r}function le(e,t){const r=new Set(e);for(const i of t.values())r.delete(i);return r}let k=class extends pe{constructor(t){super(t),this._hasGlobalIds=!1,this._notifyUpdating=()=>{this.notifyChange("updating")}}normalizeCtorArgs(t){return this._queueProcessor=new Pe({concurrency:1,process:t.process}),{}}destroy(){this.clear()}get updating(){return this._queueProcessor.length>0}clear(){this._queueProcessor.clear()}push(t){const r=this._queueProcessor,i=r.last();switch(t.type){case"update":case"refresh":if((i==null?void 0:i.type)===t.type)return;r.push(t).then(this._notifyUpdating,this._notifyUpdating);break;case"edit":{const s=(i==null?void 0:i.type)==="processed-edit"?i:null;s&&r.popLast();const a=this._mergeEdits(s,t);for(const o of a)o&&r.push(o).then(this._notifyUpdating,this._notifyUpdating);break}}this.notifyChange("updating")}_mergeEdits(t,r){const{addedFeatures:i,deletedFeatures:s,updatedFeatures:a}=r.edits;if(this._hasGlobalIds=this._hasGlobalIds||M(i)||M(a)||M(s),this._hasGlobalIds)return[t,{type:"processed-edit",edits:{addOrModified:[...i,...a],removed:s}}];const o=new Set(T((t==null?void 0:t.edits.addOrModified)??[])),l=new Set(T((t==null?void 0:t.edits.removed)??[])),n=new Set([...T(i),...T(a)]),c=new Set(T(s));return[{type:"processed-edit",edits:{addOrModified:Array.from(ne(le(o,c),n)).map(p=>({objectId:p})),removed:Array.from(ne(le(l,n),c)).map(p=>({objectId:p}))}}]}};u([d({readOnly:!0})],k.prototype,"updating",null),u([d()],k.prototype,"process",void 0),k=u([R("esri.views.2d.layers.support.FeatureCommandQueue")],k);const et=k;function tt(e){return Array.isArray(e)}let q=class extends Je{constructor(e){super(e),this._startupResolver=_e(),this.isReady=!1}initialize(){this._controller=new AbortController,this.addResolvingPromise(this._startWorker(this._controller.signal))}destroy(){this._controller.abort(),this._connection&&this._connection.close()}set tileRenderer(e){this.client.tileRenderer=e}get closed(){return this._connection.closed}async startup(e,t,r,i){await this.when();const s=this._controller.signal,a=tt(r.source)?{transferList:r.source,signal:s}:void 0,o={service:r,config:t,tileInfo:e.tileInfo.toJSON(),tiles:i};await this._connection.invoke("startup",o,a),this._startupResolver.resolve(),this._set("isReady",!0)}async updateTiles(e){return await this._startupResolver.promise,b(this._connection.invoke("updateTiles",e))}async update(e){const t={config:e};return await this._startupResolver.promise,this._connection.invoke("update",t)}async applyUpdate(e){return await this._startupResolver.promise,this._connection.invoke("applyUpdate",e)}async setHighlight(e){return await this._startupResolver.promise,b(this._connection.invoke("controller.setHighlight",e))}async stop(){if(await this._startupResolver.promise,!this.closed)return b(this._connection.invoke("stop"))}async refresh(e){return await this._startupResolver.promise,b(this._connection.invoke("controller.refresh",e))}async querySummaryStatistics(e,t,r){return await this._startupResolver.promise,this._connection.invoke("controller.querySummaryStatistics",{query:e.toJSON(),params:t},r)}async queryAggregateSummaryStatistics(e,t,r){return await this._startupResolver.promise,this._connection.invoke("controller.queryAggregateSummaryStatistics",{query:e.toJSON(),params:t},r)}async queryUniqueValues(e,t,r){return await this._startupResolver.promise,this._connection.invoke("controller.queryUniqueValues",{query:e.toJSON(),params:t},r)}async queryAggregateUniqueValues(e,t,r){return await this._startupResolver.promise,this._connection.invoke("controller.queryAggregateUniqueValues",{query:e.toJSON(),params:t},r)}async queryClassBreaks(e,t,r){return await this._startupResolver.promise,this._connection.invoke("controller.queryClassBreaks",{query:e.toJSON(),params:t},r)}async queryAggregateClassBreaks(e,t,r){return await this._startupResolver.promise,this._connection.invoke("controller.queryAggregateClassBreaks",{query:e.toJSON(),params:t},r)}async queryHistogram(e,t,r){return await this._startupResolver.promise,this._connection.invoke("controller.queryHistogram",{query:e.toJSON(),params:t},r)}async queryAggregateHistogram(e,t,r){return await this._startupResolver.promise,this._connection.invoke("controller.queryAggregateHistogram",{query:e.toJSON(),params:t},r)}async queryFeatures(e,t){return await this._startupResolver.promise,this._connection.invoke("controller.queryFeatures",e==null?void 0:e.toJSON(),t)}async queryVisibleFeatures(e,t){return await this._startupResolver.promise,this._connection.invoke("controller.queryVisibleFeatures",e==null?void 0:e.toJSON(),t)}async queryObjectIds(e,t){return await this._startupResolver.promise,this._connection.invoke("controller.queryObjectIds",e==null?void 0:e.toJSON(),t)}async queryFeatureCount(e,t){return await this._startupResolver.promise,this._connection.invoke("controller.queryFeatureCount",e==null?void 0:e.toJSON(),t)}async queryExtent(e,t){return this._connection.invoke("controller.queryExtent",e.toJSON(),t)}async queryLatestObservations(e,t){return await this._startupResolver.promise,this._connection.invoke("controller.queryLatestObservations",e.toJSON(),t)}async queryStatistics(e){return await this._startupResolver.promise,this._connection.invoke("controller.queryStatistics",e)}async queryAggregates(e,t){return await this._startupResolver.promise,this._connection.invoke("controller.queryAggregates",e==null?void 0:e.toJSON(),t)}async queryAggregateCount(e,t){return await this._startupResolver.promise,this._connection.invoke("controller.queryAggregateCount",e==null?void 0:e.toJSON(),t)}async queryAggregateIds(e,t){return await this._startupResolver.promise,this._connection.invoke("controller.queryAggregateIds",e==null?void 0:e.toJSON(),t)}async getObjectId(e){return await this._startupResolver.promise,this._connection.invoke("controller.getObjectId",e)}async getDisplayId(e){return await this._startupResolver.promise,this._connection.invoke("controller.getDisplayId",e)}async getFeatures(e){return await this._startupResolver.promise,this._connection.invoke("controller.getFeatures",e)}async getAggregates(){return await this._startupResolver.promise,this._connection.invoke("controller.getAggregates")}async getAggregateValueRanges(){return await this._startupResolver.promise,this._connection.invoke("controller.getAggregateValueRanges")}async mapValidDisplayIds(e){return await this._startupResolver.promise,this._connection.invoke("controller.mapValidDisplayIds",e)}async onEdits(e){return await this._startupResolver.promise,b(this._connection.invoke("controller.onEdits",e))}async enableEvent(e,t){return await this._startupResolver.promise,b(this._connection.invoke("controller.enableEvent",{name:e,value:t}))}async pauseStream(){return await this._startupResolver.promise,b(this._connection.invoke("controller.pauseStream"))}async resumeStream(){return await this._startupResolver.promise,b(this._connection.invoke("controller.resumeStream"))}async sendMessageToSocket(e){return await this._startupResolver.promise,b(this._connection.invoke("controller.sendMessageToSocket",e))}async sendMessageToClient(e){return await this._startupResolver.promise,b(this._connection.invoke("controller.sendMessageToClient",e))}async updateCustomParameters(e){return await this._startupResolver.promise,b(this._connection.invoke("controller.updateCustomParameters",e))}async _startWorker(e){try{this._connection=await Le("Pipeline",{client:this.client,strategy:"dedicated",signal:e})}catch(t){ve(t)}}};u([d()],q.prototype,"isReady",void 0),u([d({constructOnly:!0})],q.prototype,"client",void 0),u([d()],q.prototype,"tileRenderer",null),q=u([R("esri.views.2d.layers.support.FeatureLayerProxy")],q);const rt=q,it=1e-6;class st{constructor(t){this._tiles=new Map,this.buffer=0,this.acquireTile=t.acquireTile,this.releaseTile=t.releaseTile,this.tileInfoView=t.tileInfoView,this.buffer=t.buffer}destroy(){}clear(){this._tiles.forEach(t=>this._releaseTile(t))}tileKeys(){const t=[];return this._tiles.forEach((r,i)=>t.push(i)),t}update(t){const r=this.tileInfoView.getTileCoverage(t.state,this.buffer,"closest"),{spans:i,lodInfo:s}=r,{level:a}=s,o=[],l=[],n=new Set,c=new Set;for(const{row:p,colFrom:f,colTo:y}of i)for(let m=f;m<=y;m++){const v=te.getId(a,p,s.normalizeCol(m),s.getWorldForColumn(m)),w=this._getOrAcquireTile(o,v);n.add(v),w.isReady?w.visible=!0:c.add(w.key)}return c.forEach(p=>this._addPlaceholders(n,p)),this._tiles.forEach(p=>{n.has(p.key.id)||(l.push(p.key.id),this._releaseTile(p))}),Ne.pool.release(r),{hasMissingTiles:c.size>0,added:o,removed:l}}_getOrAcquireTile(t,r){if(!this._tiles.has(r)){const i=this.acquireTile(new te(r));t.push(r),this._tiles.set(r,i),i.visible=!1}return this._tiles.get(r)}_getTile(t){return this._tiles.get(t)}_releaseTile(t){this._tiles.delete(t.key.id),this.releaseTile(t)}_addPlaceholders(t,r){const i=this._addPlaceholderChildren(t,r);Math.abs(1-i)<it||this._addPlaceholderParent(t,r)||(this._getTile(r.id).visible=!0)}_addPlaceholderChildren(t,r){let i=0;return this._tiles.forEach(s=>{i+=this._addPlaceholderChild(t,s,r)}),i}_addPlaceholderChild(t,r,i){return r.key.level<=i.level||!r.hasData||!i.contains(r.key)?0:(r.visible=!0,t.add(r.key.id),1/(1<<2*(r.key.level-i.level)))}_addPlaceholderParent(t,r){let i=r.getParentKey(),s=0,a=null;for(;h(i);){if(t.has(i.id))return!0;const o=this._getTile(i.id);if(o!=null&&o.isReady){for(const l of t){const n=this._getTile(l);n&&i.contains(n.key)&&(n.visible=!1)}return o.visible=!0,t.add(o.key.id),!0}o!=null&&o.hasData&&o.patchCount>s&&(s=o.patchCount,a=o),i=i.getParentKey()}return!!a&&(a.visible=!0,t.add(a.key.id),!0)}}const he="esri.views.layers.FeatureLayerView",B=x.getLogger(he),ot=e=>{let t=class extends e{constructor(...r){super(...r),this._updatingRequiredFieldsPromise=null,this.filter=null,this.timeExtent=null,this.layer=null,this.requiredFields=[],this.view=null}initialize(){this.handles.add([N(()=>{var i;const r=this.layer;return[(i=r==null?void 0:r.elevationInfo)==null?void 0:i.featureExpressionInfo,r&&"displayField"in r?r.displayField:null,r&&"timeInfo"in r&&r.timeInfo,r&&"renderer"in r&&r.renderer,r&&"labelingInfo"in r&&r.labelingInfo,r&&"floorInfo"in r&&r.floorInfo,this.filter,this.featureEffect,this.timeExtent]},()=>this._handleRequiredFieldsChange(),ce),X(()=>{var r;return(r=this.view)==null?void 0:r.floors},"change",()=>this._handleRequiredFieldsChange()),X(()=>{const r=this.layer;return r&&"sublayers"in r?r.sublayers:null},"change",()=>this._handleRequiredFieldsChange())])}get availableFields(){const{layer:r,layer:{fieldsIndex:i},requiredFields:s}=this;return"outFields"in r&&r.outFields?re(i,[...ie(i,r.outFields),...s]):re(i,s)}get featureEffect(){return this.layer&&"featureEffect"in this.layer?this.layer.featureEffect:null}set featureEffect(r){this._override("featureEffect",r)}get maximumNumberOfFeatures(){return 0}set maximumNumberOfFeatures(r){B.error("#maximumNumberOfFeatures=","Setting maximum number of features is not supported")}get maximumNumberOfFeaturesExceeded(){return!1}highlight(r){throw new Error("missing implementation")}createQuery(){const r={outFields:["*"],returnGeometry:!0,outSpatialReference:this.view.spatialReference},i=h(this.filter)?this.filter.createQuery(r):new L(r);if(this.layer.type==="feature"){const s=ae(this);h(s)&&(i.where=i.where?`(${i.where}) AND (${s})`:s)}return h(this.timeExtent)&&(i.timeExtent=h(i.timeExtent)?i.timeExtent.intersection(this.timeExtent):this.timeExtent.clone()),i}createAggregateQuery(){const r={outFields:["*"],returnGeometry:!0,outSpatialReference:this.view.spatialReference};return new L(r)}queryFeatures(r,i){throw new Error("missing implementation")}queryObjectIds(r,i){throw new Error("missing implementation")}queryFeatureCount(r,i){throw new Error("missing implementation")}queryExtent(r,i){throw new Error("missing implementation")}async fetchPopupFeatures(r,i){const s=this.validateFetchPopupFeatures(i);if(s)throw s;return this.fetchClientPopupFeatures(i)}_loadArcadeModules(r){return r.get("expressionInfos.length")||Array.isArray(r.content)&&r.content.some(i=>i.type==="expression")?je():Promise.resolve()}_handleRequiredFieldsChange(){const r=this._updateRequiredFields();this._set("_updatingRequiredFieldsPromise",r),r.then(()=>{this._updatingRequiredFieldsPromise===r&&this._set("_updatingRequiredFieldsPromise",null)})}async _updateRequiredFields(){if(!this.layer||!this.view)return;const r=this.view.type==="3d",{layer:i,layer:{fieldsIndex:s,objectIdField:a}}=this,o="renderer"in i&&i.renderer,l="orderBy"in i&&i.orderBy,n="featureReduction"in i?i.featureReduction:null,c=new Set,p=await Z([o?o.collectRequiredFields(c,s):null,se(c,i),r?ze(c,i):null,h(this.filter)?oe(c,i,this.filter):null,h(this.featureEffect)?oe(c,i,this.featureEffect.filter):null,n?Me(c,i,n):null,l?Be(c,i,l):null]);if("timeInfo"in i&&i.timeInfo&&this.timeExtent&&H(c,i.fieldsIndex,[i.timeInfo.startField,i.timeInfo.endField]),i.type==="feature"&&(i.floorInfo&&H(c,i.fieldsIndex,[i.floorInfo.floorField]),r&&h(i.infoFor3D)&&(i.globalIdField==null&&B.error("globalIdField missing on 3DObjectFeatureLayer"),H(c,i.fieldsIndex,[i.globalIdField]))),i.type==="subtype-group"){j(c,s,i.subtypeField);const y=i.sublayers.map(m=>{var v;return Promise.all([(v=m.renderer)==null?void 0:v.collectRequiredFields(c,s),se(c,m)])});await Z(y)}for(const y of p)y.error&&B.error(y.error);j(c,s,a),r&&"displayField"in i&&i.displayField&&j(c,s,i.displayField);const f=Array.from(c).sort();this._set("requiredFields",f)}validateFetchPopupFeatures(r){if(P(r))return null;for(const i of r.clientGraphics??[]){const s=i.layer;if("popupEnabled"in s&&!s.popupEnabled)return new E("featurelayerview:fetchPopupFeatures","Popups are disabled",{layer:s});if(i.isAggregate){const a="featureReduction"in s?s.featureReduction:null;if(!(a&&"popupTemplate"in a&&a.popupEnabled&&a.popupTemplate))return new E("featurelayerview:fetchPopupFeatures","Popups are disabled",{layer:s})}else if("popupTemplate"in s&&!z(s,r))return new E("featurelayerview:fetchPopupFeatures","Layer does not define a popup template",{layer:s})}}async fetchClientPopupFeatures(r){const i=h(r)?r.clientGraphics:null;if(!i||i.length===0)return[];const s=new Array(i.length),a=new Map,o=await this.createPopupQuery(r);for(let l=0;l<i.length;l++){const n=i[l];if(n.isAggregate){s[l]=n;continue}const c=n.layer;if(!("popupEnabled"in c))continue;const p=ie(this.layer.fieldsIndex,o.outFields),f=z(c,r);if(P(f))continue;const y=await this._loadArcadeModules(f);y&&y.arcadeUtils.hasGeometryOperations(f)||!De(p,n)?a.set(n.getObjectId(),{graphic:n,index:l}):s[l]=n}if(this.layer.type==="stream"||a.size===0)return s.filter(Boolean);o.objectIds=Array.from(a.keys());try{const l=await this.layer.queryFeatures(o);for(const n of l.features){const{graphic:{geometry:c},index:p}=a.get(n.getObjectId());n.geometry||(n.geometry=c),s[p]=n}}catch{}return s.filter(Boolean)}async createPopupQuery(r){const i=this.layer.createQuery(),s=new Set;let a=!1;const o=h(r)&&r.clientGraphics?r.clientGraphics.map(l=>l.layer):[this.layer];for(const l of o){if(!("popupEnabled"in l))continue;const n=z(l,r);if(P(n))continue;const c=await this._loadArcadeModules(n),p=c&&c.arcadeUtils.hasGeometryOperations(n);a=!(this.layer.geometryType!=="point"&&!p);const f=await Ge(this.layer,n);for(const y of f)s.add(y)}if(i.returnGeometry=a,i.returnZ=a,i.returnM=a,i.outFields=Array.from(s),i.outSpatialReference=this.view.spatialReference,this.layer.type==="feature"){const l=ae(this);h(l)&&(i.where=i.where?`(${i.where}) AND (${l})`:l)}return i}canResume(){return!!super.canResume()&&(!h(this.timeExtent)||!this.timeExtent.isEmpty)}};return u([d()],t.prototype,"_updatingRequiredFieldsPromise",void 0),u([d({readOnly:!0})],t.prototype,"availableFields",null),u([d({type:Fe})],t.prototype,"featureEffect",null),u([d({type:de})],t.prototype,"filter",void 0),u([d(He)],t.prototype,"timeExtent",void 0),u([d()],t.prototype,"layer",void 0),u([d({type:Number})],t.prototype,"maximumNumberOfFeatures",null),u([d({readOnly:!0,type:Boolean})],t.prototype,"maximumNumberOfFeaturesExceeded",null),u([d({readOnly:!0})],t.prototype,"requiredFields",void 0),u([d()],t.prototype,"suspended",void 0),u([d()],t.prototype,"view",void 0),t=u([R(he)],t),t};function ue(e){return e&&"openPorts"in e}let g=class extends ot(Ke(Ae(ke))){constructor(){super(...arguments),this._pipelineIsUpdating=!0,this._commandsQueue=new et({process:e=>{switch(e.type){case"processed-edit":return this._doEdit(e);case"refresh":return this._doRefresh(e.dataChanged);case"update":return this._doUpdate()}}}),this._visibilityOverrides=new Set,this._highlightIds=new Map,this._updateHighlight=we(async()=>this._proxy.setHighlight(Array.from(this._highlightIds.keys()))),this._uploadsLocked=!1,this._needsClusterSizeUpdate=!1,this.featureEffectView=new Ze,this._lastDefinitionExpression=null}destroy(){var e;ye(this._updateClusterSizeTask,t=>t.remove()),(e=this._proxy)==null||e.destroy(),this._commandsQueue.destroy()}initialize(){this.addResolvingPromise(Promise.all([this._initProxy(),this._initServiceOptions()])),this.addHandles([this.on("valueRangesChanged",e=>{this._set("_aggregateValueRanges",e.valueRanges)}),N(()=>this.featureEffect,e=>{this.featureEffectView.featureEffect=e},ce)],"constructor"),this.featureEffectView.endTransitions()}async _initProxy(){var r;const e=this.layer;if("isTable"in e&&e.isTable)throw new E("featurelayerview:table-not-supported","table feature layer can't be displayed",{layer:this.layer});if((e.type==="feature"||e.type==="subtype-group")&&!((r=Q(e))!=null&&r.operations.supportsQuery))throw new E("featurelayerview:query-not-supported","layer view requires a layer with query capability",{layer:e});this._proxy&&this._proxy.destroy();const t=this._createClientOptions();return this._set("_proxy",new rt({client:t})),this._proxy.when()}async _initServiceOptions(){return this._set("_serviceOptions",await this._createServiceOptions()),this._serviceOptions}get _effectiveFeatureReduction(){if(!("featureReduction"in this.layer))return null;const e=this.layer.featureReduction;return e&&(!("maxScale"in e)||!e.maxScale||e.maxScale<this.view.scale)?e:null}get orderByFields(){var e,t;return((e=this._serviceOptions)==null?void 0:e.type)!=="stream"?(t=this._serviceOptions)==null?void 0:t.orderByFields:void 0}get labelsVisible(){const e=this.layer.type==="subtype-group"?this.layer.sublayers.items:[this.layer];return!this.suspended&&e.some(t=>t.labelingInfo&&t.labelsVisible)}get queryMode(){var e;return(e=this._serviceOptions)==null?void 0:e.type}get renderingConfigHash(){var I,O;if(!this.layer)return null;const e=this.availableFields,t=this.layer,r=this.view.floors,{definitionExpression:i}=t,s=this.layer.type!=="subtype-group"&&this.layer.labelsVisible&&this.layer.labelingInfo,a="renderer"in t&&t.renderer,o="gdbVersion"in t?t.gdbVersion:void 0,l="historicMoment"in t?(I=t.historicMoment)==null?void 0:I.getTime():void 0,{timeExtent:n}=this,c="customParameters"in t?JSON.stringify(t.customParameters):void 0,p="apiKey"in t?t.apiKey:void 0,f=t.type==="stream"?`${JSON.stringify(t.geometryDefinition)}${t.definitionExpression}`:null,y=JSON.stringify(this.clips),m=(O=this._effectiveFeatureReduction)==null?void 0:O.toJSON(),v="orderBy"in this.layer&&JSON.stringify(this.layer.orderBy),w="sublayers"in this.layer&&this.layer.sublayers.items.reduce((F,$)=>F+`${$.visible?1:0}.${JSON.stringify($.renderer)}.${$.labelsVisible}
.${JSON.stringify($.labelingInfo)}`,""),V="subtypeCode"in this.layer&&this.layer.subtypeCode;return JSON.stringify({orderBy:v,sublayerHash:w,subtypeCode:V,filterHash:h(this.filter)&&this.filter.toJSON(),effectHash:h(this.featureEffect)&&this.featureEffect.toJSON(),streamFilter:f,gdbVersion:o,definitionExpression:i,historicMoment:l,availableFields:e,renderer:a,labelingInfo:s,timeExtent:n,floors:r,clipsHash:y,featureReduction:m,customParameters:c,apiKey:p})}highlight(e){let t;e instanceof D?t=[e.getObjectId()]:typeof e=="number"||typeof e=="string"?t=[e]:me.isCollection(e)&&e.length>0?t=e.map(i=>i==null?void 0:i.getObjectId()).toArray():Array.isArray(e)&&e.length>0&&(t=typeof e[0]=="number"||typeof e[0]=="string"?e:e.map(i=>i==null?void 0:i.getObjectId()));const r=t==null?void 0:t.filter(h);return r&&r.length?(this._addHighlight(r),{remove:()=>this._removeHighlight(r)}):{remove:()=>{}}}hasHighlight(){return!!this._highlightIds.size}async hitTest(e,t){if(!this.tileRenderer)return null;const r=await this.tileRenderer.hitTest(t);if(r.length===0)return null;const{features:i,aggregates:s}=await this._proxy.getFeatures(r);return[...s.map(a=>this._createGraphicHit(e,K.fromJSON(a))),...i.map(a=>this._createGraphicHit(e,D.fromJSON(a)))]}queryStatistics(){return this._proxy.queryStatistics()}async querySummaryStatistics(e,t,r){const i={...t,scale:this.view.scale};return this._proxy.querySummaryStatistics(this._cleanUpQuery(e),i,r)}async queryAggregateSummaryStatistics(e,t,r){const i={...t,scale:this.view.scale};return this._proxy.queryAggregateSummaryStatistics(this._cleanUpAggregateQuery(e),i,r)}async queryUniqueValues(e,t,r){const i={...t,scale:this.view.scale};return this._proxy.queryUniqueValues(this._cleanUpQuery(e),i,r)}async queryAggregateUniqueValues(e,t,r){const i={...t,scale:this.view.scale};return this._proxy.queryAggregateUniqueValues(this._cleanUpAggregateQuery(e),i,r)}async queryClassBreaks(e,t,r){const i={...t,scale:this.view.scale};return this._proxy.queryClassBreaks(this._cleanUpQuery(e),i,r)}async queryAggregateClassBreaks(e,t,r){const i={...t,scale:this.view.scale};return this._proxy.queryAggregateClassBreaks(this._cleanUpAggregateQuery(e),i,r)}async queryHistogram(e,t,r){const i={...t,scale:this.view.scale};return this._proxy.queryHistogram(this._cleanUpQuery(e),i,r)}async queryAggregateHistogram(e,t,r){const i={...t,scale:this.view.scale};return this._proxy.queryAggregateHistogram(this._cleanUpAggregateQuery(e),i,r)}queryFeatures(e,t){return this.queryFeaturesJSON(e,t).then(r=>{const i=G.fromJSON(r);return i.features.forEach(s=>this._setLayersForFeature(s)),i})}queryVisibleFeatures(e,t){return this._proxy.queryVisibleFeatures(this._cleanUpQuery(e),t).then(r=>{const i=G.fromJSON(r);return i.features.forEach(s=>this._setLayersForFeature(s)),i})}async queryAggregates(e,t){const r=await this._proxy.queryAggregates(this._cleanUpAggregateQuery(e),t),i=Xe.fromJSON(r);return i.features.forEach(s=>this._setLayersForFeature(s)),i}queryAggregateIds(e,t){return this._proxy.queryAggregateIds(this._cleanUpAggregateQuery(e),t)}queryAggregateCount(e,t){return this._proxy.queryAggregateCount(this._cleanUpAggregateQuery(e),t)}queryAggregateJSON(e,t){return this._proxy.queryAggregates(this._cleanUpAggregateQuery(e),t)}queryFeaturesJSON(e,t){return this._proxy.queryFeatures(this._cleanUpQuery(e),t)}queryObjectIds(e,t){return this._proxy.queryObjectIds(this._cleanUpQuery(e),t)}queryFeatureCount(e,t){return this._proxy.queryFeatureCount(this._cleanUpQuery(e),t)}queryExtent(e,t){return this._proxy.queryExtent(this._cleanUpQuery(e),t).then(r=>({count:r.count,extent:Te.fromJSON(r.extent)}))}setVisibility(e,t){t?this._visibilityOverrides.delete(e):this._visibilityOverrides.add(e),this._update()}update(e){if(!this._tileStrategy||!this.tileRenderer)return;const{hasMissingTiles:t,added:r,removed:i}=this._tileStrategy.update(e);(r.length||i.length)&&this._proxy.updateTiles({added:r,removed:i}),t&&this.requestUpdate(),this.notifyChange("updating")}attach(){this.view.timeline.record(`${this.layer.title} (FeatureLayer) Attach`),this._tileStrategy=new st({acquireTile:e=>this._acquireTile(e),releaseTile:e=>this._releaseTile(e),tileInfoView:this.view.featuresTilingScheme,buffer:0}),this.addAttachHandles(N(()=>this.renderingConfigHash,()=>this._update(),be)),this.layer.type!=="stream"&&this.addAttachHandles(this.layer.on("edits",e=>this._edit(e)))}detach(){var e,t;this._commandsQueue.clear(),(e=this._proxy)==null||e.stop(),this.container.removeAllChildren(),(t=this.tileRenderer)==null||t.uninstall(this.container),this.tileRenderer=null,this._tileStrategy=W(this._tileStrategy),this._tileRendererHash=null}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}isUpdating(){var l;const e="renderer"in this.layer&&this.layer.renderer!=null,t=this._commandsQueue.updating,r=this._updatingRequiredFieldsPromise!=null,i=!this._proxy||!this._proxy.isReady,s=this._pipelineIsUpdating,a=this.tileRenderer==null||((l=this.tileRenderer)==null?void 0:l.updating),o=e&&(t||r||i||s||a);return S("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${o}
  -> hasRenderer ${e}
  -> hasPendingCommand ${t}
  -> updatingRequiredFields ${r}
  -> updatingProxy ${i}
  -> updatingPipeline ${s}
  -> updatingTileRenderer ${a}
`),o}_createClientOptions(){return{setUpdating:e=>{this._set("_pipelineIsUpdating",e)},emitEvent:e=>{this.emit(e.name,e.event)}}}async _detectQueryMode(e){var l;const t="path"in e,{layer:r}=this,i="editingInfo"in r&&((l=r.editingInfo)==null?void 0:l.lastEditDate),s="refreshInterval"in r&&!!r.refreshInterval,a=!i&&s,o=Q(r);if(t&&(r.type==="feature"||r.type==="subtype-group")&&r.geometryType==="point"&&(o!=null&&o.query.supportsPagination)&&!(o!=null&&o.operations.supportsEditing)&&!a&&S("featurelayer-snapshot-enabled"))try{const n=await r.queryFeatureCount();if(n<=S("featurelayer-snapshot-point-min-threshold"))return{mode:"snapshot",featureCount:n};const c=S("featurelayer-snapshot-point-max-threshold"),p=S("featurelayer-snapshot-point-coverage"),f=this.view.extent,y=U(r.fullExtent),m=y==null?void 0:y.clone().intersection(f),v=h(m)?m.width*m.height:0,w=(y==null?void 0:y.width)*(y==null?void 0:y.height);if(n<=c&&(w===0?0:v/w)>=p)return{mode:"snapshot",featureCount:n}}catch(n){x.getLogger(this.declaredClass).warn("mapview-feature-layer","Encountered an error when querying for featureCount",{error:n})}return{mode:"on-demand"}}async _createServiceOptions(){var V,I,O;const e=this.layer;if(e.type==="stream")return null;const t=Q(e),{capabilities:r,objectIdField:i}=e,s=e.fields.map(F=>F.toJSON()),a=h(e.fullExtent)?e.fullExtent.toJSON():null,o=Qe(e.geometryType),l="timeInfo"in e&&e.timeInfo&&e.timeInfo.toJSON()||null,n=e.spatialReference?e.spatialReference.toJSON():null,c=e.type==="feature"?e.globalIdField:null;let p;e.type==="ogc-feature"?p=e.source.getSource():ue(e.source)?p=await e.source.openPorts():e.parsedUrl&&(p=ge(e.parsedUrl),"dynamicDataSource"in e&&e.dynamicDataSource&&(p.query={layer:JSON.stringify({source:e.dynamicDataSource})}));const f="datesInUnknownTimezone"in this.layer&&this.layer.datesInUnknownTimezone,y=("subtypeField"in this.layer?this.layer.subtypeField:null)??null,{mode:m,featureCount:v}=await this._detectQueryMode(p);let w=this.layer.objectIdField;if(this.layer.type==="feature"&&h(this.layer.orderBy)&&this.layer.orderBy.length){const F=!this.layer.orderBy[0].valueExpression&&this.layer.orderBy[0].field;F&&(w=F)}return{type:m,timeReferenceUnknownClient:f,subtypeField:y,featureCount:v,globalIdField:c,maxRecordCount:r.query.maxRecordCount,tileMaxRecordCount:r.query.tileMaxRecordCount,capabilities:r,effectiveCapabilities:t,fields:s,fullExtent:a,geometryType:o,objectIdField:i,source:p,timeInfo:l,spatialReference:n,orderByFields:w,datesInUnknownTimezone:f,dateFieldsTimeReference:("dateFieldsTimeReference"in this.layer?(V=this.layer.dateFieldsTimeReference)==null?void 0:V.toJSON():null)||null,preferredTimeReference:("preferredTimeReference"in this.layer?(I=this.layer.preferredTimeReference)==null?void 0:I.toJSON():null)||null,editFieldsInfo:"editFieldsInfo"in this.layer?(O=this.layer.editFieldsInfo)==null?void 0:O.toJSON():null}}async _createMemoryServiceOptions(e){const t=await e.openPorts();return{...this._createServiceOptions(),type:"memory",source:t}}_cleanUpQuery(e){const t=L.from(e)||this.createQuery();return t.outSpatialReference||(t.outSpatialReference=this.view.spatialReference),t}_cleanUpAggregateQuery(e){const t=L.from(e)||this.createAggregateQuery();return t.outSpatialReference||(t.outSpatialReference=this.view.spatialReference),t}async _update(){return this._commandsQueue.push({type:"update"})}async _edit(e){return this.suspended?void this._clearTiles():this._validateEdit(e)?this._commandsQueue.push({type:"edit",edits:e}):void 0}async doRefresh(e){if(this.attached&&this._tileStrategy.tileKeys().length)return this.suspended&&e?void this._clearTiles():this._commandsQueue.push({type:"refresh",dataChanged:e})}_clearTiles(){this._tileStrategy.tileKeys().length&&(this._proxy.updateTiles({added:[],removed:this._tileStrategy.tileKeys()}),this._tileStrategy.clear(),this.requestUpdate(),this._commandsQueue.clear(),this._update())}_validateEdit(e){const t="globalIdField"in this.layer&&this.layer.globalIdField,r=e.deletedFeatures.some(s=>s.objectId===-1||!s.objectId),i=t&&this.availableFields.includes(t);return r&&!i?(x.getLogger(this.declaredClass).error(new E("mapview-apply-edits",`Editing the specified service requires the layer's globalIdField, ${t} to be included the layer's outFields for updates to be reflected on the map`)),null):e}async _doUpdate(){var e,t;try{if(this.destroyed||!this._hasRequiredSupport(this.layer)||!this._tileStrategy)return;const{featureEffectView:r,filter:i}=this;if(await this._updateRequiredFields(),this.destroyed)return;const{renderer:s}=this._getEffectiveRenderer();this._set("_effectiveRenderer",s);const a=this._createSchemaConfig(),o=this._createConfiguration(a,i,r.filter),l=this._lastDefinitionExpression!==o.schema.source.definitionExpression;this._lastDefinitionExpression=o.schema.source.definitionExpression;const n=o.schema.tileRenderer,c=this._createTileRendererHash(n);if(this._serviceOptions.type==="snapshot"&&(o.schema.source.initialFeatureCount=this._serviceOptions.featureCount),c!==this._tileRendererHash){await this._initTileRenderer(n,s);const p=this.layer,f=p.type==="stream"?await this._initServiceOptions():this._serviceOptions;this.tileRenderer.onConfigUpdate(s),p.type!=="stream"&&ue(p.source)&&(f.source=await p.source.openPorts());const y={added:this._tileStrategy.tileKeys(),removed:[]};await this._proxy.startup(this.view.featuresTilingScheme,o,f,y),this.hasHighlight()&&await this._proxy.setHighlight(Array.from(this._highlightIds.keys())),await this._onceTilesUpdated(),this.tileRenderer.onConfigUpdate(s)}else{this._serviceOptions.type==="snapshot"&&l&&(o.schema.source.changedFeatureCount=await this.layer.queryFeatureCount());const p=await this._proxy.update(o);(p.mesh||(e=p.targets)!=null&&e.aggregate)&&this._lockGPUUploads();try{await this._proxy.applyUpdate(p)}catch(f){C(f)||x.getLogger(this.declaredClass).error(f)}(p.mesh||(t=p.targets)!=null&&t.aggregate)&&this._unlockGPUUploads(),this.tileRenderer.onConfigUpdate(s),this._updateClusterSizeVariable(),this._forceAttributeTextureUpload()}this._tileRendererHash=c,this.tileRenderer.invalidateLabels(),this.requestUpdate()}catch{}}async _doEdit(e){try{await this._proxy.onEdits(e)}catch(t){C(t)}}async _doRefresh(e){this._lockGPUUploads();try{let t;e&&this.queryMode==="snapshot"&&"queryFeatureCount"in this.layer&&(t=await this.layer.queryFeatureCount()),await this._proxy.refresh({dataChanged:e,featureCount:t})}catch(t){C(t)}this._unlockGPUUploads(),this._effectiveFeatureReduction&&this._updateClusterSizeVariable()}_updateClusterSizeVariable(){this._needsClusterSizeUpdate&&(this.tileRenderer.onConfigUpdate(this._effectiveRenderer),this._needsClusterSizeUpdate=!1)}_createUpdateClusterSizeTask(e,t){return N(()=>this._aggregateValueRanges,r=>{this._updateClusterEffectiveRendererSizeVariable(e,t,r),this._needsClusterSizeUpdate=!0,this._uploadsLocked||this._updateClusterSizeVariable()})}async _updateClusterEffectiveRendererSizeVariable(e,t,r){if(e.dynamicClusterSize&&"visualVariables"in e&&e.visualVariables){const i=xe(e.visualVariables);if(h(i)&&i.field==="cluster_count"){const s=e.visualVariables.indexOf(i);e.visualVariables[s]=Se(t,r);const a=e.clone();a.dynamicClusterSize=!0,this._set("_effectiveRenderer",a)}}}_getEffectiveRenderer(){var i;const e=this.layer,t="renderer"in e?e.renderer:null,r=this._effectiveFeatureReduction;if(this._updateClusterSizeTask=fe(this._updateClusterSizeTask),r&&"renderer"in r&&r.renderer&&!((i=r.renderer.authoringInfo)!=null&&i.isAutoGenerated)){const s=r.fields;if(r.type==="cluster"){const{renderer:a,didInject:o}=qe(r.renderer,r,this._aggregateValueRanges);return o&&(this._updateClusterSizeTask=this._createUpdateClusterSizeTask(a,r)),{renderer:a,aggregateFields:s,featureReduction:r}}return{renderer:r.renderer,aggregateFields:s,featureReduction:r}}if(r&&r.type==="cluster"&&t&&Ee(t)){const s=r,a=[],o=Ie(a,t,s,this._aggregateValueRanges,!0);return this._updateClusterSizeTask=this._createUpdateClusterSizeTask(o,s),{renderer:o,aggregateFields:a,featureReduction:r}}return{renderer:t,aggregateFields:[],featureReduction:null}}_acquireTile(e){const t=this.tileRenderer.acquireTile(e);return t.once("attach",()=>{this.requestUpdate()}),t}_releaseTile(e){this.tileRenderer.releaseTile(e)}async _initTileRenderer(e,t){const r=await Ye(e,{layerView:this,tileInfoView:this.view.featuresTilingScheme,layer:this.layer});return this.tileRenderer&&(this._tileStrategy.clear(),this.tileRenderer.uninstall(this.container),this.tileRenderer=W(this.tileRenderer)),this.destroyed?null:(this._proxy.tileRenderer=r,this._set("tileRenderer",r),this.tileRenderer.install(this.container),this.tileRenderer.onConfigUpdate(t),this.requestUpdate(),this.tileRenderer)}_createTileRendererHash(e){return`${e.type}`}get hasFilter(){const e=!!("floorInfo"in this.layer&&this.layer.floorInfo&&this.view.floors&&this.view.floors.length);return!!this.filter||e||!!this._visibilityOverrides.size||!!this.timeExtent}_injectOverrides(e){const t=h(e)?e.timeExtent:null,r=h(this.timeExtent)&&h(t)?this.timeExtent.intersection(t):this.timeExtent||t;let i=null;const s="floorInfo"in this.layer&&this.layer.floorInfo;if(s){const o=h(e)?e.where:null;i=this._addFloorFilterClause(o)}if(!this._visibilityOverrides.size&&!r&&!s)return h(e)?e.toJSON():null;(e=h(e)&&e.clone()||new de).timeExtent=r,i&&(e.where=i);const a=e.toJSON();return a.hiddenIds=Array.from(this._visibilityOverrides),a}_addFloorFilterClause(e){var i;const t=this.layer;let r=e||"";if("floorInfo"in t&&t.floorInfo){let s=this.view.floors;if(!s||!s.length)return r;(i=t.floorInfo.viewAllLevelIds)!=null&&i.length&&(s=t.floorInfo.viewAllLevelIds);const a=s.filter(n=>n!=="").map(n=>"'"+n+"'");a.push("''");const o=t.floorInfo.floorField;let l="("+o+" IN ({ids}) OR "+o+" IS NULL)";if(l=l.replace("{ids}",a.join(", ")),h(r)&&r.includes(o)){let n=new RegExp("AND \\("+o+".*NULL\\)","g");r=r.replace(n,""),n=new RegExp("\\("+o+".*NULL\\)","g"),r=r.replace(n,""),r=r.replace(/\s+/g," ").trim()}r=r!==""?"("+r+") AND "+l:l}return r!==""?r:null}_createConfiguration(e,t,r){const i=this.layer.type==="feature"&&this.layer.historicMoment?this.layer.historicMoment.getTime():void 0,s=this.layer.type==="feature"?this.layer.gdbVersion??void 0:void 0,a=new Array(Ue),o=this._injectOverrides(t);a[0]=o,a[1]=h(r)?r.toJSON():null;const l=Ve(e);if(P(l))return null;const n=We("2d");return{availableFields:this.availableFields,gdbVersion:s,historicMoment:i,devicePixelRatio:window.devicePixelRatio||1,filters:a,schema:l,supportsTextureFloat:n.supportsTextureFloat,maxTextureSize:n.maxTextureSize}}_hasRequiredSupport(e){return!("renderer"in e)||$e(e.renderer)}_onceTilesUpdated(){return this.requestUpdate(),Re(()=>!this._pipelineIsUpdating)}_lockGPUUploads(){this.tileRenderer&&(this._uploadsLocked=!0,this.tileRenderer.lockGPUUploads())}_unlockGPUUploads(){this.tileRenderer&&(this._uploadsLocked=!1,this.tileRenderer.unlockGPUUploads())}_forceAttributeTextureUpload(){this.tileRenderer&&this.tileRenderer.forceAttributeTextureUpload()}_createSchemaConfig(){const e=this.layer;return{renderer:"renderer"in e?e.renderer:null,spatialReference:e.spatialReference,timeExtent:"timeExtent"in e?e.timeExtent:null,definitionExpression:e.definitionExpression,featureReduction:this._effectiveFeatureReduction,fields:e.fields,geometryType:e.geometryType,historicMoment:"historicMoment"in e?e.historicMoment:null,labelsVisible:"labelsVisible"in e&&e.labelsVisible,labelingInfo:"labelingInfo"in e?e.labelingInfo:null,availableFields:this.availableFields,featureEffect:this.featureEffect,filter:this.filter,gdbVersion:"gdbVersion"in e?e.gdbVersion:null,pixelBuffer:0,orderBy:"orderBy"in e&&e.orderBy?e.orderBy:null,customParameters:{..."customParameters"in e?e.customParameters:void 0,token:"apiKey"in e?e.apiKey??void 0:void 0},subtypeCode:"subtypeCode"in e?e.subtypeCode:void 0,subtypeField:"subtypeField"in e?e.subtypeField:void 0}}_addHighlight(e){for(const t of e)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t);this._highlightIds.set(t,r+1)}else this._highlightIds.set(t,1);this._updateHighlight().catch(t=>{C(t)||x.getLogger(this.declaredClass).error(t)})}_removeHighlight(e){for(const t of e)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t)-1;r===0?this._highlightIds.delete(t):this._highlightIds.set(t,r)}this._updateHighlight().catch(t=>{C(t)||x.getLogger(this.declaredClass).error(t)})}_setLayersForFeature(e){const t=this.layer;e.layer=t,e.sourceLayer=t}_createGraphicHit(e,t){return this._setLayersForFeature(t),h(t.geometry)&&(t.geometry.spatialReference=this.view.spatialReference),{type:"graphic",graphic:t,layer:this.layer,mapPoint:e}}};u([d()],g.prototype,"_serviceOptions",void 0),u([d()],g.prototype,"_proxy",void 0),u([d()],g.prototype,"_pipelineIsUpdating",void 0),u([d()],g.prototype,"_effectiveRenderer",void 0),u([d()],g.prototype,"_effectiveFeatureReduction",null),u([d()],g.prototype,"_aggregateValueRanges",void 0),u([d()],g.prototype,"_commandsQueue",void 0),u([d()],g.prototype,"featureEffectView",void 0),u([d()],g.prototype,"labelsVisible",null),u([d({readOnly:!0})],g.prototype,"queryMode",null),u([d()],g.prototype,"renderingConfigHash",null),u([d()],g.prototype,"tileRenderer",void 0),u([d()],g.prototype,"updating",void 0),g=u([R("esri.views.2d.layers.FeatureLayerView2D")],g);const Ws=g;export{Ws as default};
