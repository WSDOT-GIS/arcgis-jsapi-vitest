import{e as a,y as s,a as f,v as D}from"./Accessor-815cb0cf.js";import{g as b}from"./Graphic-3183b8e9.js";import{j as V}from"./Collection-912f4315.js";import{l as x,w as P,U as S}from"./reactiveUtils-31da19f9.js";import"./ensureType-125d327f.js";import{r as _,t as E,g as z}from"./typedArrayUtil-74bbfd45.js";import{i as A}from"./GraphicsCollection-af665c4a.js";import{m as C,y as M,h as O}from"./RasterVFDisplayObject-2113b353.js";import{f as j,u as N}from"./LayerView-8329f8a3.js";import{a as J}from"./GraphicsView2D-7990bc02.js";import{n as L}from"./HighlightGraphicContainer-b40d9b11.js";import{s as R,a as q}from"./Error-781981d1.js";import{j as $,x as G}from"./promiseUtils-28f2a985.js";import{T as H,x as W,d as K}from"./dataUtils-3c4d61ef.js";import{a as Q}from"./BitmapContainer-479a7ecf.js";import{h as X}from"./Container-1fd7ba94.js";import{i as Y}from"./Bitmap-ea5a0772.js";import{v as Z}from"./ExportStrategy-f5e3a824.js";import{U as tt}from"./request-ae7029ea.js";import{d as et}from"./HandleOwner-124247b4.js";import{w as k,a as T}from"./Extent-8fae2379.js";import{J as it}from"./rasterProjectionHelper-26daf988.js";import{T as B}from"./enums-b1d611e3.js";import{c as rt}from"./WGLContainer-302ed869.js";import{b as ot}from"./commonProperties-64b016df.js";import{x as at}from"./Query-4c66990d.js";import{s as st}from"./popupUtils-0c8c2f54.js";import{i as pt}from"./RefreshableLayerView-fc6330e9.js";import"./watch-c7facfb0.js";import"./ArrayPool-ae2ef0ab.js";import"./string-75082bc6.js";import"./nextTick-3ee5a785.js";import"./geometry-0d19f94b.js";import"./Polyline-40b9e769.js";import"./typeUtils-3bf84b36.js";import"./cast-f7d2a22f.js";import"./PopupTemplate-c559259f.js";import"./Clonable-6d5134c7.js";import"./JSONSupport-2b897629.js";import"./fieldUtils-e6cf5e5f.js";import"./preload-helper-f8378b50.js";import"./enumeration-94b1319d.js";import"./number-5e819186.js";import"./locale-30120714.js";import"./ActionToggle-dc9b6fc6.js";import"./Identifiable-f5397426.js";import"./symbols-df54e69f.js";import"./CIMSymbol-e48b86be.js";import"./Color-5e799d63.js";import"./colorUtils-639f4d25.js";import"./mathUtils-15f63a45.js";import"./screenUtils-7afeb41c.js";import"./opacityUtils-107b33de.js";import"./symbolLayerUtils3D-15190f75.js";import"./aaBoundingBox-5e14079b.js";import"./persistableUrlUtils-73be900a.js";import"./collectionUtils-5a99c1c0.js";import"./Portal-2a7c40a2.js";import"./Loadable-6776e4d9.js";import"./Promise-092442f7.js";import"./PortalGroup-d3a43002.js";import"./PortalUser-c84fcbac.js";import"./jsonUtils-15ca15d7.js";import"./Evented-3dfb26f2.js";import"./SimpleObservable-729c9019.js";import"./VertexArrayObject-315bde4b.js";import"./Texture-f1890c15.js";import"./context-util-31041918.js";import"./enums-64ab819c.js";import"./VertexElementDescriptor-2925c6af.js";import"./mat3f32-6c416b1c.js";import"./mat3-53e5916e.js";import"./vec2f32-eaf29605.js";import"./color-e7189c96.js";import"./enums-4b2a86a0.js";import"./number-b10bd8f5.js";import"./MapView-85925dbb.js";import"./Cyclical-a38bc08c.js";import"./CollectionFlattener-670e79b4.js";import"./workers-8153041b.js";import"./Connection-59240e9d.js";import"./Queue-687500af.js";import"./assets-01239caf.js";import"./intl-b6f3ccd9.js";import"./messages-dc0c80a1.js";import"./projection-319bc7cc.js";import"./mat4-a8da3f27.js";import"./zscale-a617710a.js";import"./TileInfo-1aef4d7f.js";import"./aaBoundingRect-3cd21eb0.js";import"./TileKey-b87e0dc5.js";import"./jsxFactory-3315acca.js";import"./uuid-73213768.js";import"./byteSizeEstimations-90c5a50d.js";import"./AttachmentInfo-6ef9e2f8.js";import"./AttachmentQuery-527f7d40.js";import"./layerUtils-7438cb6b.js";import"./Heading-0d44813a.js";import"./widget-f92fe188.js";import"./symbolUtils-17e1ef41.js";import"./LegendOptions-540a8245.js";import"./utils-e3b2b426.js";import"./asyncUtils-5c97747c.js";import"./jsonUtils-0607c004.js";import"./parser-527c5e80.js";import"./mat4f32-60a2394b.js";import"./ItemCache-dc80b100.js";import"./MemCache-9d81d118.js";import"./utils-1aab1134.js";import"./jsonUtils-ee8d96d0.js";import"./UniqueValueRenderer-206098f5.js";import"./diffUtils-0b07ec68.js";import"./colorRamps-f3b121e7.js";import"./sizeVariableUtils-d4870b0d.js";import"./visualVariableUtils-6b4a3e98.js";import"./compilerUtils-024563a4.js";import"./lengthUtils-40356f92.js";import"./jsonUtils-053e809e.js";import"./styleUtils-9f3a9a37.js";import"./DictionaryLoader-37853497.js";import"./LRUCache-425021b3.js";import"./deprecate-da2b7904.js";import"./heatmapUtils-8c1efe72.js";import"./vec4f64-aa64c7e9.js";import"./colorUtils-c0f43caf.js";import"./mat2d-68947564.js";import"./webStyleSymbolUtils-3aa191ea.js";import"./devEnvironmentUtils-5002a058.js";import"./DataLayerSource-3a7a94c9.js";import"./Field-7770b57d.js";import"./fieldType-e429d020.js";import"./executeQueryJSON-a01adc7e.js";import"./utils-19aa96f8.js";import"./query-d7f993dc.js";import"./normalizeUtils-eda5eef5.js";import"./normalizeUtilsCommon-04cad10b.js";import"./utils-067ee6bc.js";import"./urlUtils-6a004888.js";import"./pbfQueryUtils-9730bd74.js";import"./pbf-c0fe6550.js";import"./OptimizedFeature-6cca5f48.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./queryZScale-e2b48f65.js";import"./FeatureSet-736831f6.js";import"./featureConversionUtils-55a32b06.js";import"./RelationshipQuery-9431dd85.js";import"./TopFeaturesQuery-bceb40dd.js";import"./TimeExtent-202e4138.js";import"./FeatureLayer-58755fcf.js";import"./MultiOriginJSONSupport-6a5e69d5.js";import"./sql-af7b41f8.js";import"./FeatureLayerBase-4839e0f4.js";import"./HeightModelInfo-0c04472c.js";import"./arcgisLayerUrl-0e1d3d82.js";import"./TimeReference-afe9f4e7.js";import"./datetime-b6333958.js";import"./serviceCapabilitiesUtils-18a2cf01.js";import"./Layer-974413c8.js";import"./editsZScale-884a3138.js";import"./APIKeyMixin-8bba595e.js";import"./ArcGISService-cdf8a9a9.js";import"./BlendLayer-f72967b1.js";import"./CustomParametersMixin-7c5495bd.js";import"./EditBusLayer-b9bbb936.js";import"./FeatureReductionLayer-1c633e04.js";import"./labelingInfo-a45c32d0.js";import"./labelUtils-75fd34dc.js";import"./defaultsJSON-b087dd4d.js";import"./OperationalLayer-80c22541.js";import"./OrderedLayer-0495accc.js";import"./PortalLayer-d601e363.js";import"./PortalItem-051eae04.js";import"./portalItemUtils-2695e0b3.js";import"./RefreshableLayer-ac9eee59.js";import"./ScaleRangeLayer-abd4cd2e.js";import"./TemporalLayer-4e484055.js";import"./FeatureTemplate-d52241a0.js";import"./FeatureType-f3879578.js";import"./fieldProperties-eab34f4c.js";import"./FieldsIndex-9f1d87a4.js";import"./versionUtils-47bcdca9.js";import"./styleUtils-023b7cfa.js";import"./popupUtils-2e46f095.js";import"./ElevationInfo-91b8239c.js";import"./FullTextSearch-da95615f.js";import"./Scheduler-58e89fab.js";import"./GoTo-a612a338.js";import"./accessibleHandler-bfc19404.js";import"./vmEvent-d773b6c5.js";import"./Map-afd2e412.js";import"./Basemap-87d5fd9e.js";import"./loadAll-38268fb1.js";import"./writeUtils-8b292301.js";import"./basemapUtils-1ed0752b.js";import"./TablesMixin-363b96a0.js";import"./ViewingMode-915d19cb.js";import"./unitBezier-881ac1eb.js";import"./vec2-4c517306.js";import"./vec2f64-22afc56f.js";import"./TileStrategy-56172cce.js";import"./TileStore-53c9ad86.js";import"./TileKey-e007f54a.js";import"./rbush-f2a85c98.js";import"./quickselect-56c5966e.js";import"./capabilities-c77778e7.js";import"./cimAnalyzer-41da9b79.js";import"./fontUtils-dae2860f.js";import"./BidiEngine-836b7ef6.js";import"./GeometryUtils-53652037.js";import"./alignmentUtils-ae955d28.js";import"./definitions-19bfb61c.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-158f275c.js";import"./floatRGBA-047cef41.js";import"./normalizeUtilsSync-f6be8e80.js";import"./projectionSupport-ea4e5e35.js";import"./json-48e3ea08.js";import"./AttributeStoreView-89b5e0d8.js";import"./TiledDisplayObject-a8c16acc.js";import"./visualVariablesUtils-c19b01f0.js";import"./visualVariablesUtils-87145551.js";import"./MaterialKey-34911e37.js";import"./Matcher-1c756c81.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-aa161483.js";import"./GeometryUtils-dd03fc25.js";import"./earcut-61f7b102.js";import"./ExpandedCIM-71cc43f8.js";import"./schemaUtils-a41244bc.js";import"./utils-eea54cdd.js";import"./createSymbolSchema-5985c686.js";import"./rendererUtils-1bc13370.js";import"./util-7544e8cf.js";import"./ComputedAttributeStorage-fa4e244d.js";import"./FeatureSetReader-f7e06f98.js";import"./ArcadeDate-3d8ef842.js";import"./executionError-fb3f283a.js";import"./arcadeTimeUtils-8973966e.js";import"./centroid-e285663a.js";import"./BaseGraphicContainer-05169f00.js";import"./FeatureContainer-51f61b6f.js";import"./TileContainer-41317e18.js";import"./vec3f32-ad1dc57f.js";import"./pixelRangeUtils-03719dd8.js";import"./EffectView-106fd8f9.js";import"./ProgramTemplate-da7e5f1d.js";import"./StyleDefinition-7d58136b.js";import"./config-1337d16e.js";let n=class extends D{constructor(){super(...arguments),this.attached=!1,this.container=new X,this.updateRequested=!1,this.type="imagery",this._bitmapView=new Q}destroy(){this.attached&&(this.detach(),this.attached=!1),this.updateRequested=!1}get updating(){return!this.attached||this.isUpdating()}update(t){this.strategy.update(t).catch(e=>{$(e)||R.getLogger(this.declaredClass).error(e)})}hitTest(t){return new b({attributes:{},geometry:t.clone(),layer:this.layer})}attach(){this.container.addChild(this._bitmapView);const t=this.layer.version>=10,e=this.layer.version>=10.1?this.layer.imageMaxHeight:2048,i=this.layer.version>=10.1?this.layer.imageMaxWidth:2048;this.strategy=new Z({container:this._bitmapView,imageNormalizationSupported:t,imageMaxHeight:e,imageMaxWidth:i,fetchSource:this._fetchImage.bind(this),requestUpdate:()=>this.requestUpdate()})}detach(){this.strategy.destroy(),this._bitmapView.removeAllChildren(),this.container.removeAllChildren(),this.updateRequested=!1}redraw(){this.strategy.updateExports(async t=>{const{source:e}=t;if(!e||e instanceof ImageBitmap)return;const i=await this.layer.applyRenderer({extent:e.extent,pixelBlock:e.originalPixelBlock??e.pixelBlock});e.filter=r=>this.layer.pixelFilter?this.layer.applyFilter(r):{...i,extent:e.extent}}).catch(t=>{$(t)||R.getLogger(this.declaredClass).error(t)})}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.view.requestUpdate())}isUpdating(){return this.strategy.updating||this.updateRequested}getPixelData(){if(this.updating)return null;const t=this.strategy.bitmaps;if(t.length===1&&t[0].source)return{extent:t[0].source.extent,pixelBlock:t[0].source.originalPixelBlock};if(t.length>1){const e=this.view.extent,i=t.map(o=>o.source).filter(o=>o.extent&&o.extent.intersects(e)).map(o=>({extent:o.extent,pixelBlock:o.originalPixelBlock})),r=H(i,e);return _(r)?{extent:r.extent,pixelBlock:r.pixelBlock}:null}return null}async _fetchImage(t,e,i,r){var c;(r=r||{}).timeExtent=this.timeExtent,r.requestAsImageElement=!0,r.returnImageBitmap=!0;const o=await this.layer.fetchImage(t,e,i,r);if(o.imageBitmap)return o.imageBitmap;const p=await this.layer.applyRenderer(o.pixelData,{signal:r.signal}),m=new Y(p.pixelBlock,(c=p.extent)==null?void 0:c.clone(),o.pixelData.pixelBlock);return m.filter=l=>this.layer.applyFilter(l),m}};a([s()],n.prototype,"attached",void 0),a([s()],n.prototype,"container",void 0),a([s()],n.prototype,"layer",void 0),a([s()],n.prototype,"strategy",void 0),a([s()],n.prototype,"timeExtent",void 0),a([s()],n.prototype,"view",void 0),a([s()],n.prototype,"updateRequested",void 0),a([s()],n.prototype,"updating",null),a([s()],n.prototype,"type",void 0),n=a([f("esri.views.2d.layers.imagery.ImageryView2D")],n);const mt=n;class nt extends rt{constructor(){super(...arguments),this.symbolTypes=["triangle"]}get requiresDedicatedFBO(){return!1}prepareRenderPasses(e){const i=e.registerRenderPass({name:"imagery (vf)",brushes:[C],target:()=>this.children,drawPhase:B.MAP});return[...super.prepareRenderPasses(e),i]}doRender(e){this.visible&&e.drawPhase===B.MAP&&this.symbolTypes.forEach(i=>{e.renderPass=i,super.doRender(e)})}}let y=class extends D{constructor(t){super(t),this._loading=null,this.update=G((e,i)=>this._update(e,i).catch(r=>{$(r)||R.getLogger(this.declaredClass).error(r)}))}get updating(){return!!this._loading}redraw(t){if(!this.container.children.length)return;const e=this.container.children[0];e.symbolizerParameters=t,e.invalidateVAO(),this.container.symbolTypes=t.style==="wind_speed"?["scalar","triangle"]:t.style==="simple_scalar"?["scalar"]:["triangle"],this.container.requestRender()}async _update(t,e,i){if(!t.stationary)return;const{extent:r,spatialReference:o}=t.state,p=new k({xmin:r.xmin,ymin:r.ymin,xmax:r.xmax,ymax:r.ymax,spatialReference:o}),[m,c]=t.state.size;this._loading=this.fetchPixels(p,m,c,i);const l=await this._loading;this._addToDisplay(l,e,t.state),this._loading=null}_addToDisplay(t,e,i){if(E(t.pixelBlock))return this.container.children.forEach(m=>m.destroy()),void this.container.removeAllChildren();const{extent:r,pixelBlock:o}=t,p=new M(o);p.offset=[0,0],p.symbolizerParameters=e,p.rawPixelData=t,p.invalidateVAO(),p.x=r.xmin,p.y=r.ymax,p.pixelRatio=i.pixelRatio,p.rotation=i.rotation,p.resolution=i.resolution,p.width=o.width*e.symbolTileSize,p.height=o.height*e.symbolTileSize,this.container.children.forEach(m=>m.destroy()),this.container.removeAllChildren(),this.container.symbolTypes=e.style==="wind_speed"?["scalar","triangle"]:e.style==="simple_scalar"?["scalar"]:["triangle"],this.container.addChild(p)}};a([s()],y.prototype,"fetchPixels",void 0),a([s()],y.prototype,"container",void 0),a([s()],y.prototype,"_loading",void 0),a([s()],y.prototype,"updating",null),y=a([f("esri.views.2d.layers.imagery.ImageryVFStrategy")],y);const lt=y;let h=class extends et{constructor(){super(...arguments),this.attached=!1,this.container=new nt,this.type="imageryVF",this._dataParameters={exportParametersVersion:0,bbox:"",symbolTileSize:0,time:""},this._fetchpixels=async(t,e,i,r)=>{const o=await this._projectFullExtentPromise,{symbolTileSize:p}=this.layer.renderer,{extent:m,width:c,height:l}=W(t,e,i,p,o);if(_(o)&&!o.intersects(t))return{extent:m,pixelBlock:null};const d={bbox:`${m.xmin}, ${m.ymin}, ${m.xmax}, ${m.ymax}`,exportParametersVersion:this.layer.exportImageServiceParameters.version,symbolTileSize:p,time:JSON.stringify(this.timeExtent||"")};if(this._canReuseVectorFieldData(d)){const u=this.getPixelData();if(_(u)&&`${u.extent.xmin}, ${u.extent.ymin}, ${u.extent.xmax}, ${u.extent.ymax}`===d.bbox)return u}const{pixelData:g}=await this.layer.fetchImage(m,c,l,{timeExtent:this.timeExtent,requestAsImageElement:!1,signal:r});this._dataParameters=d;const w=g==null?void 0:g.pixelBlock;return E(w)?{extent:m,pixelBlock:null}:{extent:m,pixelBlock:this.layer.rasterInfo.dataType==="vector-uv"?z(K(w,"vector-uv")):w}}}get updating(){return!this.attached||this._strategy.updating}attach(){this._projectFullExtentPromise=this._getProjectedFullExtent(this.view.spatialReference),this._strategy=new lt({container:this.container,fetchPixels:this._fetchpixels}),this.handles.add(x(()=>this.layer.renderer,t=>this._updateSymbolizerParams(t),P),"attach")}detach(){this._strategy.destroy(),this.container.children.forEach(t=>t.destroy()),this.container.removeAllChildren(),this.handles.remove("attach"),this._strategy=this.container=this._projectFullExtentPromise=null}getPixelData(){var r;const t=(r=this.container.children[0])==null?void 0:r.rawPixelData;if(this.updating||!t)return null;const{extent:e,pixelBlock:i}=t;return{extent:e,pixelBlock:i}}hitTest(t){return new b({attributes:{},geometry:t.clone(),layer:this.layer})}update(t){this._strategy.update(t,this._symbolizerParams)}redraw(){const{renderer:t}=this.layer;t&&(this._updateSymbolizerParams(t),this._strategy.redraw(this._symbolizerParams))}_canReuseVectorFieldData(t){const e=this._dataParameters.exportParametersVersion===t.exportParametersVersion,i=this._dataParameters.time===t.time,r=this._dataParameters.symbolTileSize===t.symbolTileSize,o=this._dataParameters.bbox===t.bbox;return e&&i&&r&&o}async _getProjectedFullExtent(t){try{return await it(this.layer.fullExtent,t)}catch{try{const i=(await tt(this.layer.url,{query:{option:"footprints",outSR:t.wkid||JSON.stringify(t.toJSON()),f:"json"}})).data.featureCollection.layers[0].layerDefinition.extent;return i?k.fromJSON(i):null}catch{return null}}}_updateSymbolizerParams(t){t.type==="vector-field"&&(this._symbolizerParams=this.layer.symbolizer.generateWebGLParameters({pixelBlock:null}))}};a([s()],h.prototype,"attached",void 0),a([s()],h.prototype,"container",void 0),a([s()],h.prototype,"layer",void 0),a([s()],h.prototype,"timeExtent",void 0),a([s()],h.prototype,"type",void 0),a([s()],h.prototype,"view",void 0),a([s()],h.prototype,"updating",null),h=a([f("esri.views.2d.layers.imagery.VectorFieldView2D")],h);const ht=h,ct=t=>{let e=class extends t{constructor(){super(...arguments),this.view=null}async fetchPopupFeatures(i,r){const{layer:o}=this;if(!i)throw new q("imagerylayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:o});const{popupEnabled:p}=o,m=st(o,r);if(!p||E(m))throw new q("imagerylayerview:fetchPopupFeatures","Missing required popupTemplate or popupEnabled",{popupEnabled:p,popupTemplate:m});const c=await m.getRequiredFields(),l=new at;l.timeExtent=this.timeExtent,l.geometry=i,l.outFields=c,l.outSpatialReference=i.spatialReference;const{resolution:d,spatialReference:g}=this.view,w=this.view.type==="2d"?new T(d,d,g):new T(.5*d,.5*d,g),{returnTopmostRaster:u,showNoDataRecords:F}=m.layerOptions||{returnTopmostRaster:!0,showNoDataRecords:!1},I={returnDomainValues:!0,returnTopmostRaster:u,pixelSize:w,showNoDataRecords:F,signal:_(r)?r.signal:null};return o.queryVisibleRasters(l,I).then(U=>U)}canResume(){var i;return!!super.canResume()&&!((i=this.timeExtent)!=null&&i.isEmpty)}};return a([s()],e.prototype,"layer",void 0),a([s()],e.prototype,"suspended",void 0),a([s(ot)],e.prototype,"timeExtent",void 0),a([s()],e.prototype,"view",void 0),e=a([f("esri.views.layers.ImageryLayerView")],e),e};let v=class extends ct(pt(j(N))){constructor(){super(...arguments),this._exportImageVersion=-1,this._highlightGraphics=new A,this._highlightView=void 0,this.layer=null,this.subview=null}get pixelData(){const{subview:t}=this;return this.updating||!t?null:"getPixelData"in t?t.getPixelData():null}async hitTest(t,e){return this.subview?[{type:"graphic",graphic:this.subview.hitTest(t),layer:this.layer,mapPoint:t}]:null}update(t){var e;(e=this.subview)==null||e.update(t)}attach(){this.layer.increaseRasterJobHandlerUsage(),this._setSubView(),this.view&&(this._highlightView=new J({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new L(this.view.featuresTilingScheme)}),this.container.addChild(this._highlightView.container)),this.addAttachHandles([x(()=>this.layer.blendMode??"normal",t=>this.subview&&(this.subview.container.blendMode=t),P),x(()=>this.layer.effect??null,t=>this.subview&&(this.subview.container.effect=t),P),x(()=>this.layer.exportImageServiceParameters.version,t=>{t&&this._exportImageVersion!==t&&(this._exportImageVersion=t,this.requestUpdate())},S),x(()=>this.timeExtent,t=>{const{subview:e}=this;e&&(e.timeExtent=t,"redraw"in e?this.requestUpdate():e.redrawOrRefetch())},S),this.layer.on("redraw",()=>{const{subview:t}=this;t&&("redraw"in t?t.redraw():t.redrawOrRefetch())}),x(()=>this.layer.renderer,()=>this._setSubView())])}detach(){var t,e;this.layer.decreaseRasterJobHandlerUsage(),this.container.removeAllChildren(),this._detachSubview(this.subview),(t=this.subview)==null||t.destroy(),this.subview=null,(e=this._highlightView)==null||e.destroy(),this._exportImageVersion=-1}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}highlight(t,e){if(!((Array.isArray(t)?t[0]:V.isCollection(t)?t.getItemAt(0):t)instanceof b))return{remove:()=>{}};let i=[];return Array.isArray(t)||V.isCollection(t)?i=t.map(r=>r.clone()):t instanceof b&&(i=[t.clone()]),this._highlightGraphics.addMany(i),{remove:()=>{this._highlightGraphics.removeMany(i)}}}async doRefresh(){this.requestUpdate()}isUpdating(){return!this.subview||this.subview.updating}_setSubView(){var i,r;if(!this.view)return;const t=(i=this.layer.renderer)==null?void 0:i.type;let e="imagery";if(t==="vector-field"?e="imageryVF":t==="flow"&&(e="flow"),this.subview){const{type:o}=this.subview;if(o===e)return this._attachSubview(this.subview),void(o==="flow"?this.subview.redrawOrRefetch():o==="imagery"&&this.layer.format==="lerc"?this.subview.redraw():this.requestUpdate());this._detachSubview(this.subview),(r=this.subview)==null||r.destroy()}this.subview=e==="imagery"?new mt({layer:this.layer,view:this.view,timeExtent:this.timeExtent}):e==="imageryVF"?new ht({layer:this.layer,view:this.view,timeExtent:this.timeExtent}):new O({layer:this.layer,layerView:this}),this._attachSubview(this.subview),this.requestUpdate()}_attachSubview(t){t&&!t.attached&&(t.attach(),t.attached=!0,this.container.addChildAt(t.container,0),t.container.blendMode=this.layer.blendMode,t.container.effect=this.layer.effect)}_detachSubview(t){t!=null&&t.attached&&(this.container.removeChild(t.container),t.detach(),t.attached=!1)}};a([s()],v.prototype,"pixelData",null),a([s()],v.prototype,"subview",void 0),v=a([f("esri.views.2d.layers.ImageryLayerView2D")],v);const Go=v;export{Go as default};
