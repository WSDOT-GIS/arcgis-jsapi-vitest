import{e as o,y as s,a as m}from"./Accessor-815cb0cf.js";import{p as b,c as f}from"./string-75082bc6.js";import"./ensureType-125d327f.js";import{o as h}from"./enumeration-94b1319d.js";import{o as y,r as w}from"./Extent-8fae2379.js";import{S as D}from"./fieldUtils-85274dd9.js";import{l as c}from"./Color-5e799d63.js";import{a as v}from"./cast-f7d2a22f.js";import{l as g}from"./JSONSupport-2b897629.js";import"./typedArrayUtil-74bbfd45.js";const p=new v({esriSMS:"simple-marker",esriPMS:"picture-marker",esriSLS:"simple-line",esriSFS:"simple-fill",esriPFS:"picture-fill",esriTS:"text",esriSHD:"shield-label-symbol",PointSymbol3D:"point-3d",LineSymbol3D:"line-3d",PolygonSymbol3D:"polygon-3d",WebStyleSymbol:"web-style",MeshSymbol3D:"mesh-3d",LabelSymbol3D:"label-3d",CIMSymbolReference:"cim"});let M=0,l=class extends g{constructor(e){super(e),this.id="sym"+M++,this.type=null,this.color=new c([0,0,0,1])}readColor(e){return e&&e[0]!=null?[e[0],e[1],e[2],e[3]/255]:e}async collectRequiredFields(e,i){}hash(){return JSON.stringify(this.toJSON())}clone(){}};o([s({type:p.apiValues,readOnly:!0,json:{read:!1,write:{ignoreOrigin:!0,writer:p.write}}})],l.prototype,"type",void 0),o([s({type:c,json:{write:{allowNull:!0}}})],l.prototype,"color",void 0),o([y("color")],l.prototype,"readColor",null),l=o([m("esri.symbols.Symbol")],l);const O=l;var a;let r=a=class extends O{constructor(t){super(t),this.data=null,this.type="cim"}readData(t,e){return e}writeData(t,e){if(t)for(const i in t)e[i]=t[i]}async collectRequiredFields(t,e){var i;if(((i=this.data)==null?void 0:i.type)==="CIMSymbolReference"){const n=this.data.primitiveOverrides;if(n){const d=n.map(S=>{const u=S.valueExpressionInfo;return D(t,e,u.expression)});await Promise.all(d)}}}clone(){return new a({data:b(this.data)})}hash(){return f(JSON.stringify(this.data)).toString()}};o([s({json:{write:!1}})],r.prototype,"color",void 0),o([s({json:{write:!0}})],r.prototype,"data",void 0),o([y("data",["symbol"])],r.prototype,"readData",null),o([w("data",{})],r.prototype,"writeData",null),o([h({CIMSymbolReference:"cim"},{readOnly:!0})],r.prototype,"type",void 0),r=a=o([m("esri.symbols.CIMSymbol")],r);const k=r;export{O as a,k as d};
