import{f as v,r as f,e as p,y as a,a as w}from"./Accessor-815cb0cf.js";import{U as g}from"./request-ae7029ea.js";import{T as $}from"./TimeExtent-202e4138.js";import{a as b}from"./Error-781981d1.js";import{a as I}from"./HandleOwner-124247b4.js";import{l as O}from"./loadAll-38268fb1.js";import{r as T}from"./typedArrayUtil-74bbfd45.js";import{O as E}from"./MultiOriginJSONSupport-6a5e69d5.js";import{w as R,j as M}from"./promiseUtils-28f2a985.js";import{T as L}from"./ensureType-125d327f.js";import{w as P,o as j,r as F}from"./Extent-8fae2379.js";import{i as N}from"./scaleUtils-7da28fc4.js";import{b as U}from"./Layer-974413c8.js";import{i as J}from"./APIKeyMixin-8bba595e.js";import{E as _,y as q,Z as k}from"./SublayersOwner-fab30066.js";import{p as A}from"./ArcGISService-cdf8a9a9.js";import{n as V}from"./BlendLayer-f72967b1.js";import{o as z}from"./CustomParametersMixin-7c5495bd.js";import{c as B}from"./OperationalLayer-80c22541.js";import{_ as C}from"./PortalLayer-d601e363.js";import{p as D}from"./RefreshableLayer-ac9eee59.js";import{t as G}from"./ScaleRangeLayer-abd4cd2e.js";import{a as H}from"./TemporalLayer-4e484055.js";import{f as K}from"./commonProperties-64b016df.js";import{c as W}from"./ExportImageParameters-bc32ca1d.js";import{e as Z}from"./imageBitmapUtils-37fb12d3.js";import{n as x}from"./sublayerUtils-0f8d24ce.js";import{e as Q}from"./versionUtils-47bcdca9.js";import{a as S}from"./TimeReference-afe9f4e7.js";import"./watch-c7facfb0.js";import"./ArrayPool-ae2ef0ab.js";import"./string-75082bc6.js";import"./nextTick-3ee5a785.js";import"./preload-helper-f8378b50.js";import"./JSONSupport-2b897629.js";import"./reactiveUtils-31da19f9.js";import"./asyncUtils-5c97747c.js";import"./Collection-912f4315.js";import"./Evented-3dfb26f2.js";import"./SimpleObservable-729c9019.js";import"./Loadable-6776e4d9.js";import"./Promise-092442f7.js";import"./cast-f7d2a22f.js";import"./geometry-0d19f94b.js";import"./Polyline-40b9e769.js";import"./typeUtils-3bf84b36.js";import"./Identifiable-f5397426.js";import"./Version-b6e10f19.js";import"./CollectionFlattener-670e79b4.js";import"./PopupTemplate-c559259f.js";import"./Clonable-6d5134c7.js";import"./fieldUtils-e6cf5e5f.js";import"./enumeration-94b1319d.js";import"./number-5e819186.js";import"./locale-30120714.js";import"./ActionToggle-dc9b6fc6.js";import"./UniqueValueRenderer-206098f5.js";import"./symbols-df54e69f.js";import"./CIMSymbol-e48b86be.js";import"./Color-5e799d63.js";import"./colorUtils-639f4d25.js";import"./mathUtils-15f63a45.js";import"./screenUtils-7afeb41c.js";import"./opacityUtils-107b33de.js";import"./symbolLayerUtils3D-15190f75.js";import"./aaBoundingBox-5e14079b.js";import"./persistableUrlUtils-73be900a.js";import"./collectionUtils-5a99c1c0.js";import"./Portal-2a7c40a2.js";import"./PortalGroup-d3a43002.js";import"./PortalUser-c84fcbac.js";import"./LegendOptions-540a8245.js";import"./diffUtils-0b07ec68.js";import"./colorRamps-f3b121e7.js";import"./sizeVariableUtils-d4870b0d.js";import"./visualVariableUtils-6b4a3e98.js";import"./Graphic-3183b8e9.js";import"./jsonUtils-15ca15d7.js";import"./compilerUtils-024563a4.js";import"./lengthUtils-40356f92.js";import"./jsonUtils-053e809e.js";import"./layerUtils-7438cb6b.js";import"./styleUtils-9f3a9a37.js";import"./jsonUtils-ee8d96d0.js";import"./DictionaryLoader-37853497.js";import"./LRUCache-425021b3.js";import"./MemCache-9d81d118.js";import"./deprecate-da2b7904.js";import"./heatmapUtils-8c1efe72.js";import"./vec4f64-aa64c7e9.js";import"./sql-af7b41f8.js";import"./QueryTask-163b9e3e.js";import"./DataLayerSource-3a7a94c9.js";import"./Field-7770b57d.js";import"./fieldType-e429d020.js";import"./utils-19aa96f8.js";import"./executeForIds-516fad3b.js";import"./query-d7f993dc.js";import"./normalizeUtils-eda5eef5.js";import"./normalizeUtilsCommon-04cad10b.js";import"./utils-067ee6bc.js";import"./urlUtils-6a004888.js";import"./pbfQueryUtils-9730bd74.js";import"./pbf-c0fe6550.js";import"./OptimizedFeature-6cca5f48.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./queryZScale-e2b48f65.js";import"./zscale-a617710a.js";import"./Query-4c66990d.js";import"./FullTextSearch-da95615f.js";import"./executeQueryJSON-a01adc7e.js";import"./FeatureSet-736831f6.js";import"./featureConversionUtils-55a32b06.js";import"./aaBoundingRect-3cd21eb0.js";import"./FeatureType-f3879578.js";import"./FeatureTemplate-d52241a0.js";import"./FieldsIndex-9f1d87a4.js";import"./labelingInfo-a45c32d0.js";import"./labelUtils-75fd34dc.js";import"./defaultsJSON-b087dd4d.js";import"./serviceCapabilitiesUtils-18a2cf01.js";import"./arcgisLayerUrl-0e1d3d82.js";import"./AttachmentQuery-527f7d40.js";import"./popupUtils-2e46f095.js";import"./jsonUtils-0607c004.js";import"./parser-527c5e80.js";import"./mat4f32-60a2394b.js";import"./mat4-a8da3f27.js";import"./PortalItem-051eae04.js";import"./assets-01239caf.js";import"./portalItemUtils-2695e0b3.js";import"./projection-319bc7cc.js";import"./ElevationInfo-91b8239c.js";import"./floorFilterUtils-080a7cd2.js";import"./datetime-b6333958.js";let o=class extends V(H(G(_(q(A(B(C(E(D(J(z(I(U))))))))))))){constructor(...r){super(...r),this.dateFieldsTimeReference=null,this.datesInUnknownTimezone=!1,this.dpi=96,this.gdbVersion=null,this.imageFormat="png24",this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.isReference=null,this.labelsVisible=!1,this.operationalLayerType="ArcGISMapServiceLayer",this.preferredTimeReference=null,this.sourceJSON=null,this.sublayers=null,this.type="map-image",this.url=null}normalizeCtorArgs(r,i){return typeof r=="string"?{url:r,...i}:r}load(r){const i=T(r)?r.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},r).catch(R).then(()=>this._fetchService(i))),Promise.resolve(this)}readImageFormat(r,i){const n=i.supportedImageFormatTypes;return n&&n.includes("PNG32")?"png32":"png24"}writeSublayers(r,i,n,e){var h;if(!this.loaded||!r)return;const s=r.slice().reverse().flatten(({sublayers:t})=>t&&t.toArray().reverse()).toArray();let m=!1;if(this.capabilities&&this.capabilities.operations.supportsExportMap&&((h=this.capabilities.exportMap)!=null&&h.supportsDynamicLayers)){const t=v(e.origin);if(t===f.PORTAL_ITEM){const c=this.createSublayersForOrigin("service").sublayers;m=x(s,c,f.SERVICE)}else if(t>f.PORTAL_ITEM){const c=this.createSublayersForOrigin("portal-item");m=x(s,c.sublayers,v(c.origin))}}const l=[],d={writeSublayerStructure:m,...e};let y=m;s.forEach(t=>{const c=t.write({},d);l.push(c),y=y||t.originOf("visible")==="user"}),l.some(t=>Object.keys(t).length>1)&&(i.layers=l),y&&(i.visibleLayers=s.filter(t=>t.visible).map(t=>t.id))}createExportImageParameters(r,i,n,e){const s=e&&e.pixelRatio||1;r&&this.version>=10&&(r=r.clone().shiftCentralMeridian());const m=new W({layer:this,floors:e==null?void 0:e.floors,scale:N({extent:r,width:i})*s}),l=m.toJSON();m.destroy();const d=!e||!e.rotation||this.version<10.3?{}:{rotation:-e.rotation},y=r&&r.spatialReference,h=y.wkid||JSON.stringify(y.toJSON());l.dpi*=s;const t={};if(e!=null&&e.timeExtent){const{start:c,end:u}=e.timeExtent.toJSON();t.time=c&&u&&c===u?""+c:`${c??"null"},${u??"null"}`}else this.timeInfo&&!this.timeInfo.hasLiveData&&(t.time="null,null");return{bbox:r&&r.xmin+","+r.ymin+","+r.xmax+","+r.ymax,bboxSR:h,imageSR:h,size:i+","+n,...l,...d,...t}}async fetchImage(r,i,n,e){const{data:s}=await this._fetchImage("image",r,i,n,e);return s}async fetchImageBitmap(r,i,n,e){const{data:s,url:m}=await this._fetchImage("blob",r,i,n,e);return Z(s,m)}async fetchRecomputedExtents(r={}){const i={...r,query:{returnUpdates:!0,f:"json",...this.customParameters,token:this.apiKey}},{data:n}=await g(this.url,i),{extent:e,fullExtent:s,timeExtent:m}=n,l=e||s;return{fullExtent:l&&P.fromJSON(l),timeExtent:m&&$.fromJSON({start:m[0],end:m[1]})}}loadAll(){return O(this,r=>{r(this.allSublayers)})}serviceSupportsSpatialReference(r){return Q(this,r)}async _fetchImage(r,i,n,e,s){var d,y,h;const m={responseType:r,signal:(s==null?void 0:s.signal)??null,query:{...this.parsedUrl.query,...this.createExportImageParameters(i,n,e,s),f:"image",...this.refreshParameters,...this.customParameters,token:this.apiKey}},l=this.parsedUrl.path+"/export";if(((d=m.query)==null?void 0:d.dynamicLayers)!=null&&!((h=(y=this.capabilities)==null?void 0:y.exportMap)!=null&&h.supportsDynamicLayers))throw new b("mapimagelayer:dynamiclayer-not-supported",`service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`,{query:m.query});try{const{data:t}=await g(l,m);return{data:t,url:l}}catch(t){throw M(t)?t:new b("mapimagelayer:image-fetch-error",`Unable to load image: ${l}`,{error:t})}}async _fetchService(r){if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});const{data:i,ssl:n}=await g(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},signal:r});n&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=i,this.read(i,{origin:"service",url:this.parsedUrl})}};p([a({type:S})],o.prototype,"dateFieldsTimeReference",void 0),p([a({type:Boolean})],o.prototype,"datesInUnknownTimezone",void 0),p([a()],o.prototype,"dpi",void 0),p([a()],o.prototype,"gdbVersion",void 0),p([a()],o.prototype,"imageFormat",void 0),p([j("imageFormat",["supportedImageFormatTypes"])],o.prototype,"readImageFormat",null),p([a({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],o.prototype,"imageMaxHeight",void 0),p([a({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],o.prototype,"imageMaxWidth",void 0),p([a()],o.prototype,"imageTransparency",void 0),p([a({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],o.prototype,"isReference",void 0),p([a({json:{read:!1,write:!1}})],o.prototype,"labelsVisible",void 0),p([a({type:["ArcGISMapServiceLayer"]})],o.prototype,"operationalLayerType",void 0),p([a({json:{read:!1,write:!1}})],o.prototype,"popupEnabled",void 0),p([a({type:S})],o.prototype,"preferredTimeReference",void 0),p([a()],o.prototype,"sourceJSON",void 0),p([a({json:{write:{ignoreOrigin:!0}}})],o.prototype,"sublayers",void 0),p([F("sublayers",{layers:{type:[k]},visibleLayers:{type:[L]}})],o.prototype,"writeSublayers",null),p([a({type:["show","hide","hide-children"]})],o.prototype,"listMode",void 0),p([a({json:{read:!1},readOnly:!0,value:"map-image"})],o.prototype,"type",void 0),p([a(K)],o.prototype,"url",void 0),o=p([w("esri.layers.MapImageLayer")],o);const Oe=o;export{Oe as default};
