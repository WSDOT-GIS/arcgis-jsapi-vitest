import{e as o,y as n,a as T,g as M}from"./JSONSupport-ed372989.js";import"./geometry-d89d4a34.js";import{g as W}from"./Graphic-f117754c.js";import{S as H,m as q,y as I,a as Q}from"./symbols-946d4e11.js";import{j as J}from"./Collection-d9d92883.js";import{a as U}from"./Error-d97df89f.js";import{p as L,b as V}from"./string-feb899cf.js";import{r as c,t as g}from"./typedArrayUtil-96f93e5b.js";import{O as X}from"./MultiOriginJSONSupport-97bf66dd.js";import"./ensureType-348c3d61.js";import{f as w,E as Y,o as b,r as Z,a as ee}from"./Extent-fd3ac910.js";import{u as v,A as te,e as re,t as oe,r as ie}from"./projection-d7a5b449.js";import{D as E,h as x,I as D,f as R,K as _}from"./aaBoundingRect-a7e9efee.js";import{v as ae}from"./normalizeUtils-9dc1c489.js";import ne from"./FeatureLayer-42e1678e.js";import{i as j,a as le}from"./GraphicsCollection-89010fd9.js";import{b as P}from"./Layer-07a07202.js";import{n as G}from"./BlendLayer-5cec7349.js";import{t as A}from"./ScaleRangeLayer-24099455.js";import{x as pe}from"./ElevationInfo-75e7bf35.js";import{n as se}from"./objectIdUtils-789e911a.js";import{c as ye}from"./OperationalLayer-a420b681.js";import{_ as me}from"./PortalLayer-d54f6a39.js";import{y as F}from"./Field-b17a677d.js";import"./nextTick-3ee5a785.js";import"./promiseUtils-ac1bd36f.js";import"./Polyline-9d44200b.js";import"./typeUtils-2ccaf90d.js";import"./cast-73cfc253.js";import"./PopupTemplate-63dce4d3.js";import"./Clonable-5318ec31.js";import"./fieldUtils-66be74eb.js";import"./preload-helper-f8378b50.js";import"./enumeration-49e09bda.js";import"./number-205e28e0.js";import"./locale-30120714.js";import"./Identifiable-876da2a8.js";import"./jsonUtils-dd0891e0.js";import"./CIMSymbol-0fa077f5.js";import"./Color-9f46ece8.js";import"./colorUtils-639f4d25.js";import"./mathUtils-b3bee9e7.js";import"./screenUtils-7afeb41c.js";import"./opacityUtils-cc413a8c.js";import"./symbolLayerUtils3D-0c6ed99a.js";import"./aaBoundingBox-1eda6d1b.js";import"./request-7c0a9d4c.js";import"./persistableUrlUtils-26091271.js";import"./collectionUtils-e98ed3f0.js";import"./Portal-172924b2.js";import"./Loadable-c96deb83.js";import"./Promise-34cff6d6.js";import"./PortalGroup-751b527f.js";import"./PortalUser-7f979a04.js";import"./Evented-e2ee9722.js";import"./SimpleObservable-04055e8d.js";import"./mat4-1ee69bd5.js";import"./assets-2c955bed.js";import"./zscale-e06cee6f.js";import"./normalizeUtilsCommon-155f1aa2.js";import"./utils-ada6b2ec.js";import"./UniqueValueRenderer-b6a7d586.js";import"./LegendOptions-8200d5f5.js";import"./reactiveUtils-307e98f9.js";import"./diffUtils-ac6d6369.js";import"./colorRamps-fff34da2.js";import"./sizeVariableUtils-d4870b0d.js";import"./visualVariableUtils-6f05f98d.js";import"./compilerUtils-8d4f8499.js";import"./lengthUtils-bc8879ed.js";import"./jsonUtils-7442f08f.js";import"./layerUtils-a0871894.js";import"./styleUtils-1d3bc535.js";import"./jsonUtils-37cc07d7.js";import"./DictionaryLoader-0dadb1e0.js";import"./LRUCache-9c365b2a.js";import"./MemCache-7d4aa654.js";import"./deprecate-424c57c7.js";import"./heatmapUtils-16ee21b5.js";import"./vec4f64-aa64c7e9.js";import"./serviceCapabilitiesUtils-02cebe9b.js";import"./arcgisLayerUrl-9d6ab56c.js";import"./FeatureLayerBase-de1a166f.js";import"./HeightModelInfo-bad6650e.js";import"./TimeReference-b6332926.js";import"./datetime-b6333958.js";import"./AttachmentQuery-c89a8ac2.js";import"./Query-bf719160.js";import"./TimeExtent-d2d7594c.js";import"./DataLayerSource-71059dc4.js";import"./RelationshipQuery-a13e27d1.js";import"./fieldType-b21f2e7f.js";import"./HandleOwner-4c8d824c.js";import"./workers-4f8dfa2f.js";import"./Connection-5e453cc1.js";import"./Queue-c92bc561.js";import"./intl-7c488bb0.js";import"./messages-226fbb40.js";import"./editsZScale-b954eebc.js";import"./queryZScale-a0b71b11.js";import"./FeatureSet-00b7d51e.js";import"./APIKeyMixin-b93c2049.js";import"./ArcGISService-cca20289.js";import"./CustomParametersMixin-01a04769.js";import"./EditBusLayer-984da402.js";import"./FeatureReductionLayer-fd41123b.js";import"./labelingInfo-f7d1c159.js";import"./labelUtils-6965a8ca.js";import"./defaultsJSON-b087dd4d.js";import"./OrderedLayer-9cb8835d.js";import"./RefreshableLayer-672ecb56.js";import"./TemporalLayer-c479c738.js";import"./FeatureTemplate-1fd8fac4.js";import"./FeatureType-b736019f.js";import"./fieldProperties-1fb52610.js";import"./FieldsIndex-7c963fe9.js";import"./versionUtils-aabb6832.js";import"./styleUtils-f45b991d.js";import"./asyncUtils-f0fdc8c7.js";import"./TopFeaturesQuery-5bb7c994.js";import"./popupUtils-3d5141e6.js";import"./parser-a11e786f.js";import"./mat4f32-60a2394b.js";import"./PortalItem-a25335a3.js";import"./portalItemUtils-72345980.js";let d=class extends G(A(P)){constructor(e){super(e),this.elevationInfo=null,this.graphics=new j,this.screenSizePerspectiveEnabled=!0,this.type="graphics",this.internal=!1}destroy(){this.removeAll(),this.graphics.destroy()}add(e){return this.graphics.add(e),this}addMany(e){return this.graphics.addMany(e),this}removeAll(){return this.graphics.removeAll(),this}remove(e){this.graphics.remove(e)}removeMany(e){this.graphics.removeMany(e)}on(e,t){return super.on(e,t)}graphicChanged(e){this.emit("graphic-update",e)}};o([n({type:pe})],d.prototype,"elevationInfo",void 0),o([n(le(j,"graphics"))],d.prototype,"graphics",void 0),o([n({type:["show","hide"]})],d.prototype,"listMode",void 0),o([n()],d.prototype,"screenSizePerspectiveEnabled",void 0),o([n({readOnly:!0})],d.prototype,"type",void 0),o([n({constructOnly:!0})],d.prototype,"internal",void 0),d=o([T("esri.layers.GraphicsLayer")],d);const ue=d;function O(e){return e.featureCollectionType==="markup"||e.layers.some(t=>t.layerDefinition.visibilityField!=null||!B(t))}function B({layerDefinition:e,featureSet:t}){const r=e.geometryType??t.geometryType;return C.find(i=>{var a,p,s;return r===i.geometryTypeJSON&&((s=(p=(a=e.drawingInfo)==null?void 0:a.renderer)==null?void 0:p.symbol)==null?void 0:s.type)===i.identifyingSymbol.type})}function z(){return new ee({xmin:-180,ymin:-90,xmax:180,ymax:90})}const $=new F({name:"OBJECTID",alias:"OBJECTID",type:"oid",nullable:!1,editable:!1}),de=new F({name:"title",alias:"Title",type:"string",nullable:!0,editable:!0});let m=class extends ue{constructor(e){super(e),this.visibilityMode="inherited"}initialize(){for(const e of this.graphics)e.sourceLayer=this.layer;this.graphics.on("after-add",e=>{e.item.sourceLayer=this.layer}),this.graphics.on("after-remove",e=>{e.item.sourceLayer=null})}get fullExtent(){var r;const e=(r=this.layer)==null?void 0:r.spatialReference,t=this.fullBounds;return e?g(t)?v(z(),e).geometry:R(t,e):null}get fullBounds(){var r;const e=(r=this.layer)==null?void 0:r.spatialReference;if(!e)return null;const t=E();return this.graphics.forEach(i=>{const a=c(i.geometry)?v(i.geometry,e).geometry:null;c(a)&&x(t,a.type==="point"?a:a.extent,t)}),D(t,_)?null:t}get sublayers(){return this.graphics}};o([n({readOnly:!0})],m.prototype,"fullExtent",null),o([n({readOnly:!0})],m.prototype,"fullBounds",null),o([n({readOnly:!0})],m.prototype,"sublayers",null),o([n()],m.prototype,"layer",void 0),o([n()],m.prototype,"layerId",void 0),o([n({readOnly:!0})],m.prototype,"visibilityMode",void 0),m=o([T("esri.layers.MapNotesLayer.MapNotesSublayer")],m);const C=[{geometryType:"polygon",geometryTypeJSON:"esriGeometryPolygon",id:"polygonLayer",layerId:0,title:"Polygons",identifyingSymbol:new H().toJSON()},{geometryType:"polyline",geometryTypeJSON:"esriGeometryPolyline",id:"polylineLayer",layerId:1,title:"Polylines",identifyingSymbol:new q().toJSON()},{geometryType:"multipoint",geometryTypeJSON:"esriGeometryMultipoint",id:"multipointLayer",layerId:2,title:"Multipoints",identifyingSymbol:new I().toJSON()},{geometryType:"point",geometryTypeJSON:"esriGeometryPoint",id:"pointLayer",layerId:3,title:"Points",identifyingSymbol:new I().toJSON()},{geometryType:"point",geometryTypeJSON:"esriGeometryPoint",id:"textLayer",layerId:4,title:"Text",identifyingSymbol:new Q().toJSON()}];let l=class extends G(A(ye(me(X(P))))){constructor(e){super(e),this.capabilities={operations:{supportsMapNotesEditing:!0}},this.featureCollections=null,this.featureCollectionJSON=null,this.featureCollectionType="notes",this.legendEnabled=!1,this.listMode="hide-children",this.minScale=0,this.maxScale=0,this.spatialReference=w.WGS84,this.sublayers=new J(C.map(t=>new m({id:t.id,layerId:t.layerId,title:t.title,layer:this}))),this.title="Map Notes",this.type="map-notes",this.visibilityMode="inherited"}readCapabilities(e,t,r){return{operations:{supportsMapNotesEditing:!O(t)&&(r==null?void 0:r.origin)!=="portal-item"}}}readFeatureCollections(e,t,r){if(!O(t))return null;const i=t.layers.map(a=>{const p=new ne;return p.read(a,r),p});return new J({items:i})}readLegacyfeatureCollectionJSON(e,t){return O(t)?L(t.featureCollection):null}get fullExtent(){var r;const e=this.spatialReference,t=E();return c(this.sublayers)?this.sublayers.forEach(({fullBounds:i})=>c(i)?x(t,i,t):t,t):(r=this.featureCollectionJSON)!=null&&r.layers.some(i=>i.layerDefinition.extent)&&this.featureCollectionJSON.layers.forEach(i=>{const a=v(i.layerDefinition.extent,e).geometry;c(a)&&x(t,a,t)}),D(t,_)?v(z(),e).geometry:R(t,e)}readMinScale(e,t){for(const r of t.layers)if(r.layerDefinition.minScale!=null)return r.layerDefinition.minScale;return 0}readMaxScale(e,t){for(const r of t.layers)if(r.layerDefinition.maxScale!=null)return r.layerDefinition.maxScale;return 0}get multipointLayer(){return this._findSublayer("multipointLayer")}get pointLayer(){return this._findSublayer("pointLayer")}get polygonLayer(){return this._findSublayer("polygonLayer")}get polylineLayer(){return this._findSublayer("polylineLayer")}readSpatialReference(e,t){return t.layers.length?w.fromJSON(t.layers[0].layerDefinition.spatialReference):w.WGS84}readSublayers(e,t,r){if(O(t))return null;const i=[];let a=t.layers.reduce((p,s)=>Math.max(p,s.layerDefinition.id??-1),-1)+1;for(const p of t.layers){const{layerDefinition:s,featureSet:y}=p,u=s.id??a++,f=B(p);if(c(f)){const h=new m({id:f.id,title:s.name,layerId:u,layer:this,graphics:y.features.map(({geometry:S,symbol:N,attributes:k,popupInfo:K})=>W.fromJSON({attributes:k,geometry:S,symbol:N,popupTemplate:K}))});i.push(h)}}return new J(i)}writeSublayers(e,t,r,i){var f;const{minScale:a,maxScale:p}=this;if(g(e))return;const s=e.some(h=>h.graphics.length>0);if(!this.capabilities.operations.supportsMapNotesEditing)return void(s&&((f=i==null?void 0:i.messages)==null?void 0:f.push(new U("map-notes-layer:editing-not-supported","New map notes cannot be added to this layer"))));const y=[];let u=this.spatialReference.toJSON();e:for(const h of e)for(const S of h.graphics)if(c(S.geometry)){u=S.geometry.spatialReference.toJSON();break e}for(const h of C){const S=e.find(N=>h.id===N.id);this._writeMapNoteSublayer(y,S,h,a,p,u,i)}V("featureCollection.layers",y,t)}get textLayer(){return this._findSublayer("textLayer")}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},e)),Promise.resolve(this)}read(e,t){"featureCollection"in e&&(e=L(e),Object.assign(e,e.featureCollection)),super.read(e,t)}async beforeSave(){if(g(this.sublayers))return;let e=null;const t=[];for(const i of this.sublayers)for(const a of i.graphics)if(c(a.geometry)){const p=a.geometry;e?Y(p.spatialReference,e)||(te(p.spatialReference,e)||re()||await oe(),a.geometry=ie(p,e)):e=p.spatialReference,t.push(a)}const r=await ae(t.map(i=>i.geometry));t.forEach((i,a)=>i.geometry=r[a])}_findSublayer(e){var t;return g(this.sublayers)?null:((t=this.sublayers)==null?void 0:t.find(r=>r.id===e))??null}_writeMapNoteSublayer(e,t,r,i,a,p,s){const y=[];if(!g(t)){for(const u of t.graphics)this._writeMapNote(y,u,r.geometryType,s);this._normalizeObjectIds(y,$),e.push({layerDefinition:{name:t.title,drawingInfo:{renderer:{type:"simple",symbol:L(r.identifyingSymbol)}},id:t.layerId,geometryType:r.geometryTypeJSON,minScale:i,maxScale:a,objectIdField:"OBJECTID",fields:[$.toJSON(),de.toJSON()],spatialReference:p},featureSet:{features:y,geometryType:r.geometryTypeJSON}})}}_writeMapNote(e,t,r,i){var u,f;if(g(t))return;const{geometry:a,symbol:p,popupTemplate:s}=t;if(g(a))return;if(a.type!==r)return void((u=i==null?void 0:i.messages)==null?void 0:u.push(new M("map-notes-layer:invalid-geometry-type",`Geometry "${a.type}" cannot be saved in "${r}" layer`,{graphic:t})));if(g(p))return void((f=i==null?void 0:i.messages)==null?void 0:f.push(new M("map-notes-layer:no-symbol","Skipping map notes with no symbol",{graphic:t})));const y={attributes:{...t.attributes},geometry:a.toJSON(),symbol:p.toJSON()};c(s)&&(y.popupInfo=s.toJSON()),e.push(y)}_normalizeObjectIds(e,t){const r=t.name;let i=se(r,e)+1;const a=new Set;for(const p of e){p.attributes||(p.attributes={});const{attributes:s}=p;(s[r]==null||a.has(s[r]))&&(s[r]=i++),a.add(s[r])}}};o([n({readOnly:!0})],l.prototype,"capabilities",void 0),o([b(["portal-item","web-map"],"capabilities",["layers"])],l.prototype,"readCapabilities",null),o([n({readOnly:!0})],l.prototype,"featureCollections",void 0),o([b(["web-map","portal-item"],"featureCollections",["layers"])],l.prototype,"readFeatureCollections",null),o([n({readOnly:!0,json:{origins:{"web-map":{write:{enabled:!0,target:"featureCollection"}}}}})],l.prototype,"featureCollectionJSON",void 0),o([b(["web-map","portal-item"],"featureCollectionJSON",["featureCollection"])],l.prototype,"readLegacyfeatureCollectionJSON",null),o([n({readOnly:!0,json:{read:!0,write:{enabled:!0,ignoreOrigin:!0}}})],l.prototype,"featureCollectionType",void 0),o([n({readOnly:!0})],l.prototype,"fullExtent",null),o([n({readOnly:!0,json:{origins:{"web-map":{write:{target:"featureCollection.showLegend",overridePolicy(){return{enabled:this.featureCollectionJSON!=null}}}}}}})],l.prototype,"legendEnabled",void 0),o([n({type:["show","hide","hide-children"]})],l.prototype,"listMode",void 0),o([n({type:Number,nonNullable:!0,json:{write:!1}})],l.prototype,"minScale",void 0),o([b(["web-map","portal-item"],"minScale",["layers"])],l.prototype,"readMinScale",null),o([n({type:Number,nonNullable:!0,json:{write:!1}})],l.prototype,"maxScale",void 0),o([b(["web-map","portal-item"],"maxScale",["layers"])],l.prototype,"readMaxScale",null),o([n({readOnly:!0})],l.prototype,"multipointLayer",null),o([n({value:"ArcGISFeatureLayer",type:["ArcGISFeatureLayer"]})],l.prototype,"operationalLayerType",void 0),o([n({readOnly:!0})],l.prototype,"pointLayer",null),o([n({readOnly:!0})],l.prototype,"polygonLayer",null),o([n({readOnly:!0})],l.prototype,"polylineLayer",null),o([n({type:w})],l.prototype,"spatialReference",void 0),o([b(["web-map","portal-item"],"spatialReference",["layers"])],l.prototype,"readSpatialReference",null),o([n({readOnly:!0,json:{origins:{"web-map":{write:{ignoreOrigin:!0}}}}})],l.prototype,"sublayers",void 0),o([b("web-map","sublayers",["layers"])],l.prototype,"readSublayers",null),o([Z("web-map","sublayers")],l.prototype,"writeSublayers",null),o([n({readOnly:!0})],l.prototype,"textLayer",null),o([n()],l.prototype,"title",void 0),o([n({readOnly:!0,json:{read:!1}})],l.prototype,"type",void 0),l=o([T("esri.layers.MapNotesLayer")],l);const $r=l;export{$r as default};
