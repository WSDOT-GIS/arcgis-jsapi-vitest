import{a as d}from"./Error-d97df89f.js";import{a as u}from"./layerUtils-a0871894.js";import{a as I}from"./lazyLayerLoader-29bad81d.js";import L from"./PortalItem-a25335a3.js";import{getNumLayersAndTables as l,preprocessFSItemData as S,getSubtypeGroupLayerIds as g,getFirstLayerOrTableId as T}from"./layersLoader-cab4001a.js";import{s as m}from"./portalItemUtils-72345980.js";import{t as c}from"./fetchService-280e3b9b.js";import"./string-feb899cf.js";import"./typedArrayUtil-96f93e5b.js";import"./request-7c0a9d4c.js";import"./preload-helper-f8378b50.js";import"./promiseUtils-ac1bd36f.js";import"./JSONSupport-ed372989.js";import"./ensureType-348c3d61.js";import"./nextTick-3ee5a785.js";import"./assets-2c955bed.js";import"./Loadable-c96deb83.js";import"./Promise-34cff6d6.js";import"./Extent-fd3ac910.js";import"./cast-73cfc253.js";import"./Portal-172924b2.js";import"./locale-30120714.js";import"./PortalGroup-751b527f.js";import"./PortalUser-7f979a04.js";import"./Layer-07a07202.js";import"./geometry-d89d4a34.js";import"./Polyline-9d44200b.js";import"./typeUtils-2ccaf90d.js";import"./Evented-e2ee9722.js";import"./Identifiable-876da2a8.js";import"./arcgisLayerUrl-9d6ab56c.js";import"./persistableUrlUtils-26091271.js";import"./jsonContext-97094046.js";import"./styleUtils-f45b991d.js";import"./asyncUtils-f0fdc8c7.js";import"./projection-d7a5b449.js";import"./mathUtils-b3bee9e7.js";import"./SimpleObservable-04055e8d.js";import"./mat4-1ee69bd5.js";import"./zscale-e06cee6f.js";async function he(e){!e.portalItem||e.portalItem instanceof L||(e={...e,portalItem:new L(e.portalItem)});const r=await v(e.portalItem);return new r.constructor({portalItem:e.portalItem,...r.properties})}async function v(e){return await e.load(),G(await F(e))}async function F(e){switch(e.type){case"Map Service":return M(e);case"Feature Service":return $(e);case"Feature Collection":return b(e);case"Scene Service":return h(e);case"Image Service":return C(e);case"Stream Service":return V();case"Vector Tile Service":return j();case"GeoJson":return W();case"CSV":return D();case"KML":return K();case"WFS":return O();case"WMTS":return x();case"WMS":return k();case"Feed":return A();default:throw new d("portal:unknown-item-type","Unknown item type '${type}'",{type:e.type})}}async function G(e){const r=I[e.className];return{constructor:await r(),properties:e.properties}}async function M(e){return await R(e)?{className:"TileLayer"}:{className:"MapImageLayer"}}async function $(e){if(m(e,"Oriented Imagery Layer"))return J(e);const r=await N(e);if(typeof r=="object"){const a={};return r.id!=null&&(a.layerId=r.id),{className:r.className||"FeatureLayer",properties:a}}return{className:"GroupLayer"}}async function h(e){var a,t;const r=await N(e);if(typeof r=="object"){const s={};let n;if(r.id!=null?(s.layerId=r.id,n=`${e.url}/layers/${r.id}`):n=e.url,(a=e.typeKeywords)==null?void 0:a.length){for(const i of Object.keys(u))if(e.typeKeywords.includes(i))return{className:u[i]}}const o=await c(n);return{className:u[o==null?void 0:o.layerType]||"SceneLayer",properties:s}}return r===!1?((t=await c(e.url))==null?void 0:t.layerType)==="Voxel"?{className:"VoxelLayer"}:{className:"GroupLayer"}:{className:"GroupLayer"}}async function b(e){await e.load();const r=m(e,"Map Notes"),a=m(e,"Markup");if(r||a)return{className:"MapNotesLayer"};if(m(e,"Route Layer"))return{className:"RouteLayer"};const t=await e.fetchData();return l(t)===1?{className:"FeatureLayer"}:{className:"GroupLayer"}}async function C(e){var o,i,y,f;await e.load();const r=((o=e.typeKeywords)==null?void 0:o.map(w=>w.toLowerCase()))??[];if(r.includes("elevation 3d layer"))return{className:"ElevationLayer"};if(r.includes("tiled imagery"))return{className:"ImageryTileLayer"};const a=(i=await e.fetchData())==null?void 0:i.layerType;if(a==="ArcGISTiledImageServiceLayer")return{className:"ImageryTileLayer"};if(a==="ArcGISImageServiceLayer")return{className:"ImageryLayer"};const t=await c(e.url),s=(y=t.cacheType)==null?void 0:y.toLowerCase(),n=(f=t.capabilities)==null?void 0:f.toLowerCase().includes("tilesonly");return s==="map"||n?{className:"ImageryTileLayer"}:{className:"ImageryLayer"}}function V(){return{className:"StreamLayer"}}function j(){return{className:"VectorTileLayer"}}function W(){return{className:"GeoJSONLayer"}}function D(){return{className:"CSVLayer"}}function K(){return{className:"KMLLayer"}}function O(){return{className:"WFSLayer"}}function k(){return{className:"WMSLayer"}}function x(){return{className:"WMTSLayer"}}function A(){return{className:"StreamLayer"}}async function J(e){await e.load();const r=await e.fetchData();return r.coverage?{className:"GroupLayer"}:{className:"OrientedImageryLayer",properties:r}}async function R(e){return(await c(e.url)).tileInfo}async function N(e){const r=e.url;if(!r||r.match(/\/\d+$/))return{};await e.load();const a=await e.fetchData();if(e.type==="Feature Service"){const t=p(await S(a,r));if(typeof t=="object"){const s=g(a);t.className=t.id!=null&&s.includes(t.id)?"SubtypeGroupLayer":"FeatureLayer"}return t}return l(a)>0?p(a):p(await c(r))}function p(e){return l(e)===1&&{id:T(e)}}export{he as fromItem,F as selectLayerClassPath};
