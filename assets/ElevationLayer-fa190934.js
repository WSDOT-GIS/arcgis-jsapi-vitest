import{_}from"./preload-helper-f8378b50.js";import{e as a,y as l,a as f}from"./Accessor-815cb0cf.js";import{U as y,e as g}from"./request-ae7029ea.js";import{s as w,a as V}from"./Error-781981d1.js";import{t as D,g as u,r as d,F as $,E as T}from"./typedArrayUtil-74bbfd45.js";import{O as b}from"./MultiOriginJSONSupport-6a5e69d5.js";import{f as c,w as S}from"./promiseUtils-28f2a985.js";import"./ensureType-125d327f.js";import{o as L}from"./Extent-8fae2379.js";import{v as x}from"./HeightModelInfo-0c04472c.js";import{b as k}from"./Layer-974413c8.js";import{s as I}from"./ArcGISCachedService-343280a0.js";import{p as E}from"./ArcGISService-cdf8a9a9.js";import{c as O}from"./OperationalLayer-80c22541.js";import{_ as N}from"./PortalLayer-d601e363.js";import{f as P}from"./commonProperties-64b016df.js";import{n as j}from"./watch-c7facfb0.js";import{u as A}from"./workers-8153041b.js";import"./string-75082bc6.js";import"./ArrayPool-ae2ef0ab.js";import"./JSONSupport-2b897629.js";import"./cast-f7d2a22f.js";import"./geometry-0d19f94b.js";import"./Polyline-40b9e769.js";import"./typeUtils-3bf84b36.js";import"./Evented-3dfb26f2.js";import"./Identifiable-f5397426.js";import"./Loadable-6776e4d9.js";import"./Promise-092442f7.js";import"./TilemapCache-ceead937.js";import"./TileInfo-1aef4d7f.js";import"./aaBoundingRect-3cd21eb0.js";import"./mathUtils-15f63a45.js";import"./TileKey-b87e0dc5.js";import"./byteSizeEstimations-90c5a50d.js";import"./HandleOwner-124247b4.js";import"./reactiveUtils-31da19f9.js";import"./LRUCache-425021b3.js";import"./MemCache-9d81d118.js";import"./arcgisLayerUrl-0e1d3d82.js";import"./persistableUrlUtils-73be900a.js";import"./asyncUtils-5c97747c.js";import"./layerUtils-7438cb6b.js";import"./Portal-2a7c40a2.js";import"./locale-30120714.js";import"./PortalGroup-d3a43002.js";import"./PortalUser-c84fcbac.js";import"./nextTick-3ee5a785.js";import"./PortalItem-051eae04.js";import"./assets-01239caf.js";import"./portalItemUtils-2695e0b3.js";import"./projection-319bc7cc.js";import"./SimpleObservable-729c9019.js";import"./mat4-a8da3f27.js";import"./zscale-a617710a.js";import"./TimeExtent-202e4138.js";import"./ElevationInfo-91b8239c.js";import"./fieldUtils-e6cf5e5f.js";import"./lengthUtils-40356f92.js";import"./opacityUtils-107b33de.js";import"./Connection-59240e9d.js";import"./Queue-687500af.js";import"./intl-b6f3ccd9.js";import"./number-5e819186.js";import"./messages-dc0c80a1.js";class M{constructor(e,t,r,o){this._hasNoDataValues=null,this._minValue=null,this._maxValue=null,"pixelData"in e?(this.values=e.pixelData,this.width=e.width,this.height=e.height,this.noDataValue=e.noDataValue):(this.values=e,this.width=t,this.height=r,this.noDataValue=o)}get hasNoDataValues(){if(D(this._hasNoDataValues)){const e=this.noDataValue;this._hasNoDataValues=this.values.includes(e)}return this._hasNoDataValues}get minValue(){return this._ensureBounds(),u(this._minValue)}get maxValue(){return this._ensureBounds(),u(this._maxValue)}_ensureBounds(){if(d(this._minValue))return;const{noDataValue:e,values:t}=this;let r=1/0,o=-1/0,h=!0;for(const n of t)n===e?this._hasNoDataValues=!0:(r=n<r?n:r,o=n>o?n:o,h=!1);h?(this._minValue=0,this._maxValue=0):(this._minValue=r,this._maxValue=o>-3e38?o:0)}}class U{constructor(e,t,r,o,h={}){this._mainMethod=t,this._transferLists=r,this._listeners=[],this._promise=A(e,{...h,schedule:o}).then(n=>{if(this._thread===void 0){this._thread=n,this._promise=null,h.hasInitialize&&this.broadcast({},"initialize");for(const p of this._listeners)this._connectListener(p)}else n.close()}),this._promise.catch(n=>w.getLogger("esri.core.workers.WorkerHandle").error(`Failed to initialize ${e} worker: ${n}`))}on(e,t){const r={removed:!1,eventName:e,callback:t,threadHandle:null};return this._listeners.push(r),this._connectListener(r),j(()=>{r.removed=!0,$(this._listeners,r),this._thread&&d(r.threadHandle)&&r.threadHandle.remove()})}destroy(){this._thread&&(this._thread.close(),this._thread=null),this._promise=null}invoke(e,t){return this.invokeMethod(this._mainMethod,e,t)}invokeMethod(e,t,r){if(this._thread){const o=this._transferLists[e],h=o?o(t):[];return this._thread.invoke(e,t,{transferList:h,signal:r})}return this._promise?this._promise.then(()=>(c(r),this.invokeMethod(e,t,r))):Promise.reject(null)}broadcast(e,t){return this._thread?Promise.all(this._thread.broadcast(t,e)).then(()=>{}):this._promise?this._promise.then(()=>this.broadcast(e,t)):Promise.reject()}get promise(){return this._promise}_connectListener(e){this._thread&&this._thread.on(e.eventName,e.callback).then(t=>{e.removed||(e.threadHandle=t)})}}class v extends U{constructor(e=null){super("LercWorker","_decode",{_decode:t=>[t.buffer]},e,{strategy:"dedicated"}),this.schedule=e,this.ref=0}decode(e,t,r){return e&&e.byteLength!==0?this.invoke({buffer:e,options:t},r):Promise.resolve(null)}release(){--this.ref<=0&&(m.forEach((e,t)=>{e===this&&m.delete(t)}),this.destroy())}}const m=new Map;function C(i=null){let e=m.get(u(i));return e||(d(i)?(e=new v(t=>i.immediate.schedule(t)),m.set(i,e)):(e=new v,m.set(null,e))),++e.ref,e}let s=class extends I(E(O(N(b(k))))){constructor(...i){super(...i),this.copyright=null,this.heightModelInfo=null,this.path=null,this.minScale=void 0,this.maxScale=void 0,this.opacity=1,this.operationalLayerType="ArcGISTiledElevationServiceLayer",this.sourceJSON=null,this.type="elevation",this.url=null,this.version=null,this._lercDecoder=C()}normalizeCtorArgs(i,e){return typeof i=="string"?{url:i,...e}:i}destroy(){this._lercDecoder=T(this._lercDecoder)}readVersion(i,e){let t=e.currentVersion;return t||(t=9.3),t}load(i){const e=d(i)?i.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"],supportsData:!1,validateItem:t=>{for(let r=0;r<t.typeKeywords.length;r++)if(t.typeKeywords[r].toLowerCase()==="elevation 3d layer")return!0;throw new V("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}' ",{type:"Image Service",expectedType:"Image Service Elevation 3D Layer"})}},i).catch(S).then(()=>this._fetchImageService(e))),Promise.resolve(this)}fetchTile(i,e,t,r){const o=d((r=r||{signal:null}).signal)?r.signal:r.signal=new AbortController().signal,h={responseType:"array-buffer",signal:o},n={noDataValue:r.noDataValue,returnFileInfo:!0};return this.load().then(()=>this._fetchTileAvailability(i,e,t,r)).then(()=>y(this.getTileUrl(i,e,t),h)).then(p=>this._lercDecoder.decode(p.data,n,o)).then(p=>new M(p))}getTileUrl(i,e,t){const r=!this.tilemapCache&&this.supportsBlankTile,o=g({...this.parsedUrl.query,blankTile:!r&&null});return`${this.parsedUrl.path}/tile/${i}/${e}/${t}${o?"?"+o:""}`}async queryElevation(i,e){const{ElevationQuery:t}=await _(()=>import("./ElevationQuery-61c02344.js"),["assets/ElevationQuery-61c02344.js","assets/asyncUtils-5c97747c.js","assets/Accessor-815cb0cf.js","assets/typedArrayUtil-74bbfd45.js","assets/watch-c7facfb0.js","assets/ArrayPool-ae2ef0ab.js","assets/string-75082bc6.js","assets/nextTick-3ee5a785.js","assets/promiseUtils-28f2a985.js","assets/Error-781981d1.js","assets/ensureType-125d327f.js","assets/Extent-8fae2379.js","assets/JSONSupport-2b897629.js","assets/cast-f7d2a22f.js","assets/Polyline-40b9e769.js","assets/projection-319bc7cc.js","assets/preload-helper-f8378b50.js","assets/mathUtils-15f63a45.js","assets/SimpleObservable-729c9019.js","assets/mat4-a8da3f27.js","assets/assets-01239caf.js","assets/request-ae7029ea.js","assets/zscale-a617710a.js","assets/aaBoundingRect-3cd21eb0.js","assets/geometry-0d19f94b.js","assets/typeUtils-3bf84b36.js","assets/TileKey-b87e0dc5.js"]);return c(e),new t().query(this,i,e)}async createElevationSampler(i,e){const{ElevationQuery:t}=await _(()=>import("./ElevationQuery-61c02344.js"),["assets/ElevationQuery-61c02344.js","assets/asyncUtils-5c97747c.js","assets/Accessor-815cb0cf.js","assets/typedArrayUtil-74bbfd45.js","assets/watch-c7facfb0.js","assets/ArrayPool-ae2ef0ab.js","assets/string-75082bc6.js","assets/nextTick-3ee5a785.js","assets/promiseUtils-28f2a985.js","assets/Error-781981d1.js","assets/ensureType-125d327f.js","assets/Extent-8fae2379.js","assets/JSONSupport-2b897629.js","assets/cast-f7d2a22f.js","assets/Polyline-40b9e769.js","assets/projection-319bc7cc.js","assets/preload-helper-f8378b50.js","assets/mathUtils-15f63a45.js","assets/SimpleObservable-729c9019.js","assets/mat4-a8da3f27.js","assets/assets-01239caf.js","assets/request-ae7029ea.js","assets/zscale-a617710a.js","assets/aaBoundingRect-3cd21eb0.js","assets/geometry-0d19f94b.js","assets/typeUtils-3bf84b36.js","assets/TileKey-b87e0dc5.js"]);return c(e),new t().createSampler(this,i,e)}_fetchTileAvailability(i,e,t,r){return this.tilemapCache?this.tilemapCache.fetchAvailability(i,e,t,r):Promise.resolve("unknown")}async _fetchImageService(i){var r;if(this.sourceJSON)return this.sourceJSON;const e={query:{f:"json",...this.parsedUrl.query},responseType:"json",signal:i},t=await y(this.parsedUrl.path,e);t.ssl&&(this.url=(r=this.url)==null?void 0:r.replace(/^http:/i,"https:")),this.sourceJSON=t.data,this.read(t.data,{origin:"service",url:this.parsedUrl})}get hasOverriddenFetchTile(){return!this.fetchTile.__isDefault__}};a([l({json:{read:{source:"copyrightText"}}})],s.prototype,"copyright",void 0),a([l({readOnly:!0,type:x})],s.prototype,"heightModelInfo",void 0),a([l({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],s.prototype,"path",void 0),a([l({type:["show","hide"]})],s.prototype,"listMode",void 0),a([l({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}},readOnly:!0})],s.prototype,"minScale",void 0),a([l({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}},readOnly:!0})],s.prototype,"maxScale",void 0),a([l({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],s.prototype,"opacity",void 0),a([l({type:["ArcGISTiledElevationServiceLayer"]})],s.prototype,"operationalLayerType",void 0),a([l()],s.prototype,"sourceJSON",void 0),a([l({json:{read:!1},value:"elevation",readOnly:!0})],s.prototype,"type",void 0),a([l(P)],s.prototype,"url",void 0),a([l()],s.prototype,"version",void 0),a([L("version",["currentVersion"])],s.prototype,"readVersion",null),s=a([f("esri.layers.ElevationLayer")],s),s.prototype.fetchTile.__isDefault__=!0;const Xe=s;export{Xe as default};
