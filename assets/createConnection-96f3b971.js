import{_ as N}from"./preload-helper-f8378b50.js";import{e as f,y as _,a as b}from"./JSONSupport-ed372989.js";import"./geometry-d89d4a34.js";import{E as F,U as O}from"./request-7c0a9d4c.js";import{a as c,s as a}from"./Error-d97df89f.js";import{r as h,t as g,B as C,x as E}from"./typedArrayUtil-96f93e5b.js";import{U as P,D as R}from"./promiseUtils-ac1bd36f.js";import"./ensureType-348c3d61.js";import"./string-feb899cf.js";import{o as x}from"./zscale-e06cee6f.js";import{n as M}from"./Evented-e2ee9722.js";import{c as v}from"./query-eac603fe.js";import{x as W}from"./Query-bf719160.js";import{v as T}from"./jsonUtils-dd0891e0.js";import{f as q}from"./Extent-fd3ac910.js";import"./nextTick-3ee5a785.js";import"./Polyline-9d44200b.js";import"./typeUtils-2ccaf90d.js";import"./cast-73cfc253.js";import"./normalizeUtils-9dc1c489.js";import"./normalizeUtilsCommon-155f1aa2.js";import"./utils-ada6b2ec.js";import"./urlUtils-6a004888.js";import"./pbfQueryUtils-bad736cf.js";import"./pbf-3634de4f.js";import"./OptimizedFeature-7af17710.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./queryZScale-a0b71b11.js";import"./TimeExtent-d2d7594c.js";import"./enumeration-49e09bda.js";import"./DataLayerSource-71059dc4.js";import"./Field-b17a677d.js";import"./fieldType-b21f2e7f.js";import"./Clonable-5318ec31.js";let S=class extends M.EventedAccessor{destroy(){this.emit("destroy")}get connectionError(){return this.errorString?new c("stream-connection",this.errorString):null}onFeature(e){this.emit("data-received",e)}onMessage(e){this.emit("message-received",e)}};f([_({readOnly:!0})],S.prototype,"connectionError",null),S=f([b("esri.layers.support.StreamConnection")],S);const L=S;var p;(function(e){e[e.CONNECTING=0]="CONNECTING",e[e.OPEN=1]="OPEN",e[e.CLOSING=2]="CLOSING",e[e.CLOSED=3]="CLOSED"})(p||(p={}));let m=class extends L{constructor(e){super(),this._outstandingMessages=[],this.errorString=null;const{geometryType:t,spatialReference:r,sourceSpatialReference:s}=e;this._config=e,this._featureZScaler=x(t,s,r),this._open()}async _open(){await this._tryCreateWebSocket(),this.destroyed||await this._handshake()}destroy(){super.destroy(),h(this._websocket)&&(this._websocket.onopen=null,this._websocket.onclose=null,this._websocket.onerror=null,this._websocket.onmessage=null,this._websocket.close()),this._websocket=null}get connectionStatus(){if(g(this._websocket))return"disconnected";switch(this._websocket.readyState){case p.CONNECTING:case p.OPEN:return"connected";case p.CLOSING:case p.CLOSED:return"disconnected"}}sendMessageToSocket(e){g(this._websocket)?this._outstandingMessages.push(e):this._websocket.send(JSON.stringify(e))}sendMessageToClient(e){this._onMessage(e)}updateCustomParameters(e){this._config.customParameters=e,h(this._websocket)&&this._websocket.close()}async _tryCreateWebSocket(e=this._config.source.path,t=1e3,r=0){try{if(this.destroyed)return;const s=F(e,this._config.customParameters??{});this._websocket=await this._createWebSocket(s),this.notifyChange("connectionStatus")}catch(s){const o=t/1e3;return this._config.maxReconnectionAttempts&&r>=this._config.maxReconnectionAttempts?(a.getLogger(this.declaredClass).error(new c("websocket-connection","Exceeded maxReconnectionAttempts attempts. No further attempts will be made")),void this.destroy()):(a.getLogger(this.declaredClass).error(new c("websocket-connection",`Failed to connect. Attempting to reconnect in ${o}s`,s)),await P(t),this._tryCreateWebSocket(e,Math.min(1.5*t,1e3*this._config.maxReconnectionInterval),r+1))}}_setWebSocketJSONParseHandler(e){e.onmessage=t=>{try{const r=JSON.parse(t.data);this._onMessage(r)}catch(r){return void a.getLogger(this.declaredClass).error(new c("websocket-connection","Failed to parse message, invalid JSON",{error:r}))}}}_createWebSocket(e){return new Promise((t,r)=>{const s=new WebSocket(e);s.onopen=()=>{if(s.onopen=null,this.destroyed)return s.onclose=null,void s.close();s.onclose=o=>this._onClose(o),s.onerror=o=>this._onError(o),this._setWebSocketJSONParseHandler(s),t(s)},s.onclose=o=>{s.onopen=s.onclose=null,r(o)}})}async _handshake(e=1e4){const t=this._websocket;if(g(t))return;const r=R(),s=t.onmessage,{filter:o,outFields:n,spatialReference:l}=this._config;return r.timeout(e),t.onmessage=d=>{var i;let u=null;try{u=JSON.parse(d.data)}catch{}u&&typeof u=="object"||(a.getLogger(this.declaredClass).error(new c("websocket-connection","Protocol violation. Handshake failed - malformed message",d.data)),r.reject(),this.destroy()),((i=u.spatialReference)==null?void 0:i.wkid)!==(l==null?void 0:l.wkid)&&(a.getLogger(this.declaredClass).error(new c("websocket-connection",`Protocol violation. Handshake failed - expected wkid of ${l.wkid}`,d.data)),r.reject(),this.destroy()),u.format!=="json"&&(a.getLogger(this.declaredClass).error(new c("websocket-connection","Protocol violation. Handshake failed - format is not set",d.data)),r.reject(),this.destroy()),o&&u.filter!==o&&a.getLogger(this.declaredClass).error(new c("websocket-connection","Tried to set filter, but server doesn't support it")),n&&u.outFields!==n&&a.getLogger(this.declaredClass).error(new c("websocket-connection","Tried to set outFields, but server doesn't support it")),t.onmessage=s;for(const w of this._outstandingMessages)t.send(JSON.stringify(w));this._outstandingMessages=[],r.resolve()},t.send(JSON.stringify({filter:o,outFields:n,format:"json",spatialReference:{wkid:l.wkid}})),r.promise}_onMessage(e){if(this.onMessage(e),"type"in e)switch(e.type){case"features":case"featureResult":for(const t of e.features)h(this._featureZScaler)&&this._featureZScaler(t.geometry),this.onFeature(t)}}_onError(e){const t="Encountered an error over WebSocket connection";this._set("errorString",t),a.getLogger(this.declaredClass).error("websocket-connection",t)}_onClose(e){this._websocket=null,this.notifyChange("connectionStatus"),e.code!==1e3&&a.getLogger(this.declaredClass).error("websocket-connection",`WebSocket closed unexpectedly with error code ${e.code}`),this.destroyed||this._open()}};f([_()],m.prototype,"connectionStatus",null),f([_()],m.prototype,"errorString",void 0),m=f([b("esri.layers.graphics.sources.connections.WebSocketConnection")],m);const j=1e4,D={maxQueryDepth:5,maxRecordCountFactor:3};let k=class extends m{constructor(e){super({...D,...e}),this._buddyServicesQuery=null,this._relatedFeatures=null}async _open(){const e=await this._fetchServiceDefinition(this._config.source);e.timeInfo.trackIdField||a.getLogger(this.declaredClass).warn("GeoEvent service was configured without a TrackIdField. This may result in certain functionality being disabled. The purgeOptions.maxObservations property will have no effect.");const t=this._fetchWebSocketUrl(e.streamUrls,this._config.spatialReference);this._buddyServicesQuery||(this._buddyServicesQuery=this._queryBuddyServices()),await this._buddyServicesQuery,await this._tryCreateWebSocket(t);const{filter:r,outFields:s}=this._config;this.destroyed||this._setFilter(r,s)}_onMessage(e){if("attributes"in e){let t;try{t=this._enrich(e),h(this._featureZScaler)&&this._featureZScaler(t.geometry)}catch(r){return void a.getLogger(this.declaredClass).error(new c("geoevent-connection","Failed to parse message",r))}this.onFeature(t)}else this.onMessage(e)}async _fetchServiceDefinition(e){const t={f:"json",...this._config.customParameters},r=O(e.path,{query:t,responseType:"json"}),s=(await r).data;return this._serviceDefinition=s,s}_fetchWebSocketUrl(e,t){const r=e[0],{urls:s,token:o}=r,n=this._inferWebSocketBaseUrl(s);return F(`${n}/subscribe`,{outSR:""+t.wkid,token:o})}_inferWebSocketBaseUrl(e){if(e.length===1)return e[0];for(const t of e)if(t.includes("wss"))return t;return a.getLogger(this.declaredClass).error(new c("geoevent-connection","Unable to infer WebSocket url",e)),null}async _setFilter(e,t){const r=this._websocket;if(g(r)||g(e)&&g(t))return;const s=JSON.stringify({filter:this._serializeFilter(e,t)});let o=!1;const n=R(),l=()=>{o||(this.destroyed||this._websocket!==r||a.getLogger(this.declaredClass).error(new c("geoevent-connection","Server timed out when setting filter")),n.reject())},d=u=>{const i=JSON.parse(u.data);i.filter&&(i.error&&(a.getLogger(this.declaredClass).error(new c("geoevent-connection","Failed to set service filter",i.error)),this._set("errorString",`Could not set service filter - ${i.error}`),n.reject(i.error)),this._setWebSocketJSONParseHandler(r),o=!0,n.resolve())};return r.onmessage=d,r.send(s),setTimeout(l,j),n.promise}_serializeFilter(e,t){const r={};if(g(e)&&g(t))return r;if(h(e)&&e.geometry)try{const s=T(e.geometry);if(s.type!=="extent")throw new c(`Expected extent but found type ${s.type}`);r.geometry=JSON.stringify(s.shiftCentralMeridian())}catch(s){a.getLogger(this.declaredClass).error(new c("geoevent-connection","Encountered an error when setting connection geometryDefinition",s))}return h(e)&&e.where&&e.where!=="1 = 1"&&e.where!=="1=1"&&(r.where=e.where),h(t)&&(r.outFields=t.join(",")),r}_enrich(e){if(!this._relatedFeatures)return e;const t=this._serviceDefinition.relatedFeatures.joinField,r=e.attributes[t],s=this._relatedFeatures.get(r);if(!s)return a.getLogger(this.declaredClass).warn("geoevent-connection","Feature join failed. Is the join field configured correctly?",e),e;const{attributes:o,geometry:n}=s;for(const l in o)e.attributes[l]=o[l];return n&&(e.geometry=n),e.geometry||e.centroid||a.getLogger(this.declaredClass).error(new c("geoevent-connection","Found malformed feature - no geometry found",e)),e}async _queryBuddyServices(){try{const{relatedFeatures:e,keepLatestArchive:t}=this._serviceDefinition,r=this._queryRelatedFeatures(e),s=this._queryArchive(t);await r;const o=await s;if(!o)return;for(const n of o.features)this.onFeature(this._enrich(n))}catch(e){a.getLogger(this.declaredClass).error(new c("geoevent-connection","Encountered an error when querying buddy services",{error:e}))}}async _queryRelatedFeatures(e){if(!e)return;const t=await this._queryBuddy(e.featuresUrl);this._addRelatedFeatures(t)}async _queryArchive(e){if(e)return this._queryBuddy(e.featuresUrl)}async _queryBuddy(e){const t=new(await N(()=>import("./FeatureLayer-42e1678e.js"),["assets/FeatureLayer-42e1678e.js","assets/preload-helper-f8378b50.js","assets/JSONSupport-ed372989.js","assets/typedArrayUtil-96f93e5b.js","assets/string-feb899cf.js","assets/Error-d97df89f.js","assets/ensureType-348c3d61.js","assets/nextTick-3ee5a785.js","assets/promiseUtils-ac1bd36f.js","assets/PopupTemplate-63dce4d3.js","assets/Clonable-5318ec31.js","assets/Collection-d9d92883.js","assets/Evented-e2ee9722.js","assets/SimpleObservable-04055e8d.js","assets/cast-73cfc253.js","assets/Extent-fd3ac910.js","assets/fieldUtils-66be74eb.js","assets/geometry-d89d4a34.js","assets/Polyline-9d44200b.js","assets/typeUtils-2ccaf90d.js","assets/enumeration-49e09bda.js","assets/number-205e28e0.js","assets/locale-30120714.js","assets/Identifiable-876da2a8.js","assets/UniqueValueRenderer-b6a7d586.js","assets/symbols-946d4e11.js","assets/CIMSymbol-0fa077f5.js","assets/Color-9f46ece8.js","assets/colorUtils-639f4d25.js","assets/mathUtils-b3bee9e7.js","assets/screenUtils-7afeb41c.js","assets/opacityUtils-cc413a8c.js","assets/symbolLayerUtils3D-0c6ed99a.js","assets/aaBoundingBox-1eda6d1b.js","assets/request-7c0a9d4c.js","assets/persistableUrlUtils-26091271.js","assets/collectionUtils-e98ed3f0.js","assets/Portal-172924b2.js","assets/Loadable-c96deb83.js","assets/Promise-34cff6d6.js","assets/PortalGroup-751b527f.js","assets/PortalUser-7f979a04.js","assets/LegendOptions-8200d5f5.js","assets/reactiveUtils-307e98f9.js","assets/diffUtils-ac6d6369.js","assets/colorRamps-fff34da2.js","assets/sizeVariableUtils-d4870b0d.js","assets/visualVariableUtils-6f05f98d.js","assets/Graphic-f117754c.js","assets/jsonUtils-dd0891e0.js","assets/compilerUtils-8d4f8499.js","assets/lengthUtils-bc8879ed.js","assets/jsonUtils-7442f08f.js","assets/layerUtils-a0871894.js","assets/styleUtils-1d3bc535.js","assets/jsonUtils-37cc07d7.js","assets/DictionaryLoader-0dadb1e0.js","assets/LRUCache-9c365b2a.js","assets/MemCache-7d4aa654.js","assets/deprecate-424c57c7.js","assets/heatmapUtils-16ee21b5.js","assets/vec4f64-aa64c7e9.js","assets/MultiOriginJSONSupport-97bf66dd.js","assets/serviceCapabilitiesUtils-02cebe9b.js","assets/arcgisLayerUrl-9d6ab56c.js","assets/FeatureLayerBase-de1a166f.js","assets/Field-b17a677d.js","assets/fieldType-b21f2e7f.js","assets/HeightModelInfo-bad6650e.js","assets/OperationalLayer-a420b681.js","assets/TimeExtent-d2d7594c.js","assets/ElevationInfo-75e7bf35.js","assets/TimeReference-b6332926.js","assets/datetime-b6333958.js","assets/AttachmentQuery-c89a8ac2.js","assets/Query-bf719160.js","assets/DataLayerSource-71059dc4.js","assets/RelationshipQuery-a13e27d1.js","assets/Layer-07a07202.js","assets/HandleOwner-4c8d824c.js","assets/workers-4f8dfa2f.js","assets/Connection-5e453cc1.js","assets/Queue-c92bc561.js","assets/assets-2c955bed.js","assets/intl-7c488bb0.js","assets/messages-226fbb40.js","assets/editsZScale-b954eebc.js","assets/queryZScale-a0b71b11.js","assets/zscale-e06cee6f.js","assets/FeatureSet-00b7d51e.js","assets/APIKeyMixin-b93c2049.js","assets/ArcGISService-cca20289.js","assets/BlendLayer-5cec7349.js","assets/parser-a11e786f.js","assets/mat4f32-60a2394b.js","assets/mat4-1ee69bd5.js","assets/CustomParametersMixin-01a04769.js","assets/EditBusLayer-984da402.js","assets/FeatureReductionLayer-fd41123b.js","assets/labelingInfo-f7d1c159.js","assets/labelUtils-6965a8ca.js","assets/defaultsJSON-b087dd4d.js","assets/OrderedLayer-9cb8835d.js","assets/PortalLayer-d54f6a39.js","assets/asyncUtils-f0fdc8c7.js","assets/PortalItem-a25335a3.js","assets/portalItemUtils-72345980.js","assets/projection-d7a5b449.js","assets/RefreshableLayer-672ecb56.js","assets/ScaleRangeLayer-24099455.js","assets/TemporalLayer-c479c738.js","assets/FeatureTemplate-1fd8fac4.js","assets/FeatureType-b736019f.js","assets/fieldProperties-1fb52610.js","assets/FieldsIndex-7c963fe9.js","assets/versionUtils-aabb6832.js","assets/styleUtils-f45b991d.js","assets/TopFeaturesQuery-5bb7c994.js","assets/popupUtils-3d5141e6.js"])).default({url:e}),{capabilities:r}=await t.load(),s=r.query.supportsMaxRecordCountFactor,o=r.query.supportsPagination,n=r.query.supportsCentroid,l=this._config.maxRecordCountFactor,d=t.capabilities.query.maxRecordCount,u=s?d*l:d,i=new W;if(i.outFields=C(this._config.outFields,["*"]),i.where=C(E(this._config.filter,"where"),"1=1"),i.returnGeometry=!0,i.returnExceededLimitFeatures=!0,i.outSpatialReference=q.fromJSON(this._config.spatialReference),n&&(i.returnCentroid=!0),s&&(i.maxRecordCountFactor=l),o)return i.num=u,t.destroy(),this._queryPages(e,i);const w=await v(e,i,this._config.sourceSpatialReference);return t.destroy(),w.data}async _queryPages(e,t,r=[],s=0){t.start=h(t.num)?s*t.num:null;const{data:o}=await v(e,t,this._config.sourceSpatialReference);return o.exceededTransferLimit&&s<(this._config.maxQueryDepth??0)?(o.features.forEach(n=>r.push(n)),this._queryPages(e,t,r,s+1)):(r.forEach(n=>o.features.push(n)),o)}_addRelatedFeatures(e){const t=new Map,r=e.features,s=this._serviceDefinition.relatedFeatures.joinField;for(const o of r){const n=o.attributes[s];t.set(n,o)}this._relatedFeatures=t}};k=f([b("esri.layers.graphics.sources.connections.GeoEventConnection")],k);const I=k;let y=class extends L{constructor(e){super(),this.connectionStatus="connected",this.errorString=null;const{geometryType:t,spatialReference:r,sourceSpatialReference:s}=e;this._featureZScaler=x(t,s,r)}updateCustomParameters(e){}sendMessageToSocket(e){}sendMessageToClient(e){if("type"in e)switch(e.type){case"features":case"featureResult":for(const t of e.features)h(this._featureZScaler)&&this._featureZScaler(t.geometry),this.onFeature(t)}this.onMessage(e)}};f([_()],y.prototype,"connectionStatus",void 0),f([_()],y.prototype,"errorString",void 0),y=f([b("esri.layers.support.ClientSideConnection")],y);function Se(e,t,r,s,o,n,l,d){const u={source:e,sourceSpatialReference:t,spatialReference:r,geometryType:s,filter:o,maxReconnectionAttempts:n,maxReconnectionInterval:l,customParameters:d};return e?e.path.startsWith("wss://")||e.path.startsWith("ws://")?new m(u):new I(u):new y(u)}export{Se as createConnection};
