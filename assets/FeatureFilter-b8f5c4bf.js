import{s as l,a as d}from"./Error-d97df89f.js";import{t as _}from"./typedArrayUtil-96f93e5b.js";import{u as c}from"./aaBoundingRect-a7e9efee.js";import{c as u}from"./Polyline-9d44200b.js";import{v as y,n as f}from"./timeSupport-e2f5a7bb.js";import{J as w}from"./utils-4333ac1b.js";import{x as I}from"./Query-bf719160.js";import{p as b}from"./FeatureStore2D-7bb8eb49.js";import{_ as T}from"./preload-helper-f8378b50.js";import"./string-feb899cf.js";import"./mathUtils-b3bee9e7.js";import"./Extent-fd3ac910.js";import"./JSONSupport-ed372989.js";import"./ensureType-348c3d61.js";import"./nextTick-3ee5a785.js";import"./promiseUtils-ac1bd36f.js";import"./cast-73cfc253.js";import"./jsonUtils-dd0891e0.js";import"./featureConversionUtils-00c47b2e.js";import"./aaBoundingBox-1eda6d1b.js";import"./OptimizedFeature-7af17710.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./projectionSupport-5e649f05.js";import"./projection-d7a5b449.js";import"./SimpleObservable-04055e8d.js";import"./mat4-1ee69bd5.js";import"./assets-2c955bed.js";import"./request-7c0a9d4c.js";import"./zscale-e06cee6f.js";import"./json-48e3ea08.js";import"./normalizeUtils-9dc1c489.js";import"./normalizeUtilsCommon-155f1aa2.js";import"./geometry-d89d4a34.js";import"./typeUtils-2ccaf90d.js";import"./utils-ada6b2ec.js";import"./TimeExtent-d2d7594c.js";import"./enumeration-49e09bda.js";import"./DataLayerSource-71059dc4.js";import"./Field-b17a677d.js";import"./fieldType-b21f2e7f.js";import"./Clonable-5318ec31.js";import"./CircularArray-364d163c.js";import"./Evented-e2ee9722.js";import"./rbush-f2a85c98.js";import"./quickselect-56c5966e.js";import"./diffUtils-ac6d6369.js";import"./Collection-d9d92883.js";import"./fieldUtils-66be74eb.js";import"./FeatureSetReader-f1a46ee8.js";import"./ArcadeDate-3d8ef842.js";import"./executionError-fb3f283a.js";import"./datetime-b6333958.js";import"./arcadeTimeUtils-37d6c274.js";import"./FieldsIndex-7c963fe9.js";import"./TimeReference-b6332926.js";import"./centroid-47d0a8f7.js";const p=l.getLogger("esri.views.2d.layers.features.support.whereUtils"),g={getAttribute:(s,t)=>s.field(t)};async function v(s,t){const e=await T(()=>import("./WhereClause-a4dbe0c1.js").then(i=>i.W),["assets/WhereClause-a4dbe0c1.js","assets/string-feb899cf.js","assets/typedArrayUtil-96f93e5b.js","assets/executionError-fb3f283a.js","assets/datetime-b6333958.js"]);try{const i=e.WhereClause.create(s,t);if(!i.isStandardized){const r=new d("mapview - bad input","Unable to apply filter's definition expression, as expression is not standardized.",i);p.error(r)}return r=>{const m=r.readArcadeFeature();return i.testFeature(m,g)}}catch{return p.warn("mapview-bad-where-clause","Encountered an error when evaluating where clause",s),r=>!0}}const a=1,E=2;class Ot{constructor(t){this._geometryBounds=c(),this._idToVisibility=new Map,this._serviceInfo=t}get hash(){return this._hash}check(t){return this._applyFilter(t)}clear(){const t=this._resetAllHiddenIds();return this.update(),{show:t,hide:[]}}invalidate(){this._idToVisibility.forEach((t,e)=>{this._idToVisibility.set(e,0)})}setKnownIds(t){for(const e of t)this._idToVisibility.set(e,a)}setTrue(t){const e=[],i=[],r=new Set(t);return this._idToVisibility.forEach((m,o)=>{const n=!!(this._idToVisibility.get(o)&a),h=r.has(o);!n&&h?e.push(o):n&&!h&&i.push(o),this._idToVisibility.set(o,h?a|E:0)}),{show:e,hide:i}}createQuery(){const{geometry:t,spatialRel:e,where:i,timeExtent:r,objectIds:m}=this;return I.fromJSON({geometry:t,spatialRel:e,where:i,timeExtent:r,objectIds:m})}async update(t,e){this._hash=JSON.stringify(t);const i=await w(t,null,e);await Promise.all([this._setGeometryFilter(i),this._setIdFilter(i),this._setAttributeFilter(i),this._setTimeFilter(i)])}async _setAttributeFilter(t){if(!t||!t.where)return this._clause=null,void(this.where=null);this._clause=await v(t.where,this._serviceInfo.fieldsIndex),this.where=t.where}_setIdFilter(t){this._idsToShow=t&&t.objectIds&&new Set(t.objectIds),this._idsToHide=t&&t.hiddenIds&&new Set(t.hiddenIds),this.objectIds=t&&t.objectIds}async _setGeometryFilter(t){if(!t||!t.geometry)return this._spatialQueryOperator=null,this.geometry=null,void(this.spatialRel=null);const e=t.geometry,i=t.spatialRel||"esriSpatialRelIntersects",r=await y(i,e,this._serviceInfo.geometryType,this._serviceInfo.hasZ,this._serviceInfo.hasM);u(this._geometryBounds,e),this._spatialQueryOperator=r,this.geometry=e,this.spatialRel=i}_setTimeFilter(t){if(this.timeExtent=this._timeOperator=null,t&&t.timeExtent)if(this._serviceInfo.timeInfo)this.timeExtent=t.timeExtent,this._timeOperator=f(this._serviceInfo.timeInfo,t.timeExtent,b);else{const e=new d("feature-layer-view:time-filter-not-available","Unable to apply time filter, as layer doesn't have time metadata.",t.timeExtent);l.getLogger("esri.views.2d.layers.features.controllers.FeatureFilter").error(e)}}_applyFilter(t){return this._filterByGeometry(t)&&this._filterById(t)&&this._filterByTime(t)&&this._filterByExpression(t)}_filterByExpression(t){return!this.where||this._clause(t)}_filterById(t){return(!this._idsToHide||!this._idsToHide.size||!this._idsToHide.has(t.getObjectId()))&&(!this._idsToShow||!this._idsToShow.size||this._idsToShow.has(t.getObjectId()))}_filterByGeometry(t){if(!this.geometry)return!0;const e=t.readHydratedGeometry();return!!e&&this._spatialQueryOperator(e)}_filterByTime(t){return!!_(this._timeOperator)||this._timeOperator(t)}_resetAllHiddenIds(){const t=[];return this._idToVisibility.forEach((e,i)=>{e&a||(this._idToVisibility.set(i,a),t.push(i))}),t}}export{Ot as default};
