import{e as V,y as v,a as z}from"./Accessor-815cb0cf.js";import{U as F,b as W,v as U,e as H}from"./request-6e1d5843.js";import{j as Y}from"./Collection-912f4315.js";import{w as K,a as S,r as I,t as J}from"./typedArrayUtil-74bbfd45.js";import{l as Q}from"./reactiveUtils-31da19f9.js";import"./ensureType-125d327f.js";import{a as L,w as $,f as j}from"./Extent-8fae2379.js";import{r as k,t as X}from"./projection-6de68766.js";import{b as D,g as Z,d as tt}from"./kmlUtils-09120674.js";import{f as it}from"./utils-25aa08c8.js";import{i as M}from"./GraphicsCollection-0ae219af.js";import{T as et,S as rt,R as ot}from"./Bitmap-ea5a0772.js";import{a as at}from"./BitmapContainer-479a7ecf.js";import{f as st,u as pt}from"./LayerView-b94a4bbe.js";import{i as P}from"./GraphicContainer-0dd1ee7e.js";import{a as R}from"./GraphicsView2D-79d61d37.js";import{C as mt,$ as nt}from"./rasterProjectionHelper-dc7176b3.js";import{n as lt}from"./WGLContainer-302ed869.js";import{I as ht,o as ct}from"./RenderingContext-a95e362b.js";import{P as T,G as E,D as q,L as G,Y as dt,V as gt,f as N}from"./enums-64ab819c.js";import{x as ut}from"./VertexArrayObject-315bde4b.js";import{l as _t}from"./rasterUtils-c4924209.js";import{E as B}from"./Texture-f1890c15.js";import"./watch-c7facfb0.js";import"./ArrayPool-ae2ef0ab.js";import"./string-75082bc6.js";import"./nextTick-3ee5a785.js";import"./promiseUtils-28f2a985.js";import"./Error-781981d1.js";import"./preload-helper-fb43855a.js";import"./Evented-3dfb26f2.js";import"./SimpleObservable-729c9019.js";import"./JSONSupport-2b897629.js";import"./cast-f7d2a22f.js";import"./mathUtils-15f63a45.js";import"./mat4-a8da3f27.js";import"./Polyline-40b9e769.js";import"./assets-7bd3ffcf.js";import"./zscale-a617710a.js";import"./PopupTemplate-51cd4af1.js";import"./Clonable-6d5134c7.js";import"./fieldUtils-85274dd9.js";import"./geometry-0d19f94b.js";import"./typeUtils-3bf84b36.js";import"./enumeration-94b1319d.js";import"./number-5e819186.js";import"./locale-30120714.js";import"./ActionToggle-dc9b6fc6.js";import"./Identifiable-f5397426.js";import"./aaBoundingBox-5e14079b.js";import"./jsonUtils-fea00035.js";import"./UniqueValueRenderer-c479518a.js";import"./symbols-716c75e3.js";import"./CIMSymbol-3ee77172.js";import"./Color-5e799d63.js";import"./colorUtils-639f4d25.js";import"./screenUtils-7afeb41c.js";import"./opacityUtils-107b33de.js";import"./symbolLayerUtils3D-15190f75.js";import"./persistableUrlUtils-0364346d.js";import"./collectionUtils-5a99c1c0.js";import"./Portal-c7b19d88.js";import"./Loadable-6776e4d9.js";import"./Promise-092442f7.js";import"./PortalGroup-d3a43002.js";import"./PortalUser-a3f3561a.js";import"./LegendOptions-540a8245.js";import"./diffUtils-0b07ec68.js";import"./colorRamps-f3b121e7.js";import"./sizeVariableUtils-d4870b0d.js";import"./visualVariableUtils-74855aa7.js";import"./Graphic-87396b85.js";import"./jsonUtils-15ca15d7.js";import"./compilerUtils-024563a4.js";import"./lengthUtils-40356f92.js";import"./jsonUtils-aa2a2e29.js";import"./layerUtils-5e9bebc1.js";import"./styleUtils-88557de2.js";import"./DictionaryLoader-4286edaa.js";import"./LRUCache-425021b3.js";import"./MemCache-9d81d118.js";import"./deprecate-da2b7904.js";import"./heatmapUtils-8c1efe72.js";import"./vec4f64-aa64c7e9.js";import"./FeatureSet-11704ad2.js";import"./Field-7770b57d.js";import"./fieldType-e429d020.js";import"./HandleOwner-124247b4.js";import"./mat3-53e5916e.js";import"./mat3f32-6c416b1c.js";import"./vec2f32-eaf29605.js";import"./Container-1fd7ba94.js";import"./EffectView-106fd8f9.js";import"./parser-527c5e80.js";import"./mat4f32-60a2394b.js";import"./definitions-19bfb61c.js";import"./context-util-31041918.js";import"./enums-b1d611e3.js";import"./MapView-a79549dd.js";import"./Cyclical-a38bc08c.js";import"./CollectionFlattener-670e79b4.js";import"./workers-79a370d4.js";import"./Connection-4113b752.js";import"./Queue-687500af.js";import"./intl-71e7974a.js";import"./messages-dc0c80a1.js";import"./TileInfo-1aef4d7f.js";import"./aaBoundingRect-3cd21eb0.js";import"./TileKey-b87e0dc5.js";import"./jsxFactory-9e4b8e7b.js";import"./uuid-73213768.js";import"./byteSizeEstimations-90c5a50d.js";import"./AttachmentInfo-6ef9e2f8.js";import"./AttachmentQuery-527f7d40.js";import"./Heading-9979860e.js";import"./widget-30d91dc2.js";import"./symbolUtils-b6a898f8.js";import"./utils-6bcb0cea.js";import"./asyncUtils-5c97747c.js";import"./jsonUtils-0607c004.js";import"./ItemCache-dc80b100.js";import"./utils-36c92184.js";import"./colorUtils-c0f43caf.js";import"./mat2d-68947564.js";import"./webStyleSymbolUtils-9412a45d.js";import"./devEnvironmentUtils-5002a058.js";import"./DataLayerSource-3a7a94c9.js";import"./executeQueryJSON-9dcde882.js";import"./query-e9117fc1.js";import"./normalizeUtils-120a3150.js";import"./normalizeUtilsCommon-04cad10b.js";import"./utils-067ee6bc.js";import"./urlUtils-6a004888.js";import"./pbfQueryUtils-9730bd74.js";import"./pbf-c0fe6550.js";import"./OptimizedFeature-6cca5f48.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./queryZScale-e2b48f65.js";import"./Query-4c66990d.js";import"./TimeExtent-202e4138.js";import"./FullTextSearch-da95615f.js";import"./featureConversionUtils-55a32b06.js";import"./RelationshipQuery-9431dd85.js";import"./TopFeaturesQuery-bceb40dd.js";import"./FeatureLayer-81642491.js";import"./MultiOriginJSONSupport-6a5e69d5.js";import"./sql-71c23a8f.js";import"./FeatureLayerBase-eb045254.js";import"./HeightModelInfo-0c04472c.js";import"./arcgisLayerUrl-94ca51fa.js";import"./commonProperties-3eba42f9.js";import"./ElevationInfo-89e4d39d.js";import"./TimeReference-afe9f4e7.js";import"./datetime-b6333958.js";import"./serviceCapabilitiesUtils-f8cdc42b.js";import"./Layer-9c99e5a9.js";import"./editsZScale-884a3138.js";import"./APIKeyMixin-8bba595e.js";import"./ArcGISService-04cf234b.js";import"./BlendLayer-f72967b1.js";import"./CustomParametersMixin-7c5495bd.js";import"./EditBusLayer-b9bbb936.js";import"./FeatureReductionLayer-68313f46.js";import"./labelingInfo-40ffffc8.js";import"./labelUtils-75fd34dc.js";import"./defaultsJSON-b087dd4d.js";import"./OperationalLayer-be76a501.js";import"./OrderedLayer-0495accc.js";import"./PortalLayer-ab74a160.js";import"./PortalItem-90bf2143.js";import"./portalItemUtils-2867876d.js";import"./RefreshableLayer-ac9eee59.js";import"./ScaleRangeLayer-abd4cd2e.js";import"./TemporalLayer-1e6749cc.js";import"./FeatureTemplate-d52241a0.js";import"./FeatureType-f3879578.js";import"./fieldProperties-00a2cc41.js";import"./FieldsIndex-24f2e4ca.js";import"./versionUtils-09a78861.js";import"./styleUtils-023b7cfa.js";import"./popupUtils-c2b20cc0.js";import"./Scheduler-58e89fab.js";import"./GoTo-a612a338.js";import"./accessibleHandler-33d234ac.js";import"./vmEvent-d773b6c5.js";import"./Map-471aba16.js";import"./Basemap-c8601fc5.js";import"./loadAll-38268fb1.js";import"./writeUtils-8884705e.js";import"./basemapUtils-7287d45c.js";import"./TablesMixin-d42f2392.js";import"./ViewingMode-915d19cb.js";import"./unitBezier-881ac1eb.js";import"./vec2-4c517306.js";import"./vec2f64-22afc56f.js";import"./TileStrategy-56172cce.js";import"./TileStore-53c9ad86.js";import"./TileKey-e007f54a.js";import"./rbush-f2a85c98.js";import"./quickselect-56c5966e.js";import"./capabilities-c77778e7.js";import"./BaseGraphicContainer-7daba3ab.js";import"./FeatureContainer-51f61b6f.js";import"./AttributeStoreView-89b5e0d8.js";import"./TiledDisplayObject-a8c16acc.js";import"./visualVariablesUtils-c19b01f0.js";import"./color-e7189c96.js";import"./enums-4b2a86a0.js";import"./VertexElementDescriptor-2925c6af.js";import"./number-b10bd8f5.js";import"./visualVariablesUtils-87145551.js";import"./TileContainer-41317e18.js";import"./utils-eea54cdd.js";import"./MaterialKey-34911e37.js";import"./alignmentUtils-ae955d28.js";import"./vec3f32-ad1dc57f.js";import"./cimAnalyzer-d2dc3869.js";import"./fontUtils-dae2860f.js";import"./BidiEngine-836b7ef6.js";import"./GeometryUtils-53652037.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-158f275c.js";import"./floatRGBA-047cef41.js";import"./normalizeUtilsSync-f6be8e80.js";import"./projectionSupport-617bead6.js";import"./json-48e3ea08.js";import"./Matcher-2700b0d9.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-80b75c8b.js";import"./GeometryUtils-dd03fc25.js";import"./earcut-61f7b102.js";import"./ExpandedCIM-71cc43f8.js";import"./schemaUtils-7f923636.js";import"./createSymbolSchema-5985c686.js";import"./rendererUtils-1bc13370.js";import"./util-7544e8cf.js";import"./ComputedAttributeStorage-d77f8c87.js";import"./FeatureSetReader-0068ee06.js";import"./ArcadeDate-3d8ef842.js";import"./executionError-fb3f283a.js";import"./arcadeTimeUtils-4ff979d1.js";import"./centroid-e285663a.js";import"./ProgramTemplate-da7e5f1d.js";import"./StyleDefinition-7d58136b.js";import"./config-1337d16e.js";import"./programUtils-5ef87558.js";import"./NestedMap-1b5db22e.js";import"./OrderIndependentTransparency-e1b3a745.js";import"./basicInterfaces-b7051eb1.js";import"./doublePrecisionUtils-e3c3d0d8.js";import"./webgl-debug-b1f7a2c5.js";class l{constructor(t){if(this._ownsRctx=!1,t)this._ownsRctx=!1,this._rctx=t;else{if(l._instance)return l._instanceRefCount++,l._instance;l._instanceRefCount=1,l._instance=this,this._ownsRctx=!0;const e=document.createElement("canvas").getContext("webgl");e.getExtension("OES_texture_float"),this._rctx=new ht(e,{})}const o={applyProjection:!0,bilinear:!1,bicubic:!1},a=ct("raster/reproject","raster/reproject",new Map([["a_position",0]]),o);this._program=this._rctx.programCache.acquire(a.shaders.vertexShader,a.shaders.fragmentShader,a.attributes),this._rctx.useProgram(this._program),this._program.setUniform1f("u_opacity",1),this._program.setUniform1i("u_image",0),this._program.setUniform1i("u_flipY",0),this._program.setUniform1i("u_transformGrid",1),this._quad=new lt(this._rctx,[0,0,1,0,0,1,1,1])}reprojectTexture(t,o,a=!1){const e=k(t.extent,o),r=new L({x:(t.extent.xmax-t.extent.xmin)/t.texture.descriptor.width,y:(t.extent.ymax-t.extent.ymin)/t.texture.descriptor.height,spatialReference:t.extent.spatialReference}),{x:s,y:m}=mt(r,o,t.extent);let n=(s+m)/2;const p=Math.round((e.xmax-e.xmin)/n),d=Math.round((e.ymax-e.ymin)/n);n=(e.width/p+e.height/d)/2;const C=new L({x:n,y:n,spatialReference:e.spatialReference}),w=nt({projectedExtent:e,srcBufferExtent:t.extent,pixelSize:C,hasWrapAround:!0,spacing:[16,16]}),f=_t(this._rctx,w),u=new B(this._rctx,{width:p,height:d,pixelFormat:T.RGBA,dataType:E.UNSIGNED_BYTE,wrapMode:q.CLAMP_TO_EDGE,samplingMode:G.LINEAR,hasMipmap:!1}),h=new ut(this._rctx,{colorTarget:dt.TEXTURE,depthStencilTarget:gt.NONE,width:p,height:d},u);this._rctx.bindFramebuffer(h),this._rctx.setViewport(0,0,p,d),this._rctx.useProgram(this._program),this._rctx.bindTexture(t.texture,0),this._rctx.bindTexture(f,1),this._quad.bind();const{width:x=0,height:y=0}=t.texture.descriptor;if(this._program.setUniform2f("u_srcImageSize",x,y),this._program.setUniform2fv("u_transformSpacing",w.spacing),this._program.setUniform2fv("u_transformGridSize",w.size),this._program.setUniform2f("u_targetImageSize",p,d),this._quad.draw(),this._quad.unbind(),this._rctx.useProgram(null),this._rctx.bindFramebuffer(null),f.dispose(),a){const{width:_=0,height:c=0}=h.descriptor,b=new ImageData(_,c);return h.readPixels(0,0,_,c,T.RGBA,E.UNSIGNED_BYTE,b.data),h.detachColorTexture(N.COLOR_ATTACHMENT0),h.dispose(),{texture:u,extent:e,imageData:b}}return h.detachColorTexture(N.COLOR_ATTACHMENT0),h.dispose(),{texture:u,extent:e}}reprojectBitmapData(t,o){const a=et(t.bitmapData)?rt(t.bitmapData):t.bitmapData,e=new B(this._rctx,{width:t.bitmapData.width,height:t.bitmapData.height,pixelFormat:T.RGBA,dataType:E.UNSIGNED_BYTE,wrapMode:q.CLAMP_TO_EDGE,samplingMode:G.LINEAR,hasMipmap:!1},a),r=this.reprojectTexture({texture:e,extent:t.extent},o,!0);r.texture.dispose();const s=document.createElement("canvas"),m=r.imageData;return s.width=m.width,s.height=m.height,s.getContext("2d").putImageData(m,0,0),{bitmapData:s,extent:r.extent}}async loadAndReprojectBitmapData(t,o,a){const e=(await F(t,{responseType:"image"})).data,r=document.createElement("canvas");r.width=e.width,r.height=e.height;const s=r.getContext("2d");s.drawImage(e,0,0);const m=s.getImageData(0,0,r.width,r.height);if(o.spatialReference.equals(a))return{bitmapData:m,extent:o};const n=this.reprojectBitmapData({bitmapData:m,extent:o},a);return{bitmapData:n.bitmapData,extent:n.extent}}destroy(){this._ownsRctx?(l._instanceRefCount--,l._instanceRefCount===0&&(this._quad.dispose(),this._program.dispose(),this._rctx.dispose(),l._instance=null)):(this._quad.dispose(),this._program.dispose())}}l._instanceRefCount=0;class O{constructor(){this.allSublayers=new Map,this.allPoints=[],this.allPolylines=[],this.allPolygons=[],this.allMapImages=[]}}let g=class extends st(pt){constructor(){super(...arguments),this._bitmapIndex=new Map,this._mapImageContainer=new at,this._kmlVisualData=new O,this._fetchController=null,this.allVisiblePoints=new M,this.allVisiblePolylines=new M,this.allVisiblePolygons=new M,this.allVisibleMapImages=new Y}async hitTest(i,t){var a,e,r;const o=this.layer;return[(a=this._pointsView)==null?void 0:a.hitTest(i),(e=this._polylinesView)==null?void 0:e.hitTest(i),(r=this._polygonsView)==null?void 0:r.hitTest(i)].flat().filter(Boolean).map(s=>(s.layer=o,s.sourceLayer=o,{type:"graphic",graphic:s,layer:o,mapPoint:i}))}update(i){this._polygonsView&&this._polygonsView.processUpdate(i),this._polylinesView&&this._polylinesView.processUpdate(i),this._pointsView&&this._pointsView.processUpdate(i)}attach(){this._fetchController=new AbortController,this.container.addChild(this._mapImageContainer),this._polygonsView=new R({view:this.view,graphics:this.allVisiblePolygons,requestUpdateCallback:()=>this.requestUpdate(),container:new P(this.view.featuresTilingScheme)}),this.container.addChild(this._polygonsView.container),this._polylinesView=new R({view:this.view,graphics:this.allVisiblePolylines,requestUpdateCallback:()=>this.requestUpdate(),container:new P(this.view.featuresTilingScheme)}),this.container.addChild(this._polylinesView.container),this._pointsView=new R({view:this.view,graphics:this.allVisiblePoints,requestUpdateCallback:()=>this.requestUpdate(),container:new P(this.view.featuresTilingScheme)}),this.container.addChild(this._pointsView.container),this.addAttachHandles([this.allVisibleMapImages.on("change",i=>{i.added.forEach(t=>this._addMapImage(t)),i.removed.forEach(t=>this._removeMapImage(t))}),Q(()=>this.layer.visibleSublayers,i=>{for(const[t,o]of this._kmlVisualData.allSublayers)o.visibility=0;for(const t of i){const o=this._kmlVisualData.allSublayers.get(t.id);o&&(o.visibility=1)}this._refreshCollections()})]),this.updatingHandles.addPromise(this._fetchService(this._fetchController.signal)),this._imageReprojector=new l}detach(){this._fetchController=K(this._fetchController),this._mapImageContainer.removeAllChildren(),this.container.removeAllChildren(),this._bitmapIndex.clear(),this._polygonsView=S(this._polygonsView),this._polylinesView=S(this._polylinesView),this._pointsView=S(this._pointsView),this._imageReprojector=S(this._imageReprojector)}moveStart(){}viewChange(){this._polygonsView.viewChange(),this._polylinesView.viewChange(),this._pointsView.viewChange()}moveEnd(){}isUpdating(){return this._pointsView.updating||this._polygonsView.updating||this._polylinesView.updating}_addMapImage(i){var t,o;((t=this.view.spatialReference)!=null&&t.isWGS84||(o=this.view.spatialReference)!=null&&o.isWebMercator)&&this._imageReprojector.loadAndReprojectBitmapData(i.href,$.fromJSON(i.extent),this.view.spatialReference).then(a=>{const e=new ot(a.bitmapData,{immutable:!1,requestRenderOnSourceChangedEnabled:!0});e.x=a.extent.xmin,e.y=a.extent.ymax,e.resolution=a.extent.width/a.bitmapData.width,e.rotation=i.rotation,this._mapImageContainer.addChild(e),this._bitmapIndex.set(i,e)})}async _getViewDependentUrl(i,t){const{viewFormat:o,viewBoundScale:a,httpQuery:e}=i;if(I(o)){if(J(t))throw new Error("Loading this network link requires a view state.");let r;if(await X(),I(a)&&a!==1){const c=new $(t.extent);c.expand(a),r=c}else r=t.extent;r=k(r,j.WGS84);const s=k(r,j.WebMercator),m=r.xmin,n=r.xmax,p=r.ymin,d=r.ymax,C=t.size[0]*t.pixelRatio,w=t.size[1]*t.pixelRatio,f=Math.max(s.width,s.height),u={"[bboxWest]":m.toString(),"[bboxEast]":n.toString(),"[bboxSouth]":p.toString(),"[bboxNorth]":d.toString(),"[lookatLon]":r.center.x.toString(),"[lookatLat]":r.center.y.toString(),"[lookatRange]":f.toString(),"[lookatTilt]":"0","[lookatHeading]":t.rotation.toString(),"[lookatTerrainLon]":r.center.x.toString(),"[lookatTerrainLat]":r.center.y.toString(),"[lookatTerrainAlt]":"0","[cameraLon]":r.center.x.toString(),"[cameraLat]":r.center.y.toString(),"[cameraAlt]":f.toString(),"[horizFov]":"60","[vertFov]":"60","[horizPixels]":C.toString(),"[vertPixels]":w.toString(),"[terrainEnabled]":"0","[clientVersion]":W,"[kmlVersion]":"2.2","[clientName]":"ArcGIS API for JavaScript","[language]":"en-US"},h=c=>{for(const b in c)for(const A in u)c[b]=c[b].replace(A,u[A])},x=U(o);h(x);let y={};I(e)&&(y=U(e),h(y));const _=it(i.href);return _.query={..._.query,...x,...y},`${_.path}?${H(x)}`}return i.href}async _fetchService(i){const t=new O;await this._loadVisualData(this.layer.url,t,i),this._kmlVisualData=t,this._refreshCollections()}_refreshCollections(){this.allVisiblePoints.removeAll(),this.allVisiblePolylines.removeAll(),this.allVisiblePolygons.removeAll(),this.allVisibleMapImages.removeAll(),this.allVisiblePoints.addMany(this._kmlVisualData.allPoints.filter(i=>this._isSublayerVisible(i.sublayerId)).map(({item:i})=>i)),this.allVisiblePolylines.addMany(this._kmlVisualData.allPolylines.filter(i=>this._isSublayerVisible(i.sublayerId)).map(({item:i})=>i)),this.allVisiblePolygons.addMany(this._kmlVisualData.allPolygons.filter(i=>this._isSublayerVisible(i.sublayerId)).map(({item:i})=>i)),this.allVisibleMapImages.addMany(this._kmlVisualData.allMapImages.filter(i=>this._isSublayerVisible(i.sublayerId)).map(({item:i})=>i))}_isSublayerVisible(i){const t=this._kmlVisualData.allSublayers.get(i);return!!(t!=null&&t.visibility)&&(t.parentFolderId===-1||this._isSublayerVisible(t.parentFolderId))}_loadVisualData(i,t,o){return this._fetchParsedKML(i,o).then(async a=>{for(const e of a.sublayers){t.allSublayers.set(e.id,e);const r=e.points?await D(e.points):[],s=e.polylines?await D(e.polylines):[],m=e.polygons?await D(e.polygons):[],n=e.mapImages||[];if(t.allPoints.push(...r.map(p=>({item:p,sublayerId:e.id}))),t.allPolylines.push(...s.map(p=>({item:p,sublayerId:e.id}))),t.allPolygons.push(...m.map(p=>({item:p,sublayerId:e.id}))),t.allMapImages.push(...n.map(p=>({item:p,sublayerId:e.id}))),e.networkLink){const p=await this._getViewDependentUrl(e.networkLink,this.view.state);await this._loadVisualData(p,t,o)}}})}_fetchParsedKML(i,t){return Z(i,this.layer.spatialReference,this.layer.refreshInterval,t).then(o=>tt(o.data))}_removeMapImage(i){const t=this._bitmapIndex.get(i);t&&(this._mapImageContainer.removeChild(t),this._bitmapIndex.delete(i))}};V([v()],g.prototype,"_pointsView",void 0),V([v()],g.prototype,"_polylinesView",void 0),V([v()],g.prototype,"_polygonsView",void 0),V([v()],g.prototype,"updating",void 0),g=V([z("esri.views.2d.layers.KMLLayerView2D")],g);const Zo=g;export{Zo as default};
