import{e as x,y as D,a as Z}from"./JSONSupport-ed372989.js";import"./geometry-d89d4a34.js";import"./Graphic-f117754c.js";import"./UniqueValueRenderer-b6a7d586.js";import"./jsonUtils-37cc07d7.js";import"./symbols-946d4e11.js";import{j as ee}from"./Collection-d9d92883.js";import"./string-feb899cf.js";import{s as N,a as te}from"./Error-d97df89f.js";import{r as re}from"./ensureType-348c3d61.js";import{r as b,G as ie,t as _}from"./typedArrayUtil-96f93e5b.js";import{r as oe,j as se}from"./promiseUtils-ac1bd36f.js";import{l as H,h as P,f as me,a as W}from"./reactiveUtils-307e98f9.js";import{u as pe}from"./aaBoundingRect-a7e9efee.js";import{b as ae,H as ne,a as le,J as he}from"./Extent-fd3ac910.js";import{j as ce,u as z}from"./perspectiveUtils-9e6a34f5.js";import"./request-7c0a9d4c.js";import"./Rasterizer-c0c27c81.js";import"./EffectView-7a98f2c6.js";import{r as de}from"./Container-b72af0ce.js";import"./BufferPool-0209c612.js";import{T as ue}from"./enums-b1d611e3.js";import{c as fe,w as ye}from"./WGLContainer-cd626f28.js";import"./color-3bbef98f.js";import{P as _e,G as ve,L as ge,D as we,F as B}from"./enums-64ab819c.js";import{E as Re}from"./Texture-8f8edc49.js";import{r as Q}from"./context-util-09fcc133.js";import"./ProgramTemplate-802e89ed.js";import"./MaterialKey-6d0e47b2.js";import"./utils-f79d880b.js";import{E as k,f as Ee}from"./VertexArrayObject-d5986ce6.js";import{o as T}from"./mathUtils-b3bee9e7.js";import"./number-b10bd8f5.js";import"./StyleDefinition-7d58136b.js";import{t as Me}from"./vec2f32-eaf29605.js";import"./enums-fb086c25.js";import"./MagnifierPrograms-058f7143.js";import"./OrderIndependentTransparency-e1b3a745.js";import"./floatRGBA-bff1e6d8.js";import"./webgl-debug-b1f7a2c5.js";import"./GraphicsView2D-b31c1259.js";import"./AttributeStoreView-ba467075.js";import"./earcut-61f7b102.js";import"./featureConversionUtils-00c47b2e.js";import"./lengthUtils-bc8879ed.js";import{r as xe}from"./vec3f32-ad1dc57f.js";import{U as Te}from"./normalizeUtils-9dc1c489.js";import"./asyncUtils-f0fdc8c7.js";import{y as be,r as Ce}from"./TileStrategy-0607ccca.js";import"./TileStore-56391591.js";import"./TileKey-555f347f.js";import{e as Se}from"./mat3f64-221ce671.js";import{r as $e}from"./vec2-9030ffc5.js";import{n as Ve}from"./vec2f64-22afc56f.js";import{c as Ge}from"./screenUtils-7afeb41c.js";import{r as Ae,i as qe,M as De,f as Pe,h as je}from"./mat3-d3027213.js";import{e as Ie}from"./mat3f32-6c416b1c.js";import{d as Ue}from"./index-738baf21.js";import{f as Le,u as Oe}from"./LayerView-fefba7b3.js";import"./nextTick-3ee5a785.js";import"./Polyline-9d44200b.js";import"./typeUtils-2ccaf90d.js";import"./cast-73cfc253.js";import"./PopupTemplate-63dce4d3.js";import"./Clonable-5318ec31.js";import"./fieldUtils-66be74eb.js";import"./preload-helper-f8378b50.js";import"./enumeration-49e09bda.js";import"./number-205e28e0.js";import"./locale-30120714.js";import"./Identifiable-876da2a8.js";import"./jsonUtils-dd0891e0.js";import"./LegendOptions-8200d5f5.js";import"./Color-9f46ece8.js";import"./colorUtils-639f4d25.js";import"./diffUtils-ac6d6369.js";import"./Portal-172924b2.js";import"./Loadable-c96deb83.js";import"./Promise-34cff6d6.js";import"./PortalGroup-751b527f.js";import"./PortalUser-7f979a04.js";import"./colorRamps-fff34da2.js";import"./opacityUtils-cc413a8c.js";import"./sizeVariableUtils-d4870b0d.js";import"./visualVariableUtils-6f05f98d.js";import"./compilerUtils-8d4f8499.js";import"./Evented-e2ee9722.js";import"./SimpleObservable-04055e8d.js";import"./CIMSymbol-0fa077f5.js";import"./symbolLayerUtils3D-0c6ed99a.js";import"./aaBoundingBox-1eda6d1b.js";import"./persistableUrlUtils-26091271.js";import"./collectionUtils-e98ed3f0.js";import"./jsonUtils-7442f08f.js";import"./layerUtils-a0871894.js";import"./styleUtils-1d3bc535.js";import"./DictionaryLoader-0dadb1e0.js";import"./LRUCache-9c365b2a.js";import"./MemCache-7d4aa654.js";import"./deprecate-424c57c7.js";import"./heatmapUtils-16ee21b5.js";import"./vec4f64-aa64c7e9.js";import"./projection-d7a5b449.js";import"./mat4-1ee69bd5.js";import"./assets-2c955bed.js";import"./zscale-e06cee6f.js";import"./normalizeUtilsSync-6eaa2318.js";import"./normalizeUtilsCommon-155f1aa2.js";import"./_commonjsHelpers-2f3e7994.js";import"./cimAnalyzer-fade93fe.js";import"./fontUtils-95b845d3.js";import"./BidiEngine-836b7ef6.js";import"./GeometryUtils-53652037.js";import"./enums-4b2a86a0.js";import"./utils-1aab1134.js";import"./alignmentUtils-ae955d28.js";import"./definitions-19bfb61c.js";import"./mat2d-94b8f776.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-fd85d1bd.js";import"./rasterizingUtils-9666244d.js";import"./parser-a11e786f.js";import"./mat4f32-60a2394b.js";import"./VertexElementDescriptor-2925c6af.js";import"./config-1337d16e.js";import"./GeometryUtils-dd03fc25.js";import"./OptimizedFeature-7af17710.js";import"./pbf-3634de4f.js";import"./imageutils-92e8b989.js";import"./Matcher-dde16e7c.js";import"./visualVariablesUtils-7effa371.js";import"./visualVariablesUtils-9549b6c3.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-1305d028.js";import"./defaultsJSON-b087dd4d.js";import"./ExpandedCIM-04b9ce70.js";import"./devEnvironmentUtils-5002a058.js";import"./CircularArray-364d163c.js";import"./HandleOwner-4c8d824c.js";import"./FeatureSetReader-f1a46ee8.js";import"./ArcadeDate-3d8ef842.js";import"./executionError-fb3f283a.js";import"./datetime-b6333958.js";import"./arcadeTimeUtils-37d6c274.js";import"./FieldsIndex-7c963fe9.js";import"./TimeReference-b6332926.js";import"./centroid-47d0a8f7.js";import"./basicInterfaces-b7051eb1.js";import"./projectionSupport-5e649f05.js";import"./json-48e3ea08.js";import"./labelingInfo-f7d1c159.js";import"./labelUtils-6965a8ca.js";import"./schemaUtils-5efbd12a.js";import"./serviceCapabilitiesUtils-02cebe9b.js";import"./arcgisLayerUrl-9d6ab56c.js";import"./createSymbolSchema-07e2efee.js";import"./rendererUtils-8077781c.js";import"./capabilities-d3148205.js";import"./FeatureReductionLayer-fd41123b.js";import"./BlendLayer-5cec7349.js";import"./TimeExtent-d2d7594c.js";import"./Query-bf719160.js";import"./DataLayerSource-71059dc4.js";import"./Field-b17a677d.js";import"./fieldType-b21f2e7f.js";import"./OperationalLayer-a420b681.js";import"./ElevationInfo-75e7bf35.js";import"./util-7f828970.js";import"./ComputedAttributeStorage-1b2563c0.js";import"./rbush-f2a85c98.js";import"./quickselect-56c5966e.js";import"./TiledDisplayObject-fd49a9f6.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./utils-ada6b2ec.js";import"./Queue-c92bc561.js";import"./Basemap-1b908f31.js";import"./loadAll-f0d5998c.js";import"./PortalItem-a25335a3.js";import"./messages-226fbb40.js";import"./writeUtils-5c3c75bd.js";import"./CollectionFlattener-52a0c7e4.js";import"./TablesMixin-1e04401c.js";import"./Layer-07a07202.js";import"./Cyclical-0205ad3e.js";import"./workers-4f8dfa2f.js";import"./Connection-5e453cc1.js";import"./intl-7c488bb0.js";import"./TileInfo-e107254e.js";import"./widget-945f9e61.js";import"./uuid-73213768.js";import"./byteSizeEstimations-90c5a50d.js";import"./AttachmentInfo-9750c730.js";import"./AttachmentQuery-c89a8ac2.js";import"./utils-e0744d8b.js";import"./ItemCache-d06df2a7.js";import"./executeForIds-0c62bbcf.js";import"./query-eac603fe.js";import"./urlUtils-6a004888.js";import"./pbfQueryUtils-bad736cf.js";import"./queryZScale-a0b71b11.js";import"./FeatureSet-00b7d51e.js";import"./RelationshipQuery-a13e27d1.js";import"./TopFeaturesQuery-5bb7c994.js";import"./FeatureLayer-42e1678e.js";import"./MultiOriginJSONSupport-97bf66dd.js";import"./FeatureLayerBase-de1a166f.js";import"./HeightModelInfo-bad6650e.js";import"./editsZScale-b954eebc.js";import"./APIKeyMixin-b93c2049.js";import"./ArcGISService-cca20289.js";import"./CustomParametersMixin-01a04769.js";import"./EditBusLayer-984da402.js";import"./OrderedLayer-9cb8835d.js";import"./PortalLayer-d54f6a39.js";import"./portalItemUtils-72345980.js";import"./RefreshableLayer-672ecb56.js";import"./ScaleRangeLayer-24099455.js";import"./TemporalLayer-c479c738.js";import"./FeatureTemplate-1fd8fac4.js";import"./FeatureType-b736019f.js";import"./fieldProperties-1fb52610.js";import"./versionUtils-aabb6832.js";import"./styleUtils-f45b991d.js";import"./popupUtils-3d5141e6.js";import"./colorUtils-c0f43caf.js";import"./webStyleSymbolUtils-54e19231.js";import"./Scheduler-72fecd6f.js";import"./GraphicsCollection-89010fd9.js";import"./ViewingMode-915d19cb.js";import"./unitBezier-881ac1eb.js";import"./Util-a12911ae.js";import"./MapImageLayer-030c7912.js";import"./scaleUtils-2aca77b2.js";import"./SublayersOwner-3d3675ca.js";import"./Version-bbcb090a.js";import"./QueryTask-809f5bb4.js";import"./imageBitmapUtils-ce029f55.js";import"./pixelRangeUtils-03719dd8.js";import"./commonProperties-da958896.js";const v=Se();class He extends de{constructor(e){super(),this.elementView=e,this.isWrapAround=!1,this.perspectiveTransform=Ve(),this._vertices=new Float32Array(20),this._handles=[],this._handles.push(H(()=>this.elementView.element.opacity,t=>this.opacity=t,P),H(()=>[this.elementView.coords],()=>{this.requestRender()},P),me(()=>this.elementView.element.loaded,()=>{const t=this.elementView.element;this.ready(),t.type==="video"&&b(t.content)&&this._handles.push(oe(t.content,"play",()=>this.requestRender()))},P)),e.element.load().catch(t=>{N.getLogger("esri.views.2d.layers.MediaLayerView2D").error(new te("element-load-error","Element cannot be displayed",{element:e,error:t}))})}destroy(){this._handles.forEach(e=>e.remove()),this.texture=ie(this.texture)}get dvsMat3(){return this.parent.dvsMat3}beforeRender(e){const{context:t}=e,i=this.elementView.element.content;if(b(i)){const o=i instanceof HTMLImageElement,s=i instanceof HTMLVideoElement,p=o?i.naturalWidth:s?i.videoWidth:i.width,m=o?i.naturalHeight:s?i.videoHeight:i.height;this._updatePerspectiveTransform(p,m),this.texture?s&&!i.paused&&(this.texture.setData(i),this.requestRender(),(t.type===Q.WEBGL2||T(p)&&T(m))&&this.texture.generateMipmap()):(this.texture=new Re(t,{pixelFormat:_e.RGBA,dataType:ve.UNSIGNED_BYTE,samplingMode:ge.LINEAR,wrapMode:we.CLAMP_TO_EDGE,width:p,height:m,preMultiplyAlpha:!0},i),(t.type===Q.WEBGL2||T(p)&&T(m))&&this.texture.generateMipmap(),s&&!i.paused&&this.requestRender())}super.beforeRender(e)}_createTransforms(){return null}updateDrawCoords(e,t){const i=this.elementView.coords;if(_(i))return;const[o,s,p,m]=i.rings[0],c=this._vertices,{x:a,y:n}=e,d=t!==0;d?c.set([s[0]-a,s[1]-n,o[0]-a,o[1]-n,p[0]-a,p[1]-n,m[0]-a,m[1]-n,m[0]-a,m[1]-n,s[0]+t-a,s[1]-n,s[0]+t-a,s[1]-n,o[0]+t-a,o[1]-n,p[0]+t-a,p[1]-n,m[0]+t-a,m[1]-n]):c.set([s[0]-a,s[1]-n,o[0]-a,o[1]-n,p[0]-a,p[1]-n,m[0]-a,m[1]-n]),this.isWrapAround=d}getVAO(e,t,i){if(_(this.elementView.coords))return null;const o=this._vertices;if(this._vao)this._geometryVbo.setData(o);else{this._geometryVbo=k.createVertex(e,B.DYNAMIC_DRAW,o);const s=k.createVertex(e,B.STATIC_DRAW,new Uint16Array([0,0,0,1,1,0,1,1,1,1,0,0,0,0,0,1,1,0,1,1]));this._vao=new Ee(e,i,t,{geometry:this._geometryVbo,tex:s})}return this._vao}_updatePerspectiveTransform(e,t){const i=this._vertices;ce(v,[0,0,e,0,0,t,e,t],[i[0],i[1],i[4],i[5],i[2],i[3],i[6],i[7]]),$e(this.perspectiveTransform,v[6]/v[8]*e,v[7]/v[8]*t)}}class We extends fe{constructor(){super(...arguments),this._localOrigin=Ge(0,0),this._viewStateId=-1,this._dvsMat3=Ie(),this.requiresDedicatedFBO=!1}get dvsMat3(){return this._dvsMat3}beforeRender(e){this._updateMatrices(e),this._updateOverlays(e,this.children);for(const t of this.children)t.beforeRender(e)}prepareRenderPasses(e){const t=e.registerRenderPass({name:"overlay",brushes:[ye.overlay],target:()=>this.children,drawPhase:ue.MAP});return[...super.prepareRenderPasses(e),t]}_updateMatrices(e){const{state:t}=e,{id:i,size:o,pixelRatio:s,resolution:p,rotation:m,viewpoint:c,displayMat3:a}=t;if(this._viewStateId===i)return;const n=Math.PI/180*m,d=s*o[0],f=s*o[1],{x:C,y:w}=c.targetGeometry,S=Te(C,t.spatialReference);this._localOrigin.x=S,this._localOrigin.y=w;const $=p*d,R=p*f,l=Ae(this._dvsMat3);qe(l,l,a),De(l,l,Me(d/2,f/2)),Pe(l,l,xe(d/$,-f/R,1)),je(l,l,-n),this._viewStateId=i}_updateOverlays(e,t){const{state:i}=e,{rotation:o,spatialReference:s,worldScreenWidth:p,size:m,viewpoint:c}=i,a=this._localOrigin;let n=0;const d=ae(s);if(d&&s.isWrappable){const f=m[0],C=m[1],w=180/Math.PI*o,S=Math.abs(Math.cos(w)),$=Math.abs(Math.sin(w)),R=Math.round(f*S+C*$),[l,V]=d.valid,u=Ue(s),{x:j,y:Y}=c.targetGeometry,J=[j,Y],G=[0,0];i.toScreen(G,J);const E=[0,0];let A;A=R>p?.5*p:.5*R;const I=Math.floor((j+.5*u)/u),K=l+I*u,X=V+I*u,q=[G[0]+A,0];i.toMap(E,q),E[0]>X&&(n=u),q[0]=G[0]-A,i.toMap(E,q),E[0]<K&&(n=-u);for(const M of t){const U=M.elementView.bounds;if(_(U))continue;const[L,,O]=U;L<l&&O>l?M.updateDrawCoords(a,u):O>V&&L<V?M.updateDrawCoords(a,-u):M.updateDrawCoords(a,n)}}else for(const f of t)f.updateDrawCoords(a,n)}}let y=class extends Le(Oe){constructor(){super(...arguments),this._overlayContainer=null,this._fetchQueue=null,this._tileStrategy=null,this._elementReferences=new Map,this._debugGraphicsView=null,this.layer=null,this.elements=new ee}attach(){this.addAttachHandles([W(()=>this.layer.effectiveSource,"refresh",()=>{for(const r of this._tileStrategy.tiles)this._updateTile(r);this.requestUpdate()}),W(()=>this.layer.effectiveSource,"change",({element:r})=>this._elementUpdateHandler(r))]),this._overlayContainer=new We,this.container.addChild(this._overlayContainer),this._fetchQueue=new be({tileInfoView:this.view.featuresTilingScheme,concurrency:10,process:(r,e)=>this._queryElements(r,e)}),this._tileStrategy=new Ce({cachePolicy:"purge",resampling:!0,acquireTile:r=>this._acquireTile(r),releaseTile:r=>this._releaseTile(r),tileInfoView:this.view.featuresTilingScheme}),this.requestUpdate()}detach(){var r;this.elements.removeAll(),this._tileStrategy.destroy(),this._fetchQueue.destroy(),this._overlayContainer.removeAllChildren(),this.container.removeAllChildren(),this._elementReferences.clear(),(r=this._debugGraphicsView)==null||r.destroy()}supportsSpatialReference(r){return!0}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}update(r){var e;this._tileStrategy.update(r),(e=this._debugGraphicsView)==null||e.update(r)}async hitTest(r,e){const t=[],i=r.normalize(),o=[i.x,i.y];for(const{projectedElement:{normalizedCoords:s,element:p}}of this._elementReferences.values())b(s)&&ne(s.rings,o)&&t.push({type:"media",element:p,layer:this.layer,mapPoint:r});return t.reverse()}canResume(){return this.layer.source!=null&&super.canResume()}async doRefresh(){this._fetchQueue.reset(),this._tileStrategy.tiles.forEach(r=>this._updateTile(r))}_acquireTile(r){const e=new ze(r.clone());return this._updateTile(e),e}_updateTile(r){this.updatingHandles.addPromise(this._fetchQueue.push(r.key).then(e=>{const[t,i]=r.setElements(e);this._referenceElements(r,t),this._dereferenceElements(r,i),this.requestUpdate()},e=>{se(e)||N.getLogger(this.declaredClass).error(e)}))}_releaseTile(r){this._fetchQueue.abort(r.key.id),r.elements&&this._dereferenceElements(r,r.elements),this.requestUpdate()}async _queryElements(r,e){const t=this.layer.effectiveSource;if(_(t))return[];this.view.featuresTilingScheme.getTileBounds(h,r,!0);const i=new le({xmin:h[0],ymin:h[1],xmax:h[2],ymax:h[3],spatialReference:this.view.spatialReference});return t.queryElements(i,e)}_referenceElements(r,e){const t=this.layer.source;if(!_(t))for(const i of e)this._referenceElement(r,i)}_referenceElement(r,e){re(this._elementReferences,e.uid,()=>{const t=new z({element:e,spatialReference:this.view.spatialReference}),i=new He(t);return this._overlayContainer.addChild(i),this.elements.add(e),{tiles:new Set,projectedElement:t,overlay:i,debugGraphic:null}}).tiles.add(r)}_dereferenceElements(r,e){for(const t of e)this._dereferenceElement(r,t)}_dereferenceElement(r,e){var i;const t=this._elementReferences.get(e.uid);t.tiles.delete(r),t.tiles.size||(this._overlayContainer.removeChild(t.overlay),t.overlay.destroy(),t.projectedElement.destroy(),this._elementReferences.delete(e.uid),this.elements.remove(e),(i=this._debugGraphicsView)==null||i.graphics.remove(t.debugGraphic))}_elementUpdateHandler(r){var i;let e=this._elementReferences.get(r.uid);if(e){const o=e.projectedElement.normalizedCoords;if(_(o))return this._overlayContainer.removeChild(e.overlay),e.overlay.destroy(),e.projectedElement.destroy(),this._elementReferences.delete(r.uid),this.elements.remove(r),void((i=this._debugGraphicsView)==null?void 0:i.graphics.remove(e.debugGraphic));const s=[],p=[];for(const m of this._tileStrategy.tiles){const c=F(this.view.featuresTilingScheme,m,o);e.tiles.has(m)?c||p.push(m):c&&s.push(m)}for(const m of s)this._referenceElement(m,r);for(const m of p)this._dereferenceElement(m,r);return e=this._elementReferences.get(r.uid),void((e==null?void 0:e.debugGraphic)&&(e.debugGraphic.geometry=e.projectedElement.normalizedCoords,this._debugGraphicsView.graphicUpdateHandler({graphic:e.debugGraphic,property:"geometry"})))}const t=new z({element:r,spatialReference:this.view.spatialReference}).normalizedCoords;if(b(t))for(const o of this._tileStrategy.tiles)F(this.view.featuresTilingScheme,o,t)&&this._referenceElement(o,r)}};x([D()],y.prototype,"_fetchQueue",void 0),x([D()],y.prototype,"layer",void 0),x([D({readOnly:!0})],y.prototype,"elements",void 0),y=x([Z("esri.views.2d.layers.MediaLayerView2D")],y);const h=pe(),g={xmin:0,ymin:0,xmax:0,ymax:0};function F(r,e,t){return r.getTileBounds(h,e.key,!0),g.xmin=h[0],g.ymin=h[1],g.xmax=h[2],g.ymax=h[3],he(g,t)}class ze{constructor(e){this.key=e,this.elements=null,this.isReady=!1,this.visible=!0}setElements(e){const t=[],i=new Set(this.elements);this.elements=e;for(const o of e)i.has(o)?i.delete(o):t.push(o);return this.isReady=!0,[t,Array.from(i)]}destroy(){}}const us=y;export{us as default};
