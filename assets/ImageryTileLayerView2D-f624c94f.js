import{e as m,y as d,a as V}from"./Accessor-815cb0cf.js";import{g as le}from"./Graphic-3183b8e9.js";import{s as F,a as J}from"./Error-781981d1.js";import{I as C,r as g,g as q,t as xe}from"./typedArrayUtil-74bbfd45.js";import{x as be,j as M,E as X}from"./promiseUtils-28f2a985.js";import{l as P,w as Y,U as we,h as Te}from"./reactiveUtils-31da19f9.js";import"./ensureType-125d327f.js";import{m as K}from"./multidimensionalUtils-dd610488.js";import{y as ve,m as Pe,h as Ie}from"./RasterVFDisplayObject-2113b353.js";import{f as Re,u as Ue}from"./LayerView-8329f8a3.js";import{u as ue}from"./aaBoundingRect-3cd21eb0.js";import{d as Se}from"./MapView-85925dbb.js";import{r as $e,M as O,h as Fe,b as Ce,i as ce,s as Me}from"./mat3-53e5916e.js";import{e as z}from"./mat3f32-6c416b1c.js";import{t as G}from"./vec2f32-eaf29605.js";import{h as he,b as ze,j as Ve}from"./dataUtils-3c4d61ef.js";import{r as Be}from"./Container-1fd7ba94.js";import{L as j,M as Ge,P as Z,U as Ee,G as Le,D as ke,R as E,I as ee,Y as De,V as Oe}from"./enums-64ab819c.js";import{l as Ae,c as qe,_ as te,d as $,O as w,g as N,A as je,E as We,p as Ne,h as Qe,T as He}from"./rasterUtils-c4924209.js";import{r as W}from"./context-util-31041918.js";import{f as re}from"./vec2f64-22afc56f.js";import{E as Je}from"./Texture-f1890c15.js";import{o as S}from"./definitions-19bfb61c.js";import{d as Xe,n as se}from"./WGLContainer-302ed869.js";import{x as Ye}from"./VertexArrayObject-315bde4b.js";import{r as me}from"./TiledDisplayObject-a8c16acc.js";import{T as k}from"./enums-b1d611e3.js";import{i as pe}from"./TileContainer-41317e18.js";import"./geometry-0d19f94b.js";import{d as Ke}from"./HandleOwner-124247b4.js";import{w as Ze,a as et}from"./Extent-8fae2379.js";import{j as A}from"./TileInfo-1aef4d7f.js";import{g as ie,f as ae,u as tt,a as rt}from"./RawBlockCache-b0a20ebf.js";import{U as st,i as it,v as oe,J as at}from"./rasterProjectionHelper-26daf988.js";import{r as ne,y as ot}from"./TileStrategy-56172cce.js";import{h as nt}from"./TileStore-53c9ad86.js";import"./TileKey-e007f54a.js";import{l as lt}from"./capabilities-c77778e7.js";import{r as de}from"./util-7544e8cf.js";import{b as ut}from"./commonProperties-64b016df.js";import{s as ct}from"./popupUtils-0c8c2f54.js";import{i as ht}from"./RefreshableLayerView-fc6330e9.js";import"./watch-c7facfb0.js";import"./ArrayPool-ae2ef0ab.js";import"./string-75082bc6.js";import"./nextTick-3ee5a785.js";import"./PopupTemplate-c559259f.js";import"./Clonable-6d5134c7.js";import"./Collection-912f4315.js";import"./Evented-3dfb26f2.js";import"./SimpleObservable-729c9019.js";import"./JSONSupport-2b897629.js";import"./cast-f7d2a22f.js";import"./fieldUtils-e6cf5e5f.js";import"./preload-helper-f8378b50.js";import"./enumeration-94b1319d.js";import"./number-5e819186.js";import"./locale-30120714.js";import"./ActionToggle-dc9b6fc6.js";import"./Identifiable-f5397426.js";import"./symbols-df54e69f.js";import"./CIMSymbol-e48b86be.js";import"./Color-5e799d63.js";import"./colorUtils-639f4d25.js";import"./mathUtils-15f63a45.js";import"./screenUtils-7afeb41c.js";import"./opacityUtils-107b33de.js";import"./symbolLayerUtils3D-15190f75.js";import"./aaBoundingBox-5e14079b.js";import"./request-ae7029ea.js";import"./persistableUrlUtils-73be900a.js";import"./collectionUtils-5a99c1c0.js";import"./Portal-2a7c40a2.js";import"./Loadable-6776e4d9.js";import"./Promise-092442f7.js";import"./PortalGroup-d3a43002.js";import"./PortalUser-c84fcbac.js";import"./jsonUtils-15ca15d7.js";import"./Polyline-40b9e769.js";import"./VertexElementDescriptor-2925c6af.js";import"./color-e7189c96.js";import"./enums-4b2a86a0.js";import"./number-b10bd8f5.js";import"./Cyclical-a38bc08c.js";import"./CollectionFlattener-670e79b4.js";import"./workers-8153041b.js";import"./Connection-59240e9d.js";import"./Queue-687500af.js";import"./assets-01239caf.js";import"./intl-b6f3ccd9.js";import"./messages-dc0c80a1.js";import"./projection-319bc7cc.js";import"./mat4-a8da3f27.js";import"./zscale-a617710a.js";import"./jsxFactory-3315acca.js";import"./uuid-73213768.js";import"./byteSizeEstimations-90c5a50d.js";import"./AttachmentInfo-6ef9e2f8.js";import"./AttachmentQuery-527f7d40.js";import"./layerUtils-7438cb6b.js";import"./Heading-0d44813a.js";import"./widget-f92fe188.js";import"./symbolUtils-17e1ef41.js";import"./LegendOptions-540a8245.js";import"./utils-e3b2b426.js";import"./asyncUtils-5c97747c.js";import"./jsonUtils-0607c004.js";import"./parser-527c5e80.js";import"./mat4f32-60a2394b.js";import"./ItemCache-dc80b100.js";import"./MemCache-9d81d118.js";import"./utils-1aab1134.js";import"./jsonUtils-ee8d96d0.js";import"./UniqueValueRenderer-206098f5.js";import"./diffUtils-0b07ec68.js";import"./colorRamps-f3b121e7.js";import"./sizeVariableUtils-d4870b0d.js";import"./visualVariableUtils-6b4a3e98.js";import"./compilerUtils-024563a4.js";import"./lengthUtils-40356f92.js";import"./typeUtils-3bf84b36.js";import"./jsonUtils-053e809e.js";import"./styleUtils-9f3a9a37.js";import"./DictionaryLoader-37853497.js";import"./LRUCache-425021b3.js";import"./deprecate-da2b7904.js";import"./heatmapUtils-8c1efe72.js";import"./vec4f64-aa64c7e9.js";import"./colorUtils-c0f43caf.js";import"./mat2d-68947564.js";import"./webStyleSymbolUtils-3aa191ea.js";import"./devEnvironmentUtils-5002a058.js";import"./DataLayerSource-3a7a94c9.js";import"./Field-7770b57d.js";import"./fieldType-e429d020.js";import"./executeQueryJSON-a01adc7e.js";import"./utils-19aa96f8.js";import"./query-d7f993dc.js";import"./normalizeUtils-eda5eef5.js";import"./normalizeUtilsCommon-04cad10b.js";import"./utils-067ee6bc.js";import"./urlUtils-6a004888.js";import"./pbfQueryUtils-9730bd74.js";import"./pbf-c0fe6550.js";import"./OptimizedFeature-6cca5f48.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./queryZScale-e2b48f65.js";import"./FeatureSet-736831f6.js";import"./Query-4c66990d.js";import"./TimeExtent-202e4138.js";import"./FullTextSearch-da95615f.js";import"./featureConversionUtils-55a32b06.js";import"./RelationshipQuery-9431dd85.js";import"./TopFeaturesQuery-bceb40dd.js";import"./FeatureLayer-58755fcf.js";import"./MultiOriginJSONSupport-6a5e69d5.js";import"./sql-af7b41f8.js";import"./FeatureLayerBase-4839e0f4.js";import"./HeightModelInfo-0c04472c.js";import"./arcgisLayerUrl-0e1d3d82.js";import"./TimeReference-afe9f4e7.js";import"./datetime-b6333958.js";import"./serviceCapabilitiesUtils-18a2cf01.js";import"./Layer-974413c8.js";import"./editsZScale-884a3138.js";import"./APIKeyMixin-8bba595e.js";import"./ArcGISService-cdf8a9a9.js";import"./BlendLayer-f72967b1.js";import"./CustomParametersMixin-7c5495bd.js";import"./EditBusLayer-b9bbb936.js";import"./FeatureReductionLayer-1c633e04.js";import"./labelingInfo-a45c32d0.js";import"./labelUtils-75fd34dc.js";import"./defaultsJSON-b087dd4d.js";import"./OperationalLayer-80c22541.js";import"./OrderedLayer-0495accc.js";import"./PortalLayer-d601e363.js";import"./PortalItem-051eae04.js";import"./portalItemUtils-2695e0b3.js";import"./RefreshableLayer-ac9eee59.js";import"./ScaleRangeLayer-abd4cd2e.js";import"./TemporalLayer-4e484055.js";import"./FeatureTemplate-d52241a0.js";import"./FeatureType-f3879578.js";import"./fieldProperties-eab34f4c.js";import"./FieldsIndex-9f1d87a4.js";import"./versionUtils-47bcdca9.js";import"./styleUtils-023b7cfa.js";import"./popupUtils-2e46f095.js";import"./ElevationInfo-91b8239c.js";import"./Scheduler-58e89fab.js";import"./GoTo-a612a338.js";import"./accessibleHandler-bfc19404.js";import"./vmEvent-d773b6c5.js";import"./Map-afd2e412.js";import"./Basemap-87d5fd9e.js";import"./loadAll-38268fb1.js";import"./writeUtils-8b292301.js";import"./basemapUtils-1ed0752b.js";import"./TablesMixin-363b96a0.js";import"./GraphicsCollection-af665c4a.js";import"./ViewingMode-915d19cb.js";import"./unitBezier-881ac1eb.js";import"./vec2-4c517306.js";import"./pixelRangeUtils-03719dd8.js";import"./EffectView-106fd8f9.js";import"./ProgramTemplate-da7e5f1d.js";import"./MaterialKey-34911e37.js";import"./alignmentUtils-ae955d28.js";import"./utils-eea54cdd.js";import"./StyleDefinition-7d58136b.js";import"./config-1337d16e.js";import"./GeometryUtils-dd03fc25.js";import"./earcut-61f7b102.js";import"./TileKey-b87e0dc5.js";import"./rbush-f2a85c98.js";import"./quickselect-56c5966e.js";const mt={bandCount:3,outMin:0,outMax:1,minCutOff:[0,0,0],maxCutOff:[255,255,255],factor:[1/255,1/255,1/255],useGamma:!1,gamma:[1,1,1],gammaCorrection:[1,1,1],colormap:null,colormapOffset:null,stretchType:"none",type:"stretch"};let pt=class extends Be{constructor(e=null,t=null,s=null){super(),this._textureInvalidated=!0,this._colormapTextureInvalidated=!0,this._rasterTexture=null,this._rasterTextureBandIds=null,this._transformGridTexture=null,this._colormapTexture=null,this._colormap=null,this._supportsBilinearTexture=!0,this._processedTexture=null,this.functionTextures=[],this.projected=!1,this.stencilRef=0,this.coordScale=[1,1],this._processed=!1,this._symbolizerParameters=null,this.height=null,this.isRendereredSource=!1,this.pixelRatio=1,this.resolution=0,this.rotation=0,this._source=null,this.rawPixelData=null,this._suspended=!1,this._bandIds=null,this._interpolation=null,this._transformGrid=null,this.width=null,this.x=0,this.y=0,this.source=e,this.transformGrid=t,this.interpolation=s}destroy(){this._disposeTextures()}get processedTexture(){return this._processedTexture}set processedTexture(e){this._processedTexture!==e&&(this._disposeTextures(!0),this._processedTexture=e)}get rasterTexture(){return this._rasterTexture}set rasterTexture(e){var t;this._rasterTexture!==e&&((t=this._rasterTexture)==null||t.dispose(),this._rasterTexture=e)}get processed(){return this._processed}set processed(e){this._processed=e,e||(C(this.processedTexture),this.invalidateTexture())}get symbolizerParameters(){return this._symbolizerParameters||mt}set symbolizerParameters(e){this._symbolizerParameters!==e&&(this._symbolizerParameters=e,this._colormapTextureInvalidated=!0,this.commonUniforms=null)}get source(){return this._source}set source(e){this._source!==e&&(this._source=e,this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTexture=null,this._rasterTextureBandIds=null),this.projected=!1,this.invalidateTexture())}get suspended(){return this._suspended}set suspended(e){this._suspended&&!e&&this.stage&&(this.ready(),this.requestRender()),this._suspended=e}get bandIds(){return this._bandIds}set bandIds(e){this._bandIds=e,this._isBandIdschanged(e)&&(this.projected=!1,this.invalidateTexture())}get interpolation(){return this._interpolation||"nearest"}set interpolation(e){this._interpolation=e,this._rasterTexture&&this._rasterTexture.setSamplingMode(this._getTextureSamplingMethod(e||"nearest")==="bilinear"?j.LINEAR:j.NEAREST)}get transformGrid(){return this._transformGrid}set transformGrid(e){this._transformGrid=e,this._transformGridTexture=C(this._transformGridTexture)}invalidateTexture(){this._textureInvalidated||(this._textureInvalidated=!0,this.requestRender())}_createTransforms(){return{dvs:z()}}setTransform(e){const t=$e(this.transforms.dvs),[s,i]=e.toScreenNoRotation([0,0],[this.x,this.y]),a=this.resolution/this.pixelRatio/e.resolution,o=a*this.width,n=a*this.height,l=Math.PI*this.rotation/180;O(t,t,G(s,i)),O(t,t,G(o/2,n/2)),Fe(t,t,-l),O(t,t,G(-o/2,-n/2)),Ce(t,t,G(o,n)),ce(this.transforms.dvs,e.displayViewMat3,t)}getTextures({forProcessing:e=!1,useProcessedTexture:t=!1}={}){const s=t?this._processedTexture??this._rasterTexture:this._rasterTexture,i=[],a=[];return s?t?(a.push(s),i.push("u_image"),this._colormapTexture&&(a.push(this._colormapTexture),i.push("u_colormap")),{names:i,textures:a}):(this._transformGridTexture&&(a.push(this._transformGridTexture),i.push("u_transformGrid")),a.push(s),i.push("u_image"),this._colormapTexture&&!e&&(a.push(this._colormapTexture),i.push("u_colormap")),{names:i,textures:a}):{names:i,textures:a}}onAttach(){this.invalidateTexture()}onDetach(){this.invalidateTexture()}updateTexture({context:e}){if(!this.stage)return void this._disposeTextures();const t=this._isValidSource(this.source);t&&this._colormapTextureInvalidated&&(this._colormapTextureInvalidated=!1,this._updateColormapTexture(e)),this._textureInvalidated&&(this._textureInvalidated=!1,this._createOrDestroyRasterTexture(e),this._rasterTexture&&(t?this.transformGrid&&!this._transformGridTexture&&(this._transformGridTexture=Ae(e,this.transformGrid)):this._rasterTexture.setData(null)),this.suspended||(this.ready(),this.requestRender()))}updateProcessedTexture(){const{functionTextures:e}=this;e.length!==0&&(this.processedTexture=e.shift(),e.forEach(t=>t==null?void 0:t.dispose()),e.length=0)}_createOrDestroyRasterTexture(e){var o,n;const t=g(this.source)?he(this.source,this.bandIds):null;if(!this._isValidSource(t))return void(this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTextureBandIds=null,this._rasterTexture=null));const s=!this._isBandIdschanged(this.bandIds);if(this._rasterTexture){if(s)return;this._rasterTexture.dispose(),this._rasterTextureBandIds=null,this._rasterTexture=null}this._supportsBilinearTexture=!!((o=e.capabilities.textureFloat)!=null&&o.textureFloatLinear);const i=this._getTextureSamplingMethod(this.interpolation),a=this.isRendereredSource||!((n=e.capabilities.textureFloat)!=null&&n.textureFloat);this._rasterTexture=qe(e,t,i,a),this.projected=!1,this._processed=!1,this._rasterTextureBandIds=this.bandIds?[...this.bandIds]:null}_isBandIdschanged(e){const t=this._rasterTextureBandIds;return!(t==null&&e==null||t&&e&&t.join("")===e.join(""))}_isValidSource(e){var t;return g(e)&&((t=e.pixels)==null?void 0:t.length)>0}_getTextureSamplingMethod(e){const{type:t,colormap:s}=this.symbolizerParameters,i=t==="lut"||t==="stretch"&&g(s);return!this._supportsBilinearTexture||i||e!=="bilinear"&&e!=="cubic"?"nearest":"bilinear"}_updateColormapTexture(e){const t=this._colormap,s=this.symbolizerParameters.colormap;return s?t?s.length!==t.length||s.some((i,a)=>i!==t[a])?(this._colormapTexture&&(this._colormapTexture.dispose(),this._colormapTexture=null),this._colormapTexture=te(e,s),void(this._colormap=s)):void 0:(this._colormapTexture=te(e,s),void(this._colormap=s)):(this._colormapTexture&&(this._colormapTexture.dispose(),this._colormapTexture=null),void(this._colormap=null))}_disposeTextures(e=!1){this._transformGridTexture&&(this._transformGridTexture.dispose(),this._transformGridTexture=null),!e&&this._colormapTexture&&(this._colormapTexture.dispose(),this._colormapTexture=null,this._colormap=null,this._colormapTextureInvalidated=!0),!e&&this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTexture=null,this._rasterTextureBandIds=null),this._processedTexture&&(this._processedTexture.dispose(),this._processedTexture=null)}};function dt(r){return g(r.source)}function Q(r){const e=[];return r&&(e.push("applyProjection"),r.spacing[0]===1&&e.push("lookupProjection")),e}function fe(r,e,t){var a;const s=!((a=t.capabilities.textureFloat)!=null&&a.textureFloatLinear),i=[];return r==="cubic"?i.push("bicubic"):r==="bilinear"&&(e?(i.push("bilinear"),i.push("nnedge")):s&&i.push("bilinear")),i}const ft={vsPath:"raster/common",fsPath:"raster/lut",attributes:new Map([["a_position",0],["a_texcoord",1]])};function gt(r,e,t){const s=t?[]:Q(e.transformGrid);return{defines:s,program:r.painter.materialManager.getProgram(ft,s)}}function _t(r,e,t,s,i=!1){const{names:a,textures:o}=t.getTextures({useProcessedTexture:i});$(r.context,e,a,o),w(e,s,t.commonUniforms),e.setUniformMatrix3fv("u_dvsMat3",t.transforms.dvs);const{colormap:n,colormapOffset:l}=t.symbolizerParameters,u=N(n,l);w(e,s,u)}const yt={createProgram:gt,bindTextureAndUniforms:_t},xt={vsPath:"raster/common",fsPath:"raster/hillshade",attributes:new Map([["a_position",0],["a_texcoord",1]])};function bt(r,e,t){const{colormap:s}=e.symbolizerParameters,i=[...t?[]:Q(e.transformGrid),...fe(e.interpolation,s!=null,r.context)];return s!=null&&i.push("applyColormap"),{defines:i,program:r.painter.materialManager.getProgram(xt,i)}}function wt(r,e,t,s,i=!1){const{names:a,textures:o}=t.getTextures({useProcessedTexture:i});$(r.context,e,a,o),w(e,s,t.commonUniforms),e.setUniformMatrix3fv("u_dvsMat3",t.transforms.dvs);const n=t.symbolizerParameters,{colormap:l,colormapOffset:u}=n;if(l!=null){const p=N(l,u);w(e,s,p)}const h=je(n);w(e,s,h)}const Tt={createProgram:bt,bindTextureAndUniforms:wt},vt={vsPath:"raster/common",fsPath:"raster/stretch",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Pt(r,e,t){const{colormap:s}=e.symbolizerParameters,i=[...t?[]:Q(e.transformGrid),...fe(e.interpolation,s!=null,r.context)];return e.isRendereredSource&&!t?i.push("noop"):s!=null&&i.push("applyColormap"),{defines:i,program:r.painter.materialManager.getProgram(vt,i)}}function It(r,e,t,s,i=!1){const{names:a,textures:o}=t.getTextures({useProcessedTexture:i});$(r.context,e,a,o),w(e,s,t.commonUniforms),e.setUniformMatrix3fv("u_dvsMat3",t.transforms.dvs);const n=t.symbolizerParameters,{colormap:l,colormapOffset:u}=n;if(l!=null){const p=N(l,u);w(e,s,p)}const h=We(n);w(e,s,h)}const Rt={createProgram:Pt,bindTextureAndUniforms:It},L=new Map;function Ut(r){return L.get(r)}L.set("lut",yt),L.set("hillshade",Tt),L.set("stretch",Rt);const St=[1,1],$t=[2,0,0,0,2,0,-1,-1,0];function b(r,e,t){const{context:s,rasterFunction:i,hasBranches:a}=r,{raster:o}=i.parameters,n=a?(o==null?void 0:o.id)??-1:0,l=t.functionTextures[n]??t.rasterTexture;$(s,e,["u_image"],[l])}function ge(r,e,t){const{rasters:s}=r.rasterFunction.parameters;if(!s)return;if(s.length<2)return b(r,e,t);const i=s.filter(a=>a.name!=="Constant").map(a=>a.id!=null&&a.name!=="Identity"?t.functionTextures[a.id]:t.rasterTexture);if($(r.context,e,["u_image","u_image1","u_image2"].slice(0,i.length),i),i.length!==s.length){if(s.length===2){const a=s.findIndex(l=>l.name==="Constant"),o=a===0?[0,1,0,1,0,0,0,0,0]:[1,0,0,0,1,0,0,0,0],{value:n}=s[a].parameters;e.setUniform1f("u_image1Const",n),e.setUniformMatrix3fv("u_imageSwap",o)}else if(s.length===3){const a=[];if(s.forEach((o,n)=>o.name==="Constant"&&a.push(n)),a.length===1){const{value:o}=s[a[0]].parameters;e.setUniform1f("u_image1Const",o);const n=a[0]===0?[0,1,0,0,0,1,1,0,0]:a[0]===1?[1,0,0,0,0,1,0,1,0]:[1,0,0,0,1,0,0,0,1];e.setUniformMatrix3fv("u_imageSwap",n)}else if(a.length===2){const{value:o}=s[a[0]].parameters;e.setUniform1f("u_image1Const",o);const{value:n}=s[a[1]].parameters;e.setUniform1f("u_image2Const",n);const l=s.findIndex(h=>h.name!=="Constant"),u=l===0?[1,0,0,0,1,0,0,0,1]:l===1?[0,1,0,1,0,0,0,0,1]:[0,0,1,1,0,0,0,1,0];e.setUniformMatrix3fv("u_imageSwap",u)}}}}function x(r){r.setUniform2fv("u_coordScale",St),r.setUniformMatrix3fv("u_dvsMat3",$t)}const Ft={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/aspect",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Ct(r,e){return r.painter.materialManager.getProgram(Ft,[])}function Mt(r,e,t){b(r,e,t),x(e);const{width:s,height:i,resolution:a}=t;e.setUniform2fv("u_srcImageSize",[s,i]),e.setUniform2fv("u_cellSize",[a,a])}const zt={createProgram:Ct,bindTextureAndUniforms:Mt},Vt={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/bandarithmetic",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Bt(r,e){const{painter:t,rasterFunction:s}=r,{indexType:i}=s.parameters;return t.materialManager.getProgram(Vt,[i])}function Gt(r,e,t){b(r,e,t),x(e);const{bandIndexMat3:s}=r.rasterFunction.parameters;e.setUniformMatrix3fv("u_bandIndexMat3",s)}const Et={createProgram:Bt,bindTextureAndUniforms:Gt},Lt={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/compositeband",attributes:new Map([["a_position",0],["a_texcoord",1]])};function kt(r,e){return r.painter.materialManager.getProgram(Lt,[])}function Dt(r,e,t){ge(r,e,t),x(e)}const Ot={createProgram:kt,bindTextureAndUniforms:Dt},At={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/convolution",attributes:new Map([["a_position",0],["a_texcoord",1]])};function qt(r,e){const{painter:t,rasterFunction:s}=r,{kernelRows:i,kernelCols:a}=s.parameters,o=[{name:"rows",value:i},{name:"cols",value:a}];return t.materialManager.getProgram(At,o)}function jt(r,e,t){b(r,e,t),x(e),e.setUniform2fv("u_srcImageSize",[t.width,t.height]);const{kernel:s,clampRange:i}=r.rasterFunction.parameters;e.setUniform1fv("u_kernel",s),e.setUniform2fv("u_clampRange",i)}const Wt={createProgram:qt,bindTextureAndUniforms:jt},Nt={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/extractband",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Qt(r,e){return r.painter.materialManager.getProgram(Nt,[])}function Ht(r,e,t){b(r,e,t),x(e);const{bandIndexMat3:s}=r.rasterFunction.parameters;e.setUniformMatrix3fv("u_bandIndexMat3",s)}const Jt={createProgram:Qt,bindTextureAndUniforms:Ht},Xt={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/local",attributes:new Map([["a_position",0],["a_texcoord",1]])},Yt=new Set(["sinh","cosh","tanh","asinh","acosh","atanh"]);function Kt(r){const{painter:e,rasterFunction:t}=r,{imageCount:s,operationName:i,rasters:a,isOutputRounded:o}=t.parameters;let n=i.toLowerCase();r.context.type===W.WEBGL1&&Yt.has(n)&&(n=`polyfill${n}`);const l=[n];s===2&&l.push("twoImages");const u=a.filter(h=>h.name==="Constant");return u.length&&(l.push("oneConstant"),u.length===2&&l.push("twoConstant")),o&&l.push("roundOutput"),e.materialManager.getProgram(Xt,l)}function Zt(r,e,t){ge(r,e,t),x(e);const{domainRange:s}=r.rasterFunction.parameters;e.setUniform2fv("u_domainRange",s)}const er={createProgram:Kt,bindTextureAndUniforms:Zt},tr={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/mask",attributes:new Map([["a_position",0],["a_texcoord",1]])};function rr(r,e){const{painter:t,rasterFunction:s}=r,i=s.parameters.bandCount>1?["multiBand"]:[];return t.materialManager.getProgram(tr,i)}function sr(r,e,t){b(r,e,t),x(e);const{includedRanges:s,noDataValues:i}=r.rasterFunction.parameters;e.setUniform1fv("u_includedRanges",s),e.setUniform1fv("u_noDataValues",i)}const ir={createProgram:rr,bindTextureAndUniforms:sr},ar={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/ndvi",attributes:new Map([["a_position",0],["a_texcoord",1]])};function or(r,e){const{painter:t,rasterFunction:s}=r,i=s.parameters.scaled?["scaled"]:[];return t.materialManager.getProgram(ar,i)}function nr(r,e,t){b(r,e,t),x(e);const{bandIndexMat3:s}=r.rasterFunction.parameters;e.setUniformMatrix3fv("u_bandIndexMat3",s)}const lr={createProgram:or,bindTextureAndUniforms:nr},ur={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/remap",attributes:new Map([["a_position",0],["a_texcoord",1]])};function cr(r,e){return r.painter.materialManager.getProgram(ur,[])}function hr(r,e,t){b(r,e,t),x(e);const{noDataRanges:s,rangeMaps:i,allowUnmatched:a,clampRange:o}=r.rasterFunction.parameters;e.setUniform1fv("u_noDataRanges",s),e.setUniform1fv("u_rangeMaps",i),e.setUniform1f("u_unmatchMask",a?1:0),e.setUniform2fv("u_clampRange",o)}const mr={createProgram:cr,bindTextureAndUniforms:hr},pr={vsPath:"raster/common",fsPath:"raster/reproject",attributes:new Map([["a_position",0],["a_texcoord",1]])};function dr(r,e){var n;const{painter:t}=r,s=[],i=!((n=r.context.capabilities.textureFloat)!=null&&n.textureFloatLinear),{interpolation:a,transformGrid:o}=e;return a==="cubic"?s.push("bicubic"):a==="bilinear"&&i&&s.push("bilinear"),o&&(s.push("applyProjection"),o.spacing[0]===1&&s.push("lookupProjection")),t.materialManager.getProgram(pr,s)}function fr(r,e,t){const{names:s,textures:i}=t.getTextures({forProcessing:!0});$(r.context,e,s,i),e.setUniform1f("u_scale",1),e.setUniform2fv("u_offset",[0,0]),e.setUniform2fv("u_coordScale",[1,1]),e.setUniformMatrix3fv("u_dvsMat3",[2,0,0,0,2,0,-1,-1,0]),e.setUniform1i("u_flipY",0),e.setUniform1f("u_opacity",1);const{width:a,height:o,source:n,transformGrid:l}=t;e.setUniform2fv("u_srcImageSize",[n.width,n.height]),e.setUniform2fv("u_targetImageSize",[a,o]),e.setUniform2fv("u_transformSpacing",l?l.spacing:re),e.setUniform2fv("u_transformGridSize",l?l.size:re)}const gr={createProgram:dr,bindTextureAndUniforms:fr},_r={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/slope",attributes:new Map([["a_position",0],["a_texcoord",1]])};function yr(r,e){const{painter:t,rasterFunction:s}=r,{slopeType:i}=s.parameters,a=i==="percent-rise"?["percentRise"]:[];return t.materialManager.getProgram(_r,a)}function xr(r,e,t){b(r,e,t),x(e);const{width:s,height:i,resolution:a}=t,{zFactor:o,slopeType:n,pixelSizePower:l,pixelSizeFactor:u}=r.rasterFunction.parameters;e.setUniform2fv("u_srcImageSize",[s,i]),e.setUniform2fv("u_cellSize",[a,a]),e.setUniform1f("u_zFactor",o),e.setUniform1f("u_pixelSizePower",n==="adjusted"?l:0),e.setUniform1f("u_pixelSizeFactor",n==="adjusted"?u:0)}const br={createProgram:yr,bindTextureAndUniforms:xr},wr={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/stretch",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Tr(r,e){const{useGamma:t,bandCount:s,isOutputRounded:i}=r.rasterFunction.parameters,a=[];return t&&a.push("useGamma"),s>1&&a.push("multiBand"),i&&a.push("roundOutput"),r.painter.materialManager.getProgram(wr,a)}function vr(r,e,t){b(r,e,t),x(e);const{width:s,height:i}=t,a=r.rasterFunction.parameters;e.setUniform2fv("u_srcImageSize",[s,i]),e.setUniform1f("u_minOutput",a.outMin),e.setUniform1f("u_maxOutput",a.outMax),e.setUniform1fv("u_factor",a.factor),e.setUniform1fv("u_minCutOff",a.minCutOff),e.setUniform1fv("u_maxCutOff",a.maxCutOff),e.setUniform1fv("u_gamma",a.gamma),e.setUniform1fv("u_gammaCorrection",a.gammaCorrection)}const Pr={createProgram:Tr,bindTextureAndUniforms:vr},y=new Map;function _e(r,e,t){const s={width:e,height:t,target:Ge.TEXTURE_2D,pixelFormat:Z.RGBA,internalFormat:r.type===W.WEBGL2?Ee.RGBA32F:Z.RGBA,samplingMode:j.NEAREST,dataType:Le.FLOAT,isImmutable:r.type===W.WEBGL2,wrapMode:ke.CLAMP_TO_EDGE,flipped:!1};return new Je(r,s)}function Ir(r,e,t,s){const{context:i,requestRender:a,allowDelayedRender:o}=r,n=s.createProgram(r,t);if(o&&g(a)&&!n.compiled)return a(),null;const{width:l,height:u}=t;return i.bindFramebuffer(e),i.setViewport(0,0,l,u),i.useProgram(n),n}function Rr(r){return y.get(r.toLowerCase())}function Ur(r,e,t,s){const i=r.rasterFunction.name.toLowerCase(),a=i==="reproject"?gr:Rr(i);if(a==null)return;const o=Ir(r,t,s,a);if(!o)return;a.bindTextureAndUniforms(r,o,s),e.draw();const{width:n,height:l}=s,u=_e(r.context,n,l);if(t.copyToTexture(0,0,n,l,0,0,u),i==="reproject")s.rasterTexture=u,s.projected=!0;else{const h=r.hasBranches?r.rasterFunction.id:0;s.functionTextures[h]=u}}y.set("aspect",zt),y.set("bandarithmetic",Et),y.set("compositeband",Ot),y.set("convolution",Wt),y.set("extractband",Jt),y.set("local",er),y.set("mask",ir),y.set("ndvi",lr),y.set("remap",mr),y.set("slope",br),y.set("stretch",Pr);class Sr extends Xe{constructor(){super(...arguments),this.name="raster",this._quad=null,this._rendererUniformInfos=new Map,this._fbo=null}dispose(){C(this._quad),C(this._fbo)}prepareState(e){const{context:t,renderPass:s}=e,i=s==="raster";t.setBlendingEnabled(!i),t.setBlendFunctionSeparate(E.ONE,E.ONE_MINUS_SRC_ALPHA,E.ONE,E.ONE_MINUS_SRC_ALPHA),t.setColorMask(!0,!0,!0,!0),t.setStencilWriteMask(0),t.setStencilTestEnabled(!i)}draw(e,t){if(!dt(t)||t.suspended)return;const{renderPass:s}=e;if(s!=="raster-bitmap")return s==="raster"?this._process(e,t):void this._drawBitmap(e,t,!0);this._drawBitmap(e,t)}_process(e,t){const{rasterFunction:s}=e,i=s.name==="Reproject";if(!(i?!(t.rasterTexture&&t.projected):!t.processed))return;const{timeline:a,context:o}=e;a.begin(this.name);const n=o.getBoundFramebufferObject(),l=o.getViewport();i||(t.processedTexture=C(t.processedTexture)),o.setStencilFunction(ee.EQUAL,t.stencilRef,255),t.updateTexture(e),this._initQuad(o);const{isStandardRasterTileSize:u,fbo:h}=this._getRasterFBO(o,t.width,t.height);Ur(e,this._quad,h,t),u||h.dispose(),o.bindFramebuffer(n),o.setViewport(l.x,l.y,l.width,l.height),a.end(this.name)}_drawBitmap(e,t,s=!1){const{timeline:i,context:a}=e;if(i.begin(this.name),a.setStencilFunction(ee.EQUAL,t.stencilRef,255),t.updateTexture(e),s&&!t.processedTexture){if(t.updateProcessedTexture(),!t.processedTexture)return void i.end(this.name);t.processed=!0}this._initBitmapCommonUniforms(t);const o=t.symbolizerParameters.type,n=Ut(o),{requestRender:l,allowDelayedRender:u}=e,{defines:h,program:p}=n.createProgram(e,t,s);if(u&&g(l)&&!p.compiled)return void l();a.useProgram(p);const c=this._getUniformInfos(o,a,p,h);this._quad||(this._quad=new se(a,[0,0,1,0,0,1,1,1])),n.bindTextureAndUniforms(e,p,t,c,s),this._quad.draw(),i.end(this.name)}_initBitmapCommonUniforms(e){if(!e.commonUniforms){const t=He(1,[0,0]),{transformGrid:s,width:i,height:a}=e,o=Ne(s,[i,a],[e.source.width,e.source.height],1,!1);e.commonUniforms={...t,...o,u_coordScale:e.coordScale}}}_getRasterFBO(e,t,s){const i=t===S||s===S;return i?(this._fbo||(this._fbo=this._createNewFBO(e,t,s)),{isStandardRasterTileSize:i,fbo:this._fbo}):{isStandardRasterTileSize:i,fbo:this._createNewFBO(e,t,s)}}_createNewFBO(e,t,s){const i=_e(e,t,s);return new Ye(e,{colorTarget:De.TEXTURE,depthStencilTarget:Oe.NONE,width:t,height:s},i)}_initQuad(e){this._quad||(this._quad=new se(e,[0,0,1,0,0,1,1,1]))}_getUniformInfos(e,t,s,i){const a=i.length>0?e+"-"+i.join("-"):e;if(this._rendererUniformInfos.has(a))return this._rendererUniformInfos.get(a);const o=Qe(t,s);return this._rendererUniformInfos.set(a,o),o}}class $r extends me{constructor(e,t,s,i,a,o,n=null){super(e,t,s,i,a,o),this.bitmap=null,this.bitmap=new pt(n,null,null),this.bitmap.coordScale=[a,o],this.bitmap.once("isReady",()=>this.ready())}destroy(){super.destroy(),this.bitmap.destroy(),this.bitmap=null,this.stage=null}set stencilRef(e){this.bitmap.stencilRef=e}get stencilRef(){return this.bitmap.stencilRef}setTransform(e){super.setTransform(e),this.bitmap.transforms.dvs=this.transforms.dvs}_createTransforms(){return{dvs:z(),tileMat3:z()}}onAttach(){this.bitmap.stage=this.stage}onDetach(){this.bitmap.stage=null}}let Fr=class extends pe{constructor(){super(...arguments),this.isCustomTilingScheme=!1}createTile(e){const t=this._getTileBounds(e),[s,i]=this._tileInfoView.tileInfo.size,a=this._tileInfoView.getTileResolution(e.level);return new $r(e,a,t[0],t[3],s,i)}prepareRenderPasses(e){const t=e.registerRenderPass({name:"imagery (tile)",brushes:[Sr],target:()=>this.children.map(s=>s.bitmap),drawPhase:k.MAP});return[...super.prepareRenderPasses(e),t]}doRender(e){if(!this.visible||e.drawPhase!==k.MAP)return;const{rasterFunctionChain:t}=this;if(!t)return e.renderPass="raster-bitmap",void super.doRender(e);const[s,i]=this._tileInfoView.tileInfo.size;if(e.renderPass="raster",e.rasterFunction={name:"Reproject",parameters:{targetImageSize:[s,i]},pixelType:"f32",id:0,isNoopProcess:!1},super.doRender(e),t==null?void 0:t.functions.length){const{functions:a,hasBranches:o}=t;for(let n=0;n<a.length;n++){const l=a[n];l.name!=="Constant"&&l.name!=="Identity"&&(e.renderPass="raster",e.rasterFunction=l,e.hasBranches=o,super.doRender(e))}}e.rasterFunction=null,e.renderPass="bitmap",super.doRender(e)}_getTileBounds(e){const t=this._tileInfoView.getTileBounds(ue(),e);if(this.isCustomTilingScheme&&e.world){const{tileInfo:s}=this._tileInfoView,i=Se(s.spatialReference);if(i){const a=s.lodAt(e.level);if(!a)return t;const{resolution:o}=a,n=i/o%s.size[0],l=n?(s.size[0]-n)*o:0;t[0]-=l*e.world,t[2]-=l*e.world}}return t}};const Cr=[0,0];let _=class extends Ke{constructor(){super(...arguments),this._emptyTilePixelBlock=null,this._tileStrategy=null,this._tileInfoView=null,this._fetchQueue=null,this._blockCacheRegistryUrl=null,this._blockCacheRegistryId=null,this._srcResolutions=[],this.previousLOD=null,this._needBlockCacheUpdate=!1,this._globalSymbolizerParams=null,this._symbolizerParams=null,this._abortController=null,this._isCustomTilingScheme=!1,this._rasterFunctionState="na",this._globalUpdateRequested=!1,this.attached=!1,this.timeExtent=null,this.redrawOrRefetch=be(async(r={})=>{if(!this.previousLOD||this.layerView.suspended)return;const e=this._rasterFunctionState;r.reprocess&&(await this.updatingHandles.addPromise(this.layer.updateRasterFunction()),this.updateRasterFunctionParameters());const t=this._rasterFunctionState,{type:s}=this;return r.refetch||s!=="raster"&&r.reprocess||t==="cpu"||e==="cpu"?this.updatingHandles.addPromise(this.doRefresh()):this.updatingHandles.addPromise(this._redrawImage(r.signal))})}get useWebGLForProcessing(){return this._get("useWebGLForProcessing")??!0}set useWebGLForProcessing(r){this._set("useWebGLForProcessing",r)}get useProgressiveUpdate(){return this._get("useProgressiveUpdate")==null||this._get("useProgressiveUpdate")}set useProgressiveUpdate(r){if(this._tileStrategy&&this.useProgressiveUpdate!==r){this._tileStrategy.destroy(),this.container.removeAllChildren();const e=this._getCacheSize(r);this._tileStrategy=new ne({cachePolicy:"purge",acquireTile:t=>this.acquireTile(t),releaseTile:t=>this.releaseTile(t),cacheSize:e,tileInfoView:this._tileInfoView}),this._set("useProgressiveUpdate",r),this.layerView.requestUpdate()}}update(r){var a;this._fetchQueue.pause(),this._fetchQueue.state=r.state,this._tileStrategy.update(r),this._fetchQueue.resume();const{extent:e,resolution:t,scale:s}=r.state,i=this._tileInfoView.getClosestInfoForScale(s);if(this.layer.raster){if(!this.useProgressiveUpdate||this._needBlockCacheUpdate){const o=this._srcResolutions[i.level],n=e.toJSON?e:Ze.fromJSON(e);ie(this._blockCacheRegistryUrl,this._blockCacheRegistryId,n,t,o,this.layer.raster.ioConfig.sampling)}this._needBlockCacheUpdate=!1,((a=this.previousLOD)==null?void 0:a.level)!==i.level&&(this.previousLOD=i,this._symbolizerParams==null||this.layerView.hasTilingEffects||this._updateSymbolizerParams(),this._tileStrategy.updateCacheSize(0))}}moveEnd(){!this.layerView.hasTilingEffects&&this.useProgressiveUpdate||(this._abortController&&this._abortController.abort(),this._abortController=new AbortController,this._fetchQueue.length===0&&this._redrawImage(this._abortController.signal).then(()=>{this._globalUpdateRequested=!1,this.layerView.requestUpdate()}));const r=this._getCacheSize(this.useProgressiveUpdate);this._tileStrategy.updateCacheSize(r),this.layerView.requestUpdate()}get updating(){var r;return((r=this._fetchQueue)==null?void 0:r.updating)||this._globalUpdateRequested||!(!this.updatingHandles||!this.updatingHandles.updating)}attach(){lt("2d").supportsTextureFloat||(this.useWebGLForProcessing=!1),this._initializeTileInfo(),this._tileInfoView=new nt(this.layerView.tileInfo,this.layerView.fullExtent);const r=this._computeFetchConcurrency();this._fetchQueue=new ot({tileInfoView:this._tileInfoView,concurrency:r,process:(t,s)=>this._fetchTile1(t,s)});const e=this._getCacheSize(this.useProgressiveUpdate);this._tileStrategy=new ne({cachePolicy:"purge",acquireTile:t=>this.acquireTile(t),releaseTile:t=>this.releaseTile(t),cacheSize:e,tileInfoView:this._tileInfoView}),this._updateBlockCacheRegistry()}detach(){this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),this._fetchQueue=this._tileStrategy=this._tileInfoView=null,ae(this._blockCacheRegistryUrl,this._blockCacheRegistryId),this._blockCacheRegistryUrl=this._blockCacheRegistryId=null}acquireTile(r){const e=this.container.createTile(r);return this._enqueueTileFetch(e),this.layerView.requestUpdate(),this._needBlockCacheUpdate=!0,this._globalUpdateRequested=this.layerView.hasTilingEffects||!this.useProgressiveUpdate,e}releaseTile(r){this._fetchQueue.abort(r.key.id),this.container.removeChild(r),r.once("detach",()=>{r.destroy(),this.layerView.requestUpdate()}),this.layerView.requestUpdate()}createEmptyTilePixelBlock(r=null){const e=r==null||r.join(",")===this._tileInfoView.tileInfo.size.join(",");if(e&&g(this._emptyTilePixelBlock))return this._emptyTilePixelBlock;r=r||this._tileInfoView.tileInfo.size;const[t,s]=r,i=new ze({width:t,height:s,pixels:[new Uint8Array(t*s)],mask:new Uint8Array(t*s),pixelType:"u8"});return e&&(this._emptyTilePixelBlock=i),i}_getBandIds(){if(!("rasterFunctionChain"in this.container)||!this.container.rasterFunctionChain)return this.layer.bandIds;const{bandIds:r,raster:e}=this.layer,t="rasterFunction"in e?e.rasterFunction.rawInputBandIds:null;return r!=null&&r.length&&(t!=null&&t.length)&&e.rasterInfo.bandCount!==1?r.map(s=>t[Math.min(s,t.length-1)]):r||t}updateRasterFunctionParameters(){}_fetchTile1(r,e){const t=g(e)?e.signal:null,s=this.canUseWebGLForProcessing(),{layerView:i}=this,{tileInfo:a}=i,o=!a.isWrappable&&g(st(i.view.spatialReference)),n=s&&this.layer.raster.hasUniqueSourceStorageInfo,l={allowPartialFill:!0,datumTransformation:i.datumTransformation,interpolation:s?"nearest":this.layer.interpolation,registryId:this._blockCacheRegistryId,requestRawData:n,skipRasterFunction:this.type==="raster"&&this.container.rasterFunctionChain!=null,signal:q(t),srcResolution:this._srcResolutions[r.level],timeExtent:i.timeExtent,tileInfo:a,disableWrapAround:o};return this.fetchTile(r,l)}_getCacheSize(r){return r?40:0}_initializeTileInfo(){const{layerView:r}=this,e=r.view.spatialReference,t=new et({x:r.fullExtent.xmin,y:r.fullExtent.ymax,spatialReference:e});if(this._canUseLayerLODs()){const{lods:n}=this.layer.tileInfo,l=n.map(({scale:p})=>p),u=A.create({spatialReference:e,size:S,scales:l}),h=e.isGeographic?.01*1e-5:.01;if(this._isCustomTilingScheme=Math.abs(u.origin.x-t.x)>h,(u.origin.x===0||u.origin.x>t.x)&&(u.origin=t),!this._isCustomTilingScheme){const p=A.create({spatialReference:e,size:S}).lods.map(({scale:c})=>c);this._isCustomTilingScheme=l.some(c=>!p.some(f=>Math.abs(f-c)<.001))}return r.set("tileInfo",u),void(this._srcResolutions=n.map(({resolution:p})=>({x:p,y:p})))}const{scales:s,srcResolutions:i,isCustomTilingScheme:a}=it(this.layer.rasterInfo,e,S),o=A.create({spatialReference:e,size:S,scales:s});(o.origin.x===0||o.origin.x>t.x)&&(o.origin=t),this._isCustomTilingScheme=a,r.set("tileInfo",o),this._srcResolutions=i??[]}_canUseLayerLODs(){var a;const{layer:r,layerView:e}=this;if(r.raster.tileType!=="Map")return!1;const{lods:t}=r.tileInfo,s=(a=e.view.constraints)==null?void 0:a.effectiveLODs;if(!((s==null?void 0:s.length)===t.length&&s.every(({scale:o},n)=>Math.abs(o-t[n].scale)<.001)))return!1;const i=[];for(let o=0;o<t.length-1;o++)i.push(Math.round(10*t[o].resolution/t[o+1].resolution)/10);return i.some(o=>o!==o[0])}_computeFetchConcurrency(){const{blockBoundary:r}=this.layer.rasterInfo.storageInfo,e=r[r.length-1];return(e.maxCol-e.minCol+1)*(e.maxRow-e.minRow+1)>64?2:10}async _enqueueTileFetch(r,e){this.updatingHandles.addPromise(this._enqueueTileFetch1(r,e))}async _enqueueTileFetch1(r,e){var t;if(!this._fetchQueue.has(r.key.id)){try{const s=await this._fetchQueue.push(r.key),i=this._getBandIds();let a=!this.useProgressiveUpdate||this.layerView.hasTilingEffects&&!this._globalSymbolizerParams;if(this._globalUpdateRequested&&!this.layerView.moving&&this._fetchQueue.length===0){a=!1;try{await this._redrawImage((t=this._abortController)==null?void 0:t.signal)}catch(l){M(l)&&F.getLogger(this.declaredClass).error(l)}this._globalUpdateRequested=!1}!this.canUseWebGLForProcessing()&&this.type!=="rasterVF"||this.layerView.hasTilingEffects||this._symbolizerParams!=null||this._updateSymbolizerParams();const o=this._tileInfoView.getTileCoords(Cr,r.key),n=this._tileInfoView.getTileResolution(r.key);await this.updateTileSource(r,{source:s,symbolizerParams:this._symbolizerParams,globalSymbolizerParams:this._globalSymbolizerParams,suspended:a,bandIds:i,coords:o,resolution:n}),r.once("attach",()=>this.layerView.requestUpdate()),this.container.addChild(r)}catch(s){M(s)||F.getLogger(this.declaredClass).error(s)}this.layerView.requestUpdate()}}async _redrawImage(r){if(this.container.children.length===0)return;await this.layer.updateRenderer(),this.layerView.hasTilingEffects?await this._updateGlobalSymbolizerParams(r):(this._updateSymbolizerParams(),this._globalSymbolizerParams=null);const e=this.container.children.map(async t=>this.updateTileSymbolizerParameters(t,{local:this._symbolizerParams,global:this._globalSymbolizerParams}));await X(e),this.container.requestRender()}async _updateGlobalSymbolizerParams(r){const e={srcResolution:this._srcResolutions[this.previousLOD.level],registryId:this._blockCacheRegistryId,signal:r},t=await this.layer.fetchPixels(this.layerView.view.extent,this.layerView.view.width,this.layerView.view.height,e);if(!t||!t.pixelBlock)return;const{resolution:s}=this.previousLOD,i=this._getBandIds(),a=this.layer.symbolizer.generateWebGLParameters({pixelBlock:he(t.pixelBlock,i),isGCS:this.layerView.view.spatialReference.isGeographic,resolution:{x:s,y:s},bandIds:i});!this.canUseWebGLForProcessing()&&a&&a.type==="stretch"&&this.layer.renderer&&this.layer.renderer.type==="raster-stretch"&&(a.factor=a.factor.map(o=>255*o),a.outMin=Math.round(255*a.outMin),a.outMax=Math.round(255*a.outMax)),this._globalSymbolizerParams=a}_updateSymbolizerParams(){const{resolution:r}=this.previousLOD,e=this._getBandIds();this._symbolizerParams=this.layer.symbolizer.generateWebGLParameters({pixelBlock:null,isGCS:this.layerView.view.spatialReference.isGeographic,resolution:{x:r,y:r},bandIds:e})}_updateBlockCacheRegistry(r=!1){const{layer:e,layerView:t}=this,{url:s,raster:i}=e,{multidimensionalDefinition:a}=e.normalizeRasterFetchOptions({multidimensionalDefinition:e.multidimensionalDefinition,timeExtent:t.timeExtent}),o=i.rasterInfo.multidimensionalInfo?i.getSliceIndex(a):null,n=rt(s,o);if(n!==this._blockCacheRegistryUrl){if(this._blockCacheRegistryUrl!=null&&ae(this._blockCacheRegistryUrl,this._blockCacheRegistryId),this._blockCacheRegistryId=tt(n,i.rasterInfo),r){const{view:l}=t,u=this._tileInfoView.getClosestInfoForScale(l.scale),h=this._srcResolutions[u.level];ie(n,this._blockCacheRegistryId,l.extent,l.resolution,h,i.ioConfig.sampling)}this._blockCacheRegistryUrl=n}}async doRefresh(){if(!this.attached)return;await this.layer.updateRenderer(),this.layerView.hasTilingEffects||this._updateSymbolizerParams(),this._updateBlockCacheRegistry(!0),this._fetchQueue.reset();const r=[];this._globalUpdateRequested=this.layerView.hasTilingEffects||!this.useProgressiveUpdate,this._tileStrategy.tiles.forEach(e=>r.push(this._enqueueTileFetch(e))),await X(r)}};m([d()],_.prototype,"_fetchQueue",void 0),m([d()],_.prototype,"_globalUpdateRequested",void 0),m([d()],_.prototype,"attached",void 0),m([d()],_.prototype,"container",void 0),m([d()],_.prototype,"layer",void 0),m([d()],_.prototype,"layerView",void 0),m([d()],_.prototype,"type",void 0),m([d()],_.prototype,"useWebGLForProcessing",null),m([d()],_.prototype,"useProgressiveUpdate",null),m([d()],_.prototype,"timeExtent",void 0),m([d()],_.prototype,"updating",null),_=m([V("esri.views.2d.layers.imagery.BaseImageryTileSubView2D")],_);let I=class extends _{constructor(){super(...arguments),this.type="raster"}attach(){super.attach(),this.container=new Fr(this._tileInfoView),this.container.isCustomTilingScheme=this._isCustomTilingScheme,this.updateRasterFunctionParameters()}detach(){super.detach(),this.container.removeAllChildren(),this.container=null}canUseWebGLForProcessing(){return this.useWebGLForProcessing&&this.layer.symbolizer.canRenderInWebGL&&!(this.layer.interpolation==="majority"&&de(this.layer))}fetchTile(e,t){return this.layer.fetchTile(e.level,e.row,e.col,t)}updateRasterFunctionParameters(){const{raster:e,type:t}=this.layer,{container:s}=this;if(e.datasetFormat!=="Function"||t==="wcs")return s.rasterFunctionChain=null,s.children.forEach(c=>{const{bitmap:f}=c;f&&(f.suspended=!0,f.processed=!1,f.projected&&(f.invalidateTexture(),f.rasterTexture=null))}),void(this._rasterFunctionState="na");const i=this._rasterFunctionState,{rasterFunction:a,primaryRasters:o}=e,n=a.supportsGPU&&(!o||o.rasters.length<=1),l=n?a.getFlatWebGLFunctionChain():null,{renderer:u}=this.layer,h=!n||!(l!=null&&l.functions.length)||u.type==="raster-stretch"&&u.dynamicRangeAdjustment||!this.canUseWebGLForProcessing();s.rasterFunctionChain=h?null:l;const p=a==null?"na":s.rasterFunctionChain?"gpu":"cpu";s.children.forEach(c=>{const{bitmap:f}=c;f&&(f.suspended=i!==p,f.processed=!1,f.processedTexture=null)}),this._rasterFunctionState=p}async updateTileSource(e,t){const s=this._getBandIds(),i=this._getLayerInterpolation(),a=this.canUseWebGLForProcessing(),{source:o,globalSymbolizerParams:n,suspended:l,coords:u,resolution:h}=t,p=this.layerView.hasTilingEffects?n:t.symbolizerParams,{bitmap:c}=e;if([c.x,c.y]=u,c.resolution=h,o&&g(o)&&g(o.pixelBlock)){const f={extent:o.extent,pixelBlock:o.pixelBlock};if(c.rawPixelData=f,a)c.source=o.pixelBlock,c.isRendereredSource=!1;else{const v=await this.layer.applyRenderer(f,(n==null?void 0:n.type)==="stretch"?n:void 0);c.source=v,c.isRendereredSource=!0}c.symbolizerParameters=a?p:null,a?c.transformGrid||(c.transformGrid=o.transformGrid):c.transformGrid=null}else{const f=this.createEmptyTilePixelBlock();c.source=f,c.symbolizerParameters=a?p:null,c.transformGrid=null}c.bandIds=a?s:null,c.width=this._tileInfoView.tileInfo.size[0],c.height=this._tileInfoView.tileInfo.size[1],c.interpolation=i,c.suspended=l,c.invalidateTexture()}async updateTileSymbolizerParameters(e,t){const{local:s,global:i}=t,a=this._getBandIds(),o=this._getLayerInterpolation(),n=this.canUseWebGLForProcessing(),{bitmap:l}=e,{rawPixelData:u}=l;!n&&g(u)?(l.source=await this.layer.applyRenderer(u,(i==null?void 0:i.type)==="stretch"?i:void 0),l.isRendereredSource=!0):(l.isRendereredSource&&g(u)&&(l.source=u.pixelBlock),l.isRendereredSource=!1),l.symbolizerParameters=n?this.layerView.hasTilingEffects?i:s:null,l.bandIds=n?a:null,l.interpolation=o,l.suspended=!1}_getLayerInterpolation(){const e=this.layer.renderer.type;if(e==="raster-colormap"||e==="unique-value"||e==="class-breaks")return"nearest";const{interpolation:t}=this.layer,{renderer:s}=this.layer;return s.type==="raster-stretch"&&s.colorRamp!=null?t==="bilinear"||t==="cubic"?"bilinear":"nearest":t}};m([d()],I.prototype,"container",void 0),m([d()],I.prototype,"layer",void 0),m([d()],I.prototype,"type",void 0),I=m([V("esri.views.2d.layers.imagery.ImageryTileView2D")],I);const Mr=I;class zr extends me{constructor(e,t,s,i,a,o,n=null){super(e,t,s,i,a,o),this.tileData=new ve(n),this.tileData.coordScale=[a,o],this.tileData.once("isReady",()=>this.ready())}destroy(){super.destroy(),this.tileData.destroy(),this.tileData=null,this.stage=null}set stencilRef(e){this.tileData.stencilRef=e}get stencilRef(){return this.tileData.stencilRef}_createTransforms(){return{dvs:z(),tileMat3:z()}}setTransform(e){super.setTransform(e);const t=this.resolution/(e.resolution*e.pixelRatio),s=this.transforms.tileMat3,[i,a]=this.tileData.offset,o=[this.x+i*this.resolution,this.y-a*this.resolution],[n,l]=e.toScreenNoRotation([0,0],o),{symbolTileSize:u}=this.tileData.symbolizerParameters,h=Math.round((this.width-this.tileData.offset[0])/u)*u,p=Math.round((this.height-this.tileData.offset[1])/u)*u,c=h/this.rangeX*t,f=p/this.rangeY*t;Me(s,c,0,0,0,f,0,n,l,1),ce(this.transforms.dvs,e.displayViewMat3,s),this.tileData.transforms.dvs=this.transforms.dvs}onAttach(){this.tileData.stage=this.stage}onDetach(){this.tileData.stage=null}}class Vr extends pe{constructor(){super(...arguments),this.isCustomTilingScheme=!1,this.symbolTypes=["triangle"]}createTile(e){const t=this._tileInfoView.getTileBounds(ue(),e),[s,i]=this._tileInfoView.tileInfo.size,a=this._tileInfoView.getTileResolution(e.level);return new zr(e,a,t[0],t[3],s,i)}prepareRenderPasses(e){const t=e.registerRenderPass({name:"imagery (vf tile)",brushes:[Pe],target:()=>this.children.map(s=>s.tileData),drawPhase:k.MAP});return[...super.prepareRenderPasses(e),t]}doRender(e){this.visible&&e.drawPhase===k.MAP&&this.symbolTypes.forEach(t=>{e.renderPass=t,super.doRender(e)})}}let R=class extends _{constructor(){super(...arguments),this._handle=null,this.type="rasterVF"}canUseWebGLForProcessing(){return!1}async fetchTile(r,e){e={...e,interpolation:"nearest",requestProjectedLocalDirections:!0};const t=await this.layer.fetchTile(r.level,r.row,r.col,e);return this.layer.rasterInfo.dataType==="vector-magdir"&&(t!=null&&t.pixelBlock)&&(t.pixelBlock=await this.layer.convertVectorFieldData(t.pixelBlock,e)),t}updateTileSource(r,e){const t=e.symbolizerParams,{tileData:s}=r;s.key=r.key,s.width=this._tileInfoView.tileInfo.size[0],s.height=this._tileInfoView.tileInfo.size[1];const{symbolTileSize:i}=t,{source:a}=e;if(s.offset=this._getTileSymbolOffset(s.key,i),g(a)&&g(a.pixelBlock)){const o={extent:a.extent,pixelBlock:a.pixelBlock};s.rawPixelData=o,s.symbolizerParameters=t,s.source=this._sampleVectorFieldData(a.pixelBlock,t,s.offset)}else{const o=[Math.round((this._tileInfoView.tileInfo[0]-s.offset[0])/i),Math.round((this._tileInfoView.tileInfo[1]-s.offset[1])/i)],n=this.createEmptyTilePixelBlock(o);s.source=n,s.symbolizerParameters=t}return s.invalidateVAO(),Promise.resolve()}updateTileSymbolizerParameters(r,e){var n;const t=e.local,{symbolTileSize:s}=t,{tileData:i}=r;i.offset=this._getTileSymbolOffset(i.key,s);const a=i.symbolizerParameters.symbolTileSize;i.symbolizerParameters=t;const o=(n=i.rawPixelData)==null?void 0:n.pixelBlock;return g(o)&&a!==s&&(i.source=this._sampleVectorFieldData(o,i.symbolizerParameters,i.offset)),Promise.resolve()}attach(){super.attach(),this.container=new Vr(this._tileInfoView),this.container.isCustomTilingScheme=this._isCustomTilingScheme,this._updateSymbolType(this.layer.renderer),this._handle=P(()=>this.layer.renderer,r=>this._updateSymbolType(r))}detach(){var r;super.detach(),this.container.removeAllChildren(),(r=this._handle)==null||r.remove(),this._handle=null,this.container=null}_getTileSymbolOffset(r,e){const t=r.col*this._tileInfoView.tileInfo.size[0]%e,s=r.row*this._tileInfoView.tileInfo.size[1]%e;return[t>e/2?e-t:-t,s>e/2?e-s:-s]}_sampleVectorFieldData(r,e,t){const{symbolTileSize:s}=e;return Ve(r,"vector-uv",s,t)}_updateSymbolType(r){r.type==="vector-field"&&(this.container.symbolTypes=r.style==="wind-barb"?["scalar","triangle"]:r.style==="simple-scalar"?["scalar"]:["triangle"])}};m([d()],R.prototype,"container",void 0),m([d()],R.prototype,"layer",void 0),m([d()],R.prototype,"type",void 0),R=m([V("esri.views.2d.layers.imagery.VectorFieldTileView2D")],R);const Br=R,Gr=r=>{let e=class extends r{constructor(){super(...arguments),this._rasterFieldPrefix="Raster.",this.layer=null,this.view=null,this.tileInfo=null}get fullExtent(){return this._getfullExtent()}_getfullExtent(){return this.projectFullExtent(this.view.spatialReference)}get hasTilingEffects(){return this.layer.renderer&&"dynamicRangeAdjustment"in this.layer.renderer&&this.layer.renderer.dynamicRangeAdjustment}get datumTransformation(){return oe(q(this.layer.fullExtent),this.view.spatialReference,!0)}supportsSpatialReference(t){return!!this.projectFullExtent(t)}projectFullExtent(t){const s=q(this.layer.fullExtent),i=oe(s,t,!1);return at(s,t,i)}async fetchPopupFeatures(t,s){const{layer:i}=this;if(!t)throw new J("imageryTileLayerView:fetchPopupFeatures","Nothing to fetch without area",{layer:i});const{popupEnabled:a}=i,o=ct(i,s);if(!a||xe(o))throw new J("imageryTileLayerView:fetchPopupFeatures","Missing required popupTemplate or popupEnabled",{popupEnabled:a,popupTemplate:o});const n=[],{value:l,magdirValue:u}=await i.identify(t,{timeExtent:this.timeExtent});let h="";if(l&&l.length){h=i.type==="imagery-tile"&&i.hasStandardTime()&&l[0]!=null?l.map(D=>i.getStandardTimeValue(D)).join(", "):l.join(", ");const p={ObjectId:0};p["Raster.ServicePixelValue"]=h;const c=i.rasterInfo.attributeTable;if(g(c)){const{fields:D,features:ye}=c,H=D.find(({name:T})=>T.toLowerCase()==="value"),B=H?ye.find(T=>String(T.attributes[H.name])===h):null;if(B)for(const T in B.attributes)B.attributes.hasOwnProperty(T)&&(p[this._rasterFieldPrefix+T]=B.attributes[T])}const f=i.rasterInfo.dataType;f!=="vector-magdir"&&f!=="vector-uv"||(p["Raster.Magnitude"]=u==null?void 0:u[0],p["Raster.Direction"]=u==null?void 0:u[1]);const v=new le(this.fullExtent.clone(),null,p);v.layer=i,v.sourceLayer=v.layer,n.push(v)}return n}};return m([d()],e.prototype,"layer",void 0),m([d(ut)],e.prototype,"timeExtent",void 0),m([d()],e.prototype,"view",void 0),m([d()],e.prototype,"fullExtent",null),m([d()],e.prototype,"tileInfo",void 0),m([d({readOnly:!0})],e.prototype,"hasTilingEffects",null),e=m([V("esri.views.layers.ImageryTileLayerView")],e),e};let U=class extends Gr(ht(Re(Ue))){constructor(){super(...arguments),this._useWebGLForProcessing=!0,this._useProgressiveUpdate=!0,this.subview=null}get useWebGLForProcessing(){return this._useWebGLForProcessing}set useWebGLForProcessing(r){this._useWebGLForProcessing=r,this.subview&&"useWebGLForProcessing"in this.subview&&(this.subview.useWebGLForProcessing=r)}get useProgressiveUpdate(){return this._useWebGLForProcessing}set useProgressiveUpdate(r){this._useProgressiveUpdate=r,this.subview&&"useProgressiveUpdate"in this.subview&&(this.subview.useProgressiveUpdate=r)}update(r){var e;(e=this.subview)==null||e.update(r),this.notifyChange("updating")}isUpdating(){return!this.subview||this.subview.updating}attach(){this.layer.increaseRasterJobHandlerUsage(),this._updateSubview(),this.addAttachHandles([P(()=>{const{layer:r}=this;return{bandIds:r.bandIds,renderer:r.renderer,interpolation:r.interpolation,multidimensionalDefinition:r.multidimensionalDefinition,rasterFunction:r.type==="imagery-tile"?r.rasterFunction:null}},(r,e)=>{var l,u;const t=r.interpolation!==(e==null?void 0:e.interpolation)&&(r.interpolation==="majority"||(e==null?void 0:e.interpolation)==="majority")&&de(this.layer),s=r.renderer!==(e==null?void 0:e.renderer)&&((l=e==null?void 0:e.renderer)==null?void 0:l.type)!==((u=r.renderer)==null?void 0:u.type);s&&this._updateSubview();const i=r.multidimensionalDefinition!==(e==null?void 0:e.multidimensionalDefinition),a=r.rasterFunction!==(e==null?void 0:e.rasterFunction),o=a&&!this._useWebGLForProcessing,n=i||t||s||o;this.subview.redrawOrRefetch({refetch:n,reprocess:a}).catch(h=>{M(h)||F.getLogger(this.declaredClass).error(h)}),this.notifyChange("updating")}),P(()=>this.layer.blendMode??"normal",r=>{this.subview.container.blendMode=r},Y),P(()=>this.layer.effect??null,r=>{this.subview.container.effect=r},Y),P(()=>this.layer.multidimensionalSubset??null,(r,e)=>{const{multidimensionalDefinition:t}=this.layer;g(t)&&K(t,r)!==K(t,e)&&(this.subview.redrawOrRefetch({refetch:!0}).catch(s=>{M(s)||F.getLogger(this.declaredClass).error(s)}),this.notifyChange("updating"))},we),P(()=>this.timeExtent,()=>{this.subview.timeExtent=this.timeExtent,this.subview.redrawOrRefetch({refetch:!0}).catch(r=>{M(r)||F.getLogger(this.declaredClass).error(r)})},Te)])}detach(){var r;this.layer.decreaseRasterJobHandlerUsage(),this._detachSubview(this.subview),(r=this.subview)==null||r.destroy(),this.subview=null}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.subview.moveEnd()}async hitTest(r,e){return[{type:"graphic",layer:this.layer,mapPoint:r,graphic:new le({attributes:{},geometry:r.clone()})}]}doRefresh(){return this.subview?this.subview.doRefresh():Promise.resolve()}_updateSubview(){var s;const r=this.layer.renderer.type==="vector-field"?"rasterVF":this.layer.renderer.type==="flow"?"flow":"raster";if(this.subview){if(this.subview.type===r)return void this._attachSubview(this.subview);this._detachSubview(this.subview),(s=this.subview)==null||s.destroy(),this.subview=null}const{layer:e}=this;let t;if(t=r==="rasterVF"?new Br({layer:e,layerView:this}):r==="flow"?new Ie({layer:e,layerView:this}):new Mr({layer:e,layerView:this}),"useWebGLForProcessing"in t&&(t.useWebGLForProcessing=this._useWebGLForProcessing),"useProgressiveUpdate"in t&&(t.useProgressiveUpdate=this._useProgressiveUpdate),"previousLOD"in t){const{subview:i}=this;t.previousLOD=i&&"previousLOD"in i?i.previousLOD:null}this._attachSubview(t),this.subview=t,this.requestUpdate()}_attachSubview(r){r&&!r.attached&&(r.attach(),r.attached=!0,this.container.addChildAt(r.container,0),r.container.blendMode=this.layer.blendMode,r.container.effect=this.layer.effect)}_detachSubview(r){r!=null&&r.attached&&(this.container.removeChild(r.container),r.detach(),r.attached=!1)}};m([d()],U.prototype,"subview",void 0),m([d()],U.prototype,"useWebGLForProcessing",null),m([d()],U.prototype,"useProgressiveUpdate",null),U=m([V("esri.views.2d.layers.ImageryTileLayerView2D")],U);const Ao=U;export{Ao as default};
