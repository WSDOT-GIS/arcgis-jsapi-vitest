import{x as v,p as d,c as h}from"./symbols-d9f90967.js";import{c as C,a as $}from"./devEnvironmentUtils-5002a058.js";import{a as N}from"./Error-781981d1.js";import{h as F,r as S}from"./typedArrayUtil-74bbfd45.js";import{L as u,c as U}from"./request-b4e08038.js";import{b as w}from"./Portal-0799d17c.js";import{c as g}from"./persistableUrlUtils-5532b98d.js";import{y as D}from"./jsonUtils-40aff029.js";import{p as L,b as M,j as P,d as j,U as R}from"./styleUtils-2aef9fa3.js";import"./ensureType-125d327f.js";import"./string-75082bc6.js";import"./Accessor-815cb0cf.js";import"./watch-c7facfb0.js";import"./ArrayPool-ae2ef0ab.js";import"./nextTick-3ee5a785.js";import"./promiseUtils-28f2a985.js";import"./CIMSymbol-2f4be01b.js";import"./enumeration-94b1319d.js";import"./cast-f7d2a22f.js";import"./Extent-8fae2379.js";import"./JSONSupport-2b897629.js";import"./fieldUtils-39eb4f5d.js";import"./preload-helper-101896b7.js";import"./geometry-0d19f94b.js";import"./Polyline-40b9e769.js";import"./typeUtils-3bf84b36.js";import"./Color-5e799d63.js";import"./colorUtils-639f4d25.js";import"./mathUtils-15f63a45.js";import"./screenUtils-7afeb41c.js";import"./opacityUtils-107b33de.js";import"./symbolLayerUtils3D-15190f75.js";import"./aaBoundingBox-5e14079b.js";import"./Collection-912f4315.js";import"./Evented-3dfb26f2.js";import"./SimpleObservable-729c9019.js";import"./collectionUtils-5a99c1c0.js";import"./Clonable-6d5134c7.js";import"./Loadable-6776e4d9.js";import"./Promise-092442f7.js";import"./locale-30120714.js";import"./PortalGroup-d3a43002.js";import"./PortalUser-092553f2.js";import"./layerUtils-0d596ed5.js";function xt(t,r,o,m){return t.name?t.styleName&&t.styleName==="Esri2DPointSymbolsStyle"?W(t,r,m):L(t,r,m).then(a=>T(F(a),t.name,r,o,m)):Promise.reject(new N("symbolstyleutils:style-symbol-reference-name-missing","Missing name in style symbol reference"))}function T(t,r,o,m,a){var f;const y=t.data,l=o&&S(o.portal)?o.portal:w.getDefault(),c={portal:l,url:u(t.baseUrl),origin:"portal-item"},p=y.items.find(i=>i.name===r);if(!p){const i=`The symbol name '${r}' could not be found`;return Promise.reject(new N("symbolstyleutils:symbol-name-not-found",i,{symbolName:r}))}let n=g(M(p,m),c),s=((f=p.thumbnail)==null?void 0:f.href)??null;const b=p.thumbnail&&p.thumbnail.imageData;C()&&(n=$(n)??"",s=$(s));const O={portal:l,url:u(U(n)),origin:"portal-item"};return P(n,a).then(i=>{const x=m==="cimRef"?j(i.data):i.data,e=D(x,O);if(e&&v(e)){if(s){const E=g(s,c);e.thumbnail=new d({url:E})}else b&&(e.thumbnail=new d({url:`data:image/png;base64,${b}`}));t.styleUrl?e.styleOrigin=new h({portal:o.portal,styleUrl:t.styleUrl,name:r}):t.styleName&&(e.styleOrigin=new h({portal:o.portal,styleName:t.styleName,name:r}))}return e})}function W(t,r,o){const m=R.replace(/\{SymbolName\}/gi,t.name),a=S(r.portal)?r.portal:w.getDefault();return P(m,o).then(y=>{const l=j(y.data);return D(l,{portal:a,url:u(U(m)),origin:"portal-item"})})}export{T as fetchSymbolFromStyle,xt as resolveWebStyleSymbol};
